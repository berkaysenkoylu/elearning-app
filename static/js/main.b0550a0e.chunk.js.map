{"version":3,"sources":["components/Admin/AdminNavigation/AdminAccordionMenu/AdminAccordionMenuItem/AdminAccordionMenuItem.module.scss","components/Admin/CourseManagement/Course/CourseHome/SectionItem/SectionItem.module.scss","components/UI/Accordion/Accordion.module.scss","components/Admin/CourseManagement/CreateCourse/CreateCourse.module.scss","components/Admin/CourseManagement/CourseEnrollment/CourseEnrollment.module.scss","containers/DragAndDrop/DragAndDrop.module.scss","components/Account/PasswordChange/PasswordChange.module.scss","components/Account/AccountDataChange/AccountDataChange.module.scss","components/Chat/ChatWindow/ChatMessage/ChatMessage.module.scss","components/Navigation/UserMessage/UserMessage.module.scss","components/CourseInfo/CourseInfo.module.scss","components/CourseForum/CreatePost/CreatePost.module.scss","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/CreatePostComment/CreatePostComment.module.scss","components/Modal/Modal.module.scss","components/Quiz/QuizEnd/QuizEnd.module.scss","components/Quiz/QuizEnd/QuestionResult/QuestionResult.module.scss","assets/images/sprite.svg","components/Questionnaire/Question/SliderQuestion/SliderQuestion.module.scss","components/Admin/AdminNavigation/AdminAccordionMenu/AdminAccordionMenu.module.scss","components/UI/Table/Table.module.scss","components/Admin/CourseManagement/Course/CourseActivities/CreateQuiz/CreateQuiz.module.scss","components/Navigation/AccountItem/AccountItem.module.scss","components/Auth/PasswordReset/PasswordReset.module.scss","containers/CourseList/CourseList.module.scss","components/CourseForum/PostList/PostDetail/AuthorInfo/AuthorInfo.module.scss","components/CourseSection/CourseSubSectionSidebar/CourseSectionSidebarItem/CourseSectionSidebarItem.module.scss","components/UI/RadioButton/RadioButton.module.scss","components/UI/InfoBox/InfoBox.module.scss","components/UI/MiniButton/MiniButton.module.scss","components/Admin/CourseManagement/Course/CourseHome/SectionItem/SubSectionItem/SubSectionItem.module.scss","components/FileUpload/FileUpload.module.scss","components/Admin/CourseManagement/CourseList/AdminCourseList.module.scss","components/Admin/CourseManagement/CourseEnrollment/UserPool/UserItem/UserItem.module.scss","components/Admin/UserManagement/AdminUserList/AdminUserCard/AdminUserCard.module.scss","components/Admin/UserManagement/CreateUser/CreateUser.module.scss","components/Chat/ChatWindow/ChatWindow.module.scss","components/Navigation/Toolbar/Toolbar.module.scss","components/Navigation/NavigationItems/NavigationItems.module.scss","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.scss","components/Auth/SignupSuccess/SignupSuccess.module.scss","components/Loader/Loader.module.scss","containers/Course/Course.module.scss","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/PostComment.module.scss","components/CourseMenu/CourseMenu.module.scss","components/Quiz/QuizIntro/QuizIntro.module.scss","components/ProgressBar/ProgressBar.module.scss","components/Questionnaire/Intro/Intro.module.scss","components/Questionnaire/Content/Content.module.scss","components/Questionnaire/Question/MultipleChoiceQuestion/MultipleChoiceQuestion.module.scss","components/Questionnaire/Question/SliderCombinationQuestion/SliderCombinationQuestion.module.scss","containers/CourseList/CourseListElement/CourseListElement.module.scss","components/Graph/Graph.module.scss","components/Admin/CourseManagement/Course/CourseStats/CourseStats.module.scss","components/PasswordFeedback/FeedbackCondition/FeedbackCondition.module.scss","components/Admin/CourseManagement/Course/CreateSubSection/SectionFormControl/SectionFormControl.module.scss","components/UI/SelectInput/SelectInput.module.scss","components/Admin/CourseManagement/CourseEnrollment/UserPool/UserPool.module.scss","components/Admin/UserManagement/AdminUserList/AdminUserList.module.scss","components/CourseForum/CourseForum.module.scss","components/CourseForum/PostList/PostList.module.scss","components/Paginator/Paginator.module.scss","components/Paginator/PrevButton/PrevButton.module.scss","components/Paginator/NextButton/NextButton.module.scss","components/Quiz/QuizContainer.module.scss","components/Questionnaire/Questionnaire.module.scss","components/CourseForum/PostList/PostDetail/PostDetail.module.scss","components/Admin/AdminHome/AdminHome.module.scss","components/Admin/AdminNavigation/AdminNavigation.module.scss","components/PasswordFeedback/PasswordFeedback.module.scss","components/UI/Select/Select.module.scss","components/UI/Menu/MenuItem/MenuItem.module.scss","components/UI/PageBreak/PageBreak.module.scss","components/UI/File/File.module.scss","components/UI/SelectInput/Options/Options.module.scss","components/UI/SelectInput/Options/Option/Option.module.scss","components/UI/ListElement/ListElement.module.scss","components/Admin/Administration.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/Chat/Chat.module.scss","components/Chat/Sidebar/Sidebar.module.scss","components/UI/Logo/Logo.module.scss","components/Navigation/UserMessage/MessagesList/MessagesList.module.scss","containers/Authentication/Authentication.module.scss","components/CourseNavigation/CourseNavigation.module.scss","components/CourseForum/PostList/PostDetail/PostCommentList/PostCommentList.module.scss","components/Paginator/PaginationRange/PaginationRange.module.scss","components/CourseSection/CourseSubSectionSidebar/CourseSubSectionSidebar.module.scss","components/Quiz/QuizContent/QuizContent.module.scss","components/Quiz/QuizContent/SuccessCheck/SuccessCheck.module.scss","components/Questionnaire/Finish/Finish.module.scss","components/Questionnaire/Question/Question.module.scss","components/CourseSection/CourseSection.module.scss","components/Admin/AdminHome/FeaturedInfo/FeaturedInfo.module.scss","components/Admin/CourseManagement/Course/CourseHome/CourseHome.module.scss","components/UI/Input/Input.module.scss","components/Auth/Login/Login.module.scss","assets/images/spine.jpg","components/UI/Button/Button.module.scss","components/Navigation/UserMessage/MessagesList/MessageListItem/MessageListItem.module.scss","assets/anim sync /^/.*$","assets/exampleData.js","utility/firstLetterUpper.js","components/UI/InfoBox/InfoBox.js","components/Admin/AdminHome/FeaturedInfo/FeaturedInfo.js","components/Graph/Graph.js","components/Admin/AdminHome/AdminHome.js","components/Admin/AdminNavigation/AdminAccordionMenu/AdminAccordionMenuItem/AdminAccordionMenuItem.js","components/Admin/AdminNavigation/AdminAccordionMenu/AdminAccordionMenu.js","assets/admin_dashborad_data.js","components/Admin/AdminNavigation/AdminNavigation.js","utility/apiUrl.js","axiosUtility/axios-admin.js","utility/formValidation.js","components/UI/MiniButton/MiniButton.js","components/UI/Table/Table.js","components/Admin/CourseManagement/Course/CourseStats/QuizStats/QuizStats.js","components/Admin/CourseManagement/Course/CourseStats/CourseStats.js","components/Admin/CourseManagement/Course/CourseHome/SectionItem/SubSectionItem/SubSectionItem.js","components/Admin/CourseManagement/Course/CourseHome/SectionItem/SectionItem.js","components/PasswordFeedback/FeedbackCondition/FeedbackCondition.js","components/PasswordFeedback/PasswordFeedback.js","components/UI/Input/Input.js","components/UI/Button/Button.js","components/UI/Accordion/Accordion.js","components/UI/Select/Select.js","components/Admin/CourseManagement/Course/CourseHome/CourseHome.js","utility/addInputField.js","components/UI/Menu/MenuItem/MenuItem.js","components/UI/Menu/Menu.js","components/UI/PageBreak/PageBreak.js","components/Admin/CourseManagement/Course/CreateSubSection/SectionFormControl/SectionFormControl.js","components/Admin/CourseManagement/Course/CreateSubSection/CreateSubSection.js","components/UI/File/File.js","containers/DragAndDrop/DragAndDrop.js","components/FileUpload/FileUpload.js","components/Admin/CourseManagement/Course/CourseActivities/CreateQuiz/CreateQuiz.js","components/Admin/CourseManagement/Course/Course.js","components/UI/Counter/Counter.js","components/UI/SelectInput/Options/Option/Option.js","components/UI/SelectInput/Options/Options.js","components/UI/SelectInput/SelectInput.js","components/Admin/CourseManagement/CreateCourse/CreateCourse.js","components/UI/ListElement/ListElement.js","components/Admin/CourseManagement/CourseList/CourseCard/CourseCard.js","components/Admin/CourseManagement/CourseList/AdminCourseList.js","components/Admin/CourseManagement/CourseEnrollment/UserPool/UserItem/UserItem.js","components/Admin/CourseManagement/CourseEnrollment/UserPool/UserPool.js","components/Admin/CourseManagement/CourseEnrollment/CourseEnrollment.js","components/Admin/CourseManagement/CourseManagement.js","components/Admin/UserManagement/AdminUserList/AdminUserCard/AdminUserCard.js","components/Admin/UserManagement/AdminUserList/AdminUserList.js","hooks/usePasswordValidation.js","components/Admin/UserManagement/CreateUser/CreateUser.js","components/Admin/UserManagement/UserManagement.js","components/Admin/Administration.js","axiosUtility/axios-auth.js","store/actions/auth.js","store/actions/actionTypes.js","components/UI/Backdrop/Backdrop.js","components/FeedbackDialogue/FeedbackDialogue.js","utility/changeInputObjectValue.js","components/Account/PasswordChange/PasswordChange.js","components/Account/AccountDataChange/AccountDataChange.js","components/Account/Account.js","components/Chat/Sidebar/UserItem/UserItem.js","components/Chat/Sidebar/Sidebar.js","hooks/useVisibility.js","hooks/useCurrentTab.js","components/Chat/ChatWindow/ChatMessage/ChatMessage.js","components/Chat/ChatWindow/ChatWindow.js","components/Chat/Chat.js","components/UI/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","hooks/useComponentVisible.js","components/Navigation/AccountItem/AccountItem.js","components/Navigation/UserMessage/MessagesList/MessageListItem/MessageListItem.js","components/Navigation/UserMessage/MessagesList/MessagesList.js","components/Navigation/UserMessage/UserMessage.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","components/Home/Home.js","components/Auth/Login/Login.js","components/Auth/Signup/Signup.js","components/Auth/SignupSuccess/SignupSuccess.js","components/Auth/RequestPasswordReset/RequestPasswordReset.js","components/Auth/PasswordReset/PasswordReset.js","containers/Authentication/Authentication.js","components/Loader/Loader.js","axiosUtility/axios-course.js","containers/CourseList/CourseListElement/CourseListElement.js","containers/CourseList/CourseList.js","axiosUtility/axios-forum.js","axiosUtility/axios-post.js","components/CourseNavigation/CourseNavigationItem/CourseNavigationItem.js","components/CourseNavigation/CourseNavigation.js","components/CourseInfo/CourseInfo.js","components/CourseForum/CreatePost/CreatePost.js","components/CourseForum/PostList/Post/Post.js","components/CourseForum/PostList/PostList.js","components/CourseForum/PostList/PostDetail/AuthorInfo/AuthorInfo.js","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/PostComment.js","components/CourseForum/PostList/PostDetail/PostCommentList/PostCommentList.js","components/Modal/Modal.js","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/CreatePostComment/CreatePostComment.js","components/CourseForum/PostList/PostDetail/PostDetail.js","components/Paginator/PaginationRange/PaginationRange.js","components/Paginator/PrevButton/PrevButton.js","components/Paginator/NextButton/NextButton.js","components/Paginator/Paginator.js","components/CourseForum/CourseForum.js","components/CourseMenu/CourseMenu.js","components/CourseSection/CourseSubSectionSidebar/CourseSectionSidebarItem/CourseSectionSidebarItem.js","components/CourseSection/CourseSubSectionSidebar/CourseSubSectionSidebar.js","components/CourseSection/CourseSubSection/CourseSubSection.js","components/CourseSection/CourseSection.js","components/Quiz/QuizIntro/QuizIntro.js","components/Quiz/QuizEnd/QuestionResult/QuestionResult.js","components/Quiz/QuizEnd/QuizEnd.js","components/UI/RadioButton/RadioButton.js","components/Quiz/QuizContent/SuccessCheck/SuccessCheck.js","components/Quiz/QuizContent/Question/Question.js","components/ProgressBar/ProgressBar.js","components/Quiz/QuizContent/QuizContent.js","components/Quiz/QuizContainer.js","components/Questionnaire/Intro/Intro.js","components/Questionnaire/Finish/Finish.js","components/Questionnaire/Question/MultipleChoiceQuestion/MultipleChoiceQuestion.js","components/Questionnaire/Question/SliderQuestion/SliderQuestion.js","components/Questionnaire/Question/SliderCombinationQuestion/SliderCombinationQuestion.js","utility/updateQuestionaireState.js","components/Questionnaire/Question/Question.js","components/Questionnaire/Content/Content.js","components/Questionnaire/Questionnaire.js","containers/Course/Course.js","containers/CourseContainer/CourseContainer.js","components/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/auth.js","index.js","components/Auth/Signup/Signup.module.scss","components/Quiz/QuizContent/Question/Question.module.scss","components/FeedbackDialogue/FeedbackDialogue.module.scss","components/Chat/Sidebar/UserItem/UserItem.module.scss","components/Admin/CourseManagement/Course/CreateSubSection/CreateSubSection.module.scss","components/UI/Counter/Counter.module.scss","components/Admin/CourseManagement/CourseList/CourseCard/CourseCard.module.scss","components/Account/Account.module.scss","components/Auth/RequestPasswordReset/RequestPasswordReset.module.scss","components/CourseNavigation/CourseNavigationItem/CourseNavigationItem.module.scss","components/CourseForum/PostList/Post/Post.module.scss","components/CourseSection/CourseSubSection/CourseSubSection.module.scss"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","featuredData","revenue","amount","percentage","sales","cost","userData","quizData","_id","firstName","lastName","answers","questionNumber","selectedIndex","correctIndex","isCorrect","firstLettersUpper","string","replace","split","word","toUpperCase","slice","trim","join","InfoBox","props","className","classes","InfoBox__Header","title","InfoBox__Body","children","FeaturedInfo","data","item","key","firstLetterUpper","FeaturedInfo__Body","FeaturedInfo__Body__Amount","FeaturedInfo__Body__Percentage","FeaturedInfo__Body__Icon","FeaturedInfo__Body__Icon__Increase","FeaturedInfo__Body__Icon__Decrease","xlinkHref","svg","FeaturedInfo__Footer","Graph","graphType","pageContent","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","dataKeyxAxis","Label","value","offset","position","YAxis","dataKeyyAxis","angle","textAnchor","Tooltip","Line","type","dataKeyName","stroke","BarChart","Legend","bars","bar","Bar","name","fill","color","Graph__Header","graphTitle","AdminHome","AdminAccordionMenuItem","AdminAccordionMenuItem__Icon","icon","AdminAccordionMenuItem__Label","to","path","AdminAccordionMenuItem__Link","activeClassName","AdminAccordionMenuItem__ActiveLink","exact","isExact","AdminAccordionMenu","isActive","setIsActive","useState","setHeight","innerElementRef","useRef","timeout","useEffect","current","setTimeout","scrollHeight","clearTimeout","innerStyle","aria-expanded","AdminAccordionMenu__label","role","onClick","prevState","label","AdminAccordionMenu__inner","style","aria-hidden","ref","AdminAccordionMenu__content","subItems","index","dashboardData","subMenuItems","AdminNavigation","dashboardItem","BACKEND_ORIGIN","instance","axios","create","baseURL","checkValidity","rules","isValid","required","maxLength","length","minLength","isEmail","test","isURL","isNumeric","containsNumeric","containsSpecial","isEnglishOnly","MiniButton","classList","MiniButton__Active","clicked","Table","TableWrapper","headers","header","rows","row","rowData","Table__Row","showIcon","Table__Row__Icon","changeColor","QuizStats","headerData","questionToUserAnswersData","forEach","question","push","correct","incorrect","i","answer","copiedQuestionData","correctAnswers","filter","parseFloat","toFixed","CourseStats","statPaginationData","setStatPaginationData","CourseStats__Header","button","prevButtonData","onPaginationClickedHandler","SubSectionItem","SubSectionItem__Name","SubSectionItem__Cta","subsectionEdited","subsectionDeleted","SectionItem","sectionData","SectionItem__Name","SectionItem__Add","subsectionAdded","sectionDeleted","SectionItem__List","subsections","subsection","onSubSectionEdited","subsectionId","section","FeedbackCondition","FeedbackCondition__Icon","isTrue","PasswordFeedback","validationMap","setValidationMap","validLength","upperCase","hasNumber","specialChar","visible","setVisible","setWidth","timerRef","scrollWidth","copiedValidationMap","copiedValidationCondition","validation","condition","visibility","Input","passwordFeebackVisible","setPasswordFeedbackVisible","inputElement","inputClasses","InputElement","validationError","touched","Invalid","onInputFocused","event","target","onInputFocusLost","focusLost","elementType","elementConfig","onChange","changed","onBlur","onFocus","TextArea","SelectElement","options","option","displayValue","labelClassList","InputElement__Label","labelColor","InputElement__Label__White","ValidationError","isPassword","passwordValidationMap","Button","btnType","ButtonPrimary","ButtonDanger","ButtonSecondary","btnSize","ButtonSmall","disabled","Accordion","Accordion__label","Accordion__label__border","Accordion__inner","Accordion__content","Select","selectRef","content","alreadyExists","selectChanged","CourseHome","sectionNameFormCtrl","setSectionNameFormCtrl","placeholder","valid","courseActivities","setCourseActivities","courseData","quiz","questionnaire","copiedCourseActivities","copiedQuizData","copiedQuestionnaireData","onSubSectionAddedHandler","sectionId","history","match","url","courseActivityContent","CourseHome__Activities__List","onCourseActivityEdit","activityName","activityId","onCourseActivityDelete","courseActivityDeleted","CourseHome__Header","CourseHome__SectionList__List","sections","deletedSubsection","editedSubsection","deletedSection","CourseHome__SectionList__Cta","copiedFormControl","formValidation","inputChangedHandler","sectionAdded","CourseHome__Activities","CourseHome__Activities__Cta","copiedActivity","selected","link","values","find","createLink","CourseHome__UserEnrollment","enrolledUsers","CourseHome__UserEnrollment__Cta","INPUT_TEMPLATE","addInputField","inputObj","newInputObj","copiedInputObj","inputKey","newFormControl","copiedConfig","MenuItem","Menu","items","menuItemClicked","PageBreak","SectionFormControl","isPageBreak","formControl","inputChanged","showRemove","SectionFormControl__Remove","removed","SECTION_ELEMENTS","withRouter","params","useParams","isEditMode","setIsEditMode","formValid","setFormValid","sectionFormControls","setSectionFormControls","populateFormFields","useCallback","subsectionToEdit","savedSubSectionData","subsectionContent","copiedFormControls","copiedNameFormCtrl","pageBreakCount","currPageBreakIndex","contentKeyArr","j","formControlKeyArr","agent","formControlValue","agentIndex","frmCtrller","toLowerCase","indexOf","formKeyName","checkFormValidity","wholeForm","formCtrl","onFormInputChangedHandler","copiedSectionFormControls","obj","frmCtrl","frmCtrlArr","dupIndex","onFormControlRemovedHandler","nameField","CreateSection","CreateSection__Header","CreateSection__Body","CreateSection__Body__FormField","CreateSection__Body__Menu","formControlArr","formControllerNumbers","ctrller","parseInt","pop","CreateSection__Cta","sectionCount","activeIndex","subSections","Array","currentFormCtrl","formCtrlValue","copiedSubSection","editedSubSection","createdSubSection","File","fileInput","droppedFile","files","selectedFile","preventDefault","click","MIME_TYPE_MAP","DragAndDrop","Component","constructor","super","dropRef","createRef","checkMimeType","file","resetState","this","setState","DropContainer","contentClassList","ContentText","dataTransferFiles","undefined","selectedFileName","dragInHandler","stopPropagation","dragCounter","concat","DropContainerEnter","dataTransfer","newList","ValidFileType","InvalidFileType","dragOutHandler","c","state","dragOverHandler","dropHandler","dropHandle","fileName","fileSelectHandler","fileSelect","preSelectedFileName","componentDidMount","div","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","render","pageContentTemplate","FileSelect","FileUpload","setFile","onSelectFile","input_file","fileSelected","FileUploadHeader","Form","preSelectedFile","CreateQuiz","editMode","setEditMode","quizToEditData","setQuizToEditData","quizNameFormControl","setquizNameFormControl","currentQuizData","copiedQuizNameFormCtrl","CreateQuiz__Header","CreateQuiz__Body","onInputFieldChanged","questionDataUrl","Date","now","toString","CreateQuiz__Cta","formData","FormData","append","onQuizEdited","onQuizCreated","subSectionToEdit","setSubSectionToEdit","config","token","useHistory","onSectionAddedHandler","sectionName","axiosAdmin","post","courseId","then","response","responseData","isSectionAdded","courseListUpdated","newCourseData","onSectionDeletedHandler","delete","isSectionDeleted","copiedCourseData","deletedSectionId","result","newSections","courseSectionDataChangedHandler","newSectionData","onSubsectionDeletedHandler","isSubSectionDeleted","onSubsectionEdit","onSubSectionEditedHandler","put","isSubSectionEdited","onSubSectionCreatedHandler","isSubSectionAdded","onCourseActivityDeletedHandler","activityType","requestUrl","isDeleted","catch","error","console","log","get","isEdited","courseActivityEdited","onCourseActivityEditedHandler","isAdded","courseActivityAdded","onCourseActivityCreatedHandler","sectionList","Counter","counter","setCounter","initialValue","counterChanged","isIncrement","newCounter","counterAmountChanged","Counter__Label","Counter__Body","Counter__Button","Counter__Amount","Option","onOptionSelected","Options","optionSelectedHandler","selectedOption","show","SelectOptions","optionsRef","SelectInput","showOptions","setShowOptions","buttonRef","document","handleClickOutside","contains","SelectInputWrapper","itemPerPageList","valueSelected","itemPerPage","QUIZ_LIST","CreateCourse","courseDataFormControls","setCourseDataFormControls","image","description","facultyFormControls","setFacultyFormControls","selectedQuiz","setSelectedQuiz","savedCourseData","copiedImageFormCtrl","landing","copiedDescFormCtrl","info","copiedFacultyFormControls","faculty","facultyMember","facultyArr","createFormContent","formControls","formType","operationType","inputtedValue","copiedFacultyFormCtrl","copiedCourseDataFormControls","copiedFormCtrl","onInputChangedHandler","CreateCourse__Header","CreateCourse__Body","CreateCourse__Faculty","operation","keyArr","formCtrlCount","onCounterAmountChangedHandler","CreateCourse__Cta","facultyFrmCtrl","courseEdited","courseCreated","ListElement","CourseCard","landingData","courseName","backgroundImage","CourseCard__ImgSection","CourseCard__Name","courseNameClicked","CourseCard__Body","CourseCard__Body__Icon","person","CourseCard__Cta","coursePublish","isPublished","courseEdit","courseDelete","AdminCourseList","AdminCourseList__Header","AdminCourseList__Body","courseList","course","onCourseEdited","onCourseDeleted","onCoursePublished","onCourseNameClicked","UserItem","isSelected","UserItem__Active","userSelect","UserPool","UserPool__Body","userList","user","userSelected","CourseEnrollment","setEnrolledUsers","nonEnrolledUsers","setNonEnrolledUsers","idArr","modifiedUserList","status","onUserSelectedHandler","action","userId","copiedList","onUserEnrollmentChangedHandler","copiedEnrolledUsers","copiedNonEnrolledUsers","CourseEnrollment__Header","CourseEnrollment__Body","CourseEnrollment__Body__Cta","CourseEnrollment__Cta","onUserEnrollmentSubmitted","enrolledUser","CourseManagement","selectedCourse","setSelectedCourse","courseToEdit","setCourseToEdit","setCourseList","setUserList","onCourseNameClickedHandler","onCourseCreatedHandler","newCourseList","addedProduct","onCourseEditHandler","onCourseEditedHandler","copiedCourseList","newCourse","onCourseDeletedHandler","removedItemId","onCoursePublishedHandler","success","onCourseListUpdatedHandler","onUserEnrollmentSubmittedHandler","submittedUsers","areUsersEnrolled","routes","AdminUserCard","AdminUserCard__Body","email","AdminUserCard__Cta","userEdit","userDelete","AdminUserList","AdminUserList__Header","userEdited","userDeleted","usePasswordValidation","password","setValidLength","setHasNumber","setUpperCase","setSpecialChar","CreateUser","React","memo","userDataFormControls","setUserDataFormControls","autoComplete","formIsValid","setFormIsValid","savedUserData","resetFormFields","formContent","copiedUserDataFormControls","CreateUser__Header","CreateUser__Form","newPass","userCreated","UserManagement","userToEdit","setUserToEdit","onUserCreatedHandler","isCreated","newUserList","onUserEditedHandler","editedUserData","copiedUserList","newUserData","onUserDeletedHandler","removedUserId","onUserEdit","connect","Administration","authTimeout","expirationTime","dispatch","logout","loginSuccess","userImage","messages","userMessages","localStorage","removeItem","updateMessages","newMessages","Backdrop","ReactDOM","createPortal","getElementById","FeedbackDialogue","FeedbackDialogue__Button","isError","FeedbackDialogue__Button__Error","FeedbackDialogue__Button__Success","FeedbackDialogueContainer","feedbackMessage","closed","changeInputObjectValue","actualObject","keyName","newData","copiedObject","copiedObjectElement","PasswordChange","passwordChangeFormControls","setPasswordChangeFormControls","oldPassword","newPassword","newPasswordAgain","_validLength","_hasNumber","_upperCase","_specialChar","passwordsMatch","setPasswordsMatch","copiedPasswordChangeFormControls","showMatchWarning","PasswordChange__Header","PasswordChange__Form","PasswordChange__Form__Warning","PasswordChange__Cta","passwordData","passwordChange","AccountDataChange","accountDataFormControls","setAccountDataFormControls","dateOfBirth","gender","copiedAccountDataFormControls","AccountDataChange__Header","AccountDataChange__Form","AccountDataChange__Form__Warning","AccountDataChange__Cta","accountData","accountDataChange","changeAvatar","newImgUrl","newUrl","setUserData","imageFile","setImageFile","feedbackDialogue","setFeedbackDialogue","message","axiosAuth","err","URL","createObjectURL","avatarUrl","imageUrl","Account","Account__Header","Account__Content","Account__Content__ImageContainer","Account__Content__ImageContainer__Image","Account__Content__FormContainer","lastMessageData","messageData","pictureStyle","UserItem__Selected","UserItem__PictureContainer","UserItem__Info","username","UserItem__Time","time","toLocaleTimeString","unreadMessageCount","UserItem__UnreadCount","Sidebar","lastMessageTimes","userToUnreadMessagesMap","lastItem","isRead","receiver","currentUserId","sort","a","b","lastMessage","onUserSelected","selectedUserId","useVisibility","containerRef","isVisible","setIsVisible","currentElement","elementRect","getBoundingClientRect","containerRect","onScroll","useCurrentTab","initValue","isCurrentTab","setIsCurrentTab","tabStateChange","hidden","ChatMessage","elementRef","windowRef","senderAvatar","sender","messageIsRead","isFlipped","ChatMessage__Body","ChatMessage__Body__UserPictureContainer","ChatMessage__Body__Message","ChatMessage__Message__Time","getTime","difference","timeString","getPostCreateTimeDifference","ChatWindow","inputValue","setInputValue","chatWindowRef","chatWindowTargetRef","messageList","ChatWindow__Messages","messageRead","ChatWindow__Cta","messageSent","userSocket","actions","availableUsers","setAvailableUsers","usersToMessageList","setUsersToMessageList","selectedUser","setSelectedUser","currUserId","fetchedUsers","filteredUsers","users","messageToReceiverMap","Chat","emit","senderData","Math","random","messageId","Logo","NavigationItem","Link","ActiveLink","useComponentVisible","initialVisibilityState","isComponentVisible","setIsComponentVisible","handleHideDropdown","parentElement","menuRef","menuHeight","setMenuHeight","profilePictureStyle","AccountItem","AccountItem__Profile","AccountItem__Profile__Picture","AccountItem__Menu","MessageListItem","messageIndex","messageText","messageListItemStyle","userName","MessageListItem__Picture","MessageListItem__Picture__Img","MessageListItem__Content","MessageListItem__Content__Username","MessageListItem__Content__Message","MessageListItem__UnreadCount","MessageListItem__Time","MessagesList","list","unreadCount","userMessageItemClicked","inboxPrevRef","inboxPrevHeight","setInboxPrevHeight","setMessageList","totalUnreadMessageCount","setTotalUnreadMessageCount","totalUnReadMessages","userToLastMessageMap","prototype","hasOwnProperty","call","lastMessageOfUser","toggleMenu","UserMessage","UserMessage__Icon","UserMessage__UnreadCount","UserMessage__InboxPreviewWrapper","UserMessage__InboxPreviewContent","NavigationItems","navList","Navigation","Navigation__Items","Navigation__Auth","isAuth","Toolbar","ToolbarWrapper","Toolbar__Main","userStatus","isAuthenticated","Home","Login","setFormControls","overlayClassList","Login__Overlay","isSignupMode","Login__Overlay__Active","Login__Form","Login__Form__Header","Login__Form__Fields","Login__Form__Cta","forgotPasswordClicked","loginForm","loginFormSubmit","Signup","Signup__Active","onSignupOpened","resetForm","closeSignupPanel","openSignupPanel","Signup__Close","Signup__Form","Signup__Form__Header","Signup__Form__Fields","Signup__Form__Cta","signupForm","signupFormSubmit","SignupSuccess","useDispatch","SignupSuccess__Header","SignupSuccess__Content","RequestPasswordReset","setEmail","requestSent","setRequestSent","copiedEmailFormControl","resetFormSubmitted","emailFormSubmit","loading","reqSuccessfull","RequestPasswordReset__Header","RequestPasswordReset__Cta","RequestPasswordReset__Link","onSubmit","RequestPasswordReset__Body","PasswordReset","resetFormControls","setResetFormControls","passwordRepeat","location","pathname","passwordResetFormSubmitted","passwordResetForm","passwordVerify","resetFormSubmit","formInputs","inputName","ResetedPasswordHeader","PasswordReset__Header","PasswordReset__Form","Authentication","onCloseFeedBackDialogueHandler","showError","onSignupClosedHandler","toggle","signupMode","onForgotPasswordClickedHandler","onLoginFormSubmittedHandler","login","onSignupFormSubmittedHandler","signup","onEmailFormSubmitted","requestPasswordReset","onPasswordResetFormSubmitHandler","resetPassword","redirectPath","signupSuccess","isLoading","successfullSignup","expiresIn","setItem","loginFail","signupFail","passwordResetRequestFail","resetPasswordFail","Loader","Spinner","Circular","viewBox","Stroke","cx","cy","r","strokeWidth","CourseListElement","require","CourseListElement__Side","CourseListElement__Side__Front","CourseListElement__Picture","CourseListElement__Content","CourseListElement__Heading","CourseListElement__Description","CourseListElement__Description__FacultyList","CourseListElement__Description__FacultyList__Item","CourseListElement__Side__Back","CourseListElement__Cta","CourseListElement__Cta__Link","selectCourseListElement","CourseListElement__Cta__Link__Icon","CourseListElement__Cta__Link__Text","CourseList","setIsLoading","axiosCourse","CourseList__Loader","CourseList__Header","CourseList__Content","onCourseClickedHandler","CourseNavigationItem","active","CourseNavigationItem__Active","CourseNavigationItem__Icon","iconName","CourseNavigationItem__Text","CourseNavigation","navItemList","navigationItemClicked","CourseInfo","CourseInfo__Image","src","alt","CourseInfo__Body","CourseInfo__Info","CourseInfo__Faculty","CreatePost","isFormValid","setIsFormValid","prePopulateFormFields","prePopulatedFormFields","copiedTitle","editFormFields","isTitleValid","copiedContent","isContentValid","formFields","CreatePost__Header","CreatePost__Body","CreatePost__Inputs","CreatePost__Cta","editPost","createPost","createPostCancel","Post","postData","postSelected","Post__Title","Post__Author","author","Post__Replies","responses","Post__Views","views","Post__Activity","updateTime","createdAt","PostList","postList","postContent","onPostSelected","PostList__Header","AuthorInfo","imgUrl","userImg","avatarStyle","AuthorInfo__Avatar","AuthorInfo__Avatar__Picture","AuthorInfo__Name","PostComment","commentData","authorData","PostComment__Content","PostComment__Footer","updatedAt","PostCommentList","commentList","c1","c2","comment","Modal","modalClasses","setModalClasses","ModalContainer","customStyle","ModalContainer__Closed","dangerouslySetInnerHTML","__html","CreatePostComment","setPostContent","onCreatePostModalClosedHandler","cancelPostComment","postCommentEnabled","CreatePostComment__Close","CreatePostComment__Header","CreatePostComment__Form","formSubmitted","copiedPostContent","CreatePostComment__Form__Cta","isPostComment","setIsPostComment","togglePostComment","bool","formSubmittedHandler","postId","postCommentSubmit","PostDetailContainer","PostDetail","PostDetail__Header","PostDetail__Header__Title","PostDetail__Header__TimeContainer","PostDetail__Header__TimeContainer__Time","PostDetail__Header__TimeContainer__Tooltip","date","getDate","getMonth","getFullYear","getHours","getMinutes","formatPostCreatedDate","PostDetail__Body","PostDetail__Cta","PostDetail__Cta__Buttons","postDeleted","postEdited","PostComments","PostComments__NoCom","PostDetailContainer__Cta","onBackButtonPressed","PaginationRange","currentPage","maxItem","PrevButton","ArrowIcon","NextButton","Paginator","setItemPerPage","setCurrentPage","pageCount","setPageCount","floor","maxItemCount","pageNumber","pagination","perPage","PaginatorButtons","hasPrevPage","hasNextPage","CourseForum","paginationState","setPaginationState","startIndex","endIndex","showPostDetail","setShowPostDetail","selectedPost","setSelectedPost","isPostEditMode","setIsPostEditMode","postToEdit","setPostToEdit","forumPostList","forumData","posts","onPostDeleted","toggleCreatePostMode","postCommentSubmitted","createPostMode","forumPostCreated","forumPostEdited","CourseForum__Cta","paginationData","CourseMenu","onActivityEnabled","onCourseActivityEnabled","courseSections","CourseMenu__Intro","courseIntro","CourseMenu__Misc","courseQuiz","CourseMenu__Cta","courseSection","onSectionSelect","CourseSectionSidebarItem","listContent","contentTitleArr","subsubsection","onSubSubSectionClicked","currentActive","isSectionActive","CourseSectionSidebarItem__List__Icon","CourseSectionSidebarItem__Main","CourseSectionSidebarItem__List","CourseSubSectionSidebar","contentData","subSectionNavigationData","subSectionMap","subSectionIndex","subSectionPageIndex","subsubSectionIndex","activeSubSectionIndex","newSubSectionSelected","onSubSubSectionClickedHandler","CourseSubSection","subSectionData","subSectionSideBarData","onNewSubSectionSelected","CourseSubSection__Content","CourseSubSection__Content__Header","CourseSubSection__Content__Cta","onBackClicked","CourseSubSection__ButtonIcon","showNext","onNextClicked","CourseSection","isAtIntro","setIsAtIntro","setSubSectionIndex","setSubSectionPageIndex","totalSectionCount","currentSectionLength","goToPrevSubSection","prevSubSectionLength","Section","BackMenu__Button","onBackToMainMenu","BackMenu__Icon","Section__Container","Section__Title","Section__Content","Section__List","Section__ListItem","Section__ListButton","onSubSectionSelectedHandler","Section__ListIcon","newIndices","QuizIntro","QuizIntro__Header","quizTitle","QuizIntro__Cta","onQuizStarted","QuestionResult","classColor","QuestionResult__Icon__Correct","QuestionResult__Icon__Incorrect","QuestionResult__QuestionNumber","QuestionResult__Icon","QuizEnd","visualResult","QuizEnd__Header","QuizEnd__Content","QuizEnd__Content__Text","QuizEnd__Content__Visual","RadioButton","radioRef","checked","RadioGroup","RadioButton__Input","htmlFor","RadioButton__Label","SuccessCheck","defaultOptions","loop","autoplay","animationData","isSuccess","rendererSettings","preserveAspectRatio","window","innerWidth","Question","selectedChoice","setSelectedChoice","showCaseModal","setShowCaseModal","Question__Number","questionCase","Question__Text","questionText","questionType","Question__Text__CaseIcon","Question__Choices","questionChoices","choice","text","onChoiceMarkedHandler","Question__Cta","answered","onAnswerSelected","Question__Select","Question__Select__Icon","ProgressBar","progress","questionAmount","borderTopRightRadius","borderBottomRightRadius","ProgressBar__Background","ProgressBar__Foreground","QuizContent","currentQuestion","setCurrentQuestion","setSuccess","isQuestionAnswered","setIsQuestionAnswered","questionList","questions","questionAnswerList","choices","case","answeredQuestionNumber","choiceIndex","onQuizEnd","QuizContainer","isAtQuizIntro","setIsAtQuizIntro","isQuizFinished","setIsQuizFinished","quizResultData","setQuizResultData","numberOfQuestions","Quiz","Quiz__Exit","onQuizExited","quizReport","Intro","Intro__Header","Intro__Cta","onQuestionnaireStarted","Finish","MultipleChoiceQuestion","questionData","MultipleChoiceQuestion__Text","MultipleChoiceQuestion__Choices","answerSelected","SliderQuestion","SliderQuestion__Text","sliderLabel","SliderQuestion__Slider","SliderQuestion__Slider__Input","min","sliderRange","max","step","sliderStep","onMouseUp","sliderChanged","SliderQuestion__Slider__Input__Value","SliderCombinationQuestion","subSliders","subSlider","sliderConfig","range","qNumber","sliderCombinationValueChanged","sliderIndex","subSliderChanged","SliderCombinationQuestion__Text","SliderCombinationQuestion__SubSliders","updateQuestionaireState","questionConfig","commonConfig","specificConfig","subText","setQuestionConfig","isTouched","setIsTouched","setIsValid","onInputChanged","validationRules","validity","copiedQuestionState","copiedQuestionSpecificConfig","onInputFocusLostHandler","questionAnswerFinish","onSliderCombinationValueChangedHandler","sliderCombData","newSubSliderValues","subSliderValue","newSubSliderData","answerIndex","onMultipleChoiceSelectedHandler","QuestionWrapper","Content","questionnaireQuestions","setQuestionnaireQuestions","answerData","copiedQuestionArr","answeredQuestion","onQuestionFinishedHandler","ContentWrapper","Content__Cta","questionnaireData","questionnaireId","questionNo","questionnaireSubmitted","Questionnaire","isAtQuestionnaireIntro","setIsAtQuestionnaireIntro","questionnaireFinished","setQuestionnaireFinished","questionnaires","onQuestionnaireSubmittedHandler","Questionnaire__Exit","onQuestionnaireExited","Course","courseNavItems","courseForum","currentWeek","sectionIndex","isOnMainMenu","isOnQuizMode","isOnCreatePostMode","isOnQuestionnaireMode","onNavigationItemClickedHandler","modifiedCourseNavItems","onCourseActivityEnabledHandler","onCourseActivityExitedHandler","onSectionSelectedHandler","onBackToMainMenuHandler","onCreatePostModeToggledHandler","onForumPostCreatedHandler","forumId","Authorization","getItem","axiosPost","axiosForum","newForumResponse","forum","onForumPostEditedHandler","onForumPostDeletedHandler","copiedCourseForum","copiedCourseForumPosts","onForumPostRespondedHandler","fetchedCourse","forumResp","courseLandingData","activeNavigation","introduction","coursePageContent","Course__Loader","Course__Title","CourseContainer","component","Logout","async","expirationDate","on","Boolean","hostname","initialState","updateObject","oldObject","updatedProperties","reducer","socket","io","auth","disconnect","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","authReducer","applyMiddleware","thunk","app","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0550a0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminAccordionMenuItem\":\"AdminAccordionMenuItem_AdminAccordionMenuItem__6mrOe\",\"AdminAccordionMenuItem__Icon\":\"AdminAccordionMenuItem_AdminAccordionMenuItem__Icon__6zIql\",\"AdminAccordionMenuItem__Link\":\"AdminAccordionMenuItem_AdminAccordionMenuItem__Link__3mY7W\",\"AdminAccordionMenuItem__ActiveLink\":\"AdminAccordionMenuItem_AdminAccordionMenuItem__ActiveLink__314HQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SectionItem__Name\":\"SectionItem_SectionItem__Name__19KlM\",\"SectionItem__Add\":\"SectionItem_SectionItem__Add__11cel\",\"SectionItem__List\":\"SectionItem_SectionItem__List__16K0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Accordion\":\"Accordion_Accordion__2mIh4\",\"Accordion__label\":\"Accordion_Accordion__label__2qYRj\",\"Accordion__label__border\":\"Accordion_Accordion__label__border__12guk\",\"Accordion__inner\":\"Accordion_Accordion__inner__2keUS\",\"Accordion__content\":\"Accordion_Accordion__content__2Xbve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateCourse\":\"CreateCourse_CreateCourse__31u03\",\"CreateCourse__Header\":\"CreateCourse_CreateCourse__Header__1oLGO\",\"CreateCourse__Body\":\"CreateCourse_CreateCourse__Body__3OSnT\",\"CreateCourse__Cta\":\"CreateCourse_CreateCourse__Cta__18pv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseEnrollment\":\"CourseEnrollment_CourseEnrollment__15_VV\",\"CourseEnrollment__Header\":\"CourseEnrollment_CourseEnrollment__Header__KpOHF\",\"CourseEnrollment__Body\":\"CourseEnrollment_CourseEnrollment__Body__25Nh5\",\"CourseEnrollment__Body__Enrolled\":\"CourseEnrollment_CourseEnrollment__Body__Enrolled__3WHah\",\"CourseEnrollment__Body__NonEnrolled\":\"CourseEnrollment_CourseEnrollment__Body__NonEnrolled__3xXSQ\",\"CourseEnrollment__Body__Cta\":\"CourseEnrollment_CourseEnrollment__Body__Cta__3_kRN\",\"CourseEnrollment__Cta\":\"CourseEnrollment_CourseEnrollment__Cta__C9lhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropContainer\":\"DragAndDrop_DropContainer__2KLQr\",\"DropContainerEnter\":\"DragAndDrop_DropContainerEnter__E2RfR\",\"FileSelect\":\"DragAndDrop_FileSelect__3XUfe\",\"ContentText\":\"DragAndDrop_ContentText__SxNDj\",\"InvalidFileType\":\"DragAndDrop_InvalidFileType__3Tgfe\",\"ValidFileType\":\"DragAndDrop_ValidFileType__IaUB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PasswordChange\":\"PasswordChange_PasswordChange__2zeyq\",\"PasswordChange__Header\":\"PasswordChange_PasswordChange__Header__2CQ2J\",\"PasswordChange__Form__Warning\":\"PasswordChange_PasswordChange__Form__Warning__16n4Z\",\"PasswordChange__Cta\":\"PasswordChange_PasswordChange__Cta__2Pedy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountDataChange\":\"AccountDataChange_AccountDataChange__32kgd\",\"AccountDataChange__Header\":\"AccountDataChange_AccountDataChange__Header__1aUYd\",\"AccountDataChange__Form__Warning\":\"AccountDataChange_AccountDataChange__Form__Warning__EsTTC\",\"AccountDataChange__Cta\":\"AccountDataChange_AccountDataChange__Cta__DBdE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatMessage\":\"ChatMessage_ChatMessage__1yDu_\",\"ChatMessage__Body\":\"ChatMessage_ChatMessage__Body__3kl0z\",\"ChatMessage__Body__UserPictureContainer\":\"ChatMessage_ChatMessage__Body__UserPictureContainer__3lbdP\",\"ChatMessage__Body__Message\":\"ChatMessage_ChatMessage__Body__Message__3Cg6W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMessage\":\"UserMessage_UserMessage__XnYoz\",\"UserMessage__UnreadCount\":\"UserMessage_UserMessage__UnreadCount__2X7j6\",\"UserMessage__Icon\":\"UserMessage_UserMessage__Icon__3eWMH\",\"UserMessage__InboxPreviewWrapper\":\"UserMessage_UserMessage__InboxPreviewWrapper__3f53s\",\"UserMessage__InboxPreviewContent\":\"UserMessage_UserMessage__InboxPreviewContent__3gEL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseInfo\":\"CourseInfo_CourseInfo__ujP5h\",\"CourseInfo__Image\":\"CourseInfo_CourseInfo__Image__4K8s5\",\"CourseInfo__Body\":\"CourseInfo_CourseInfo__Body__qtYpK\",\"CourseInfo__Faculty\":\"CourseInfo_CourseInfo__Faculty__1lRMk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreatePost\":\"CreatePost_CreatePost__1DhVY\",\"CreatePost__Header\":\"CreatePost_CreatePost__Header__3CqVZ\",\"CreatePost__Body\":\"CreatePost_CreatePost__Body__3G4d3\",\"CreatePost__Cta\":\"CreatePost_CreatePost__Cta__2-Ki7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreatePostComment\":\"CreatePostComment_CreatePostComment__39Pl3\",\"CreatePostComment__Close\":\"CreatePostComment_CreatePostComment__Close__1bcI-\",\"CreatePostComment__Header\":\"CreatePostComment_CreatePostComment__Header__1EXDy\",\"CreatePostComment__Form\":\"CreatePostComment_CreatePostComment__Form__17SYI\",\"CreatePostComment__Form__Cta\":\"CreatePostComment_CreatePostComment__Form__Cta__24x6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContainer\":\"Modal_ModalContainer__3gJ51\",\"scaleUp\":\"Modal_scaleUp__1mF6v\",\"ModalContainer__Closed\":\"Modal_ModalContainer__Closed__PNIRq\",\"scaleDown\":\"Modal_scaleDown__NnwbL\",\"Modal\":\"Modal_Modal__-cgHh\",\"ModalContent\":\"Modal_ModalContent__3Fjgn\",\"ModalContent__Header\":\"Modal_ModalContent__Header__3ka4E\",\"ModalContent__Text\":\"Modal_ModalContent__Text__3v3gY\",\"ModalContent__Text__Icon\":\"Modal_ModalContent__Text__Icon__TorxQ\",\"ModalClose\":\"Modal_ModalClose__2UkjW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizEnd\":\"QuizEnd_QuizEnd__3lBYZ\",\"QuizEnd__Header\":\"QuizEnd_QuizEnd__Header__1YyU9\",\"QuizEnd__Content\":\"QuizEnd_QuizEnd__Content__jyN5S\",\"QuizEnd__Content__Text\":\"QuizEnd_QuizEnd__Content__Text__1gQPw\",\"QuizEnd__Content__Visual\":\"QuizEnd_QuizEnd__Content__Visual__35RDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuestionResult\":\"QuestionResult_QuestionResult__1Uwdw\",\"QuestionResult__QuestionNumber\":\"QuestionResult_QuestionResult__QuestionNumber__2NM5_\",\"QuestionResult__Icon\":\"QuestionResult_QuestionResult__Icon__208JS\",\"QuestionResult__Icon__Correct\":\"QuestionResult_QuestionResult__Icon__Correct__3vbEq\",\"QuestionResult__Icon__Incorrect\":\"QuestionResult_QuestionResult__Icon__Incorrect__1-Cw6\"};","module.exports = __webpack_public_path__ + \"static/media/sprite.f62b690b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SliderQuestion\":\"SliderQuestion_SliderQuestion__1Gzi1\",\"SliderQuestion__Slider__Input\":\"SliderQuestion_SliderQuestion__Slider__Input__3KoHh\",\"SliderQuestion__Slider__Input__Value\":\"SliderQuestion_SliderQuestion__Slider__Input__Value__VvtgX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminAccordionMenu__label\":\"AdminAccordionMenu_AdminAccordionMenu__label__-wwp3\",\"AdminAccordionMenu__inner\":\"AdminAccordionMenu_AdminAccordionMenu__inner__BF3bQ\",\"AdminAccordionMenu__content\":\"AdminAccordionMenu_AdminAccordionMenu__content__2HY-x\",\"AdminAccordionMenu\":\"AdminAccordionMenu_AdminAccordionMenu__1ud5n\",\"AdminAccordionMenu__label__border\":\"AdminAccordionMenu_AdminAccordionMenu__label__border__ie9iH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableWrapper\":\"Table_TableWrapper__1EYYt\",\"Table\":\"Table_Table__2OL5o\",\"Table__Row\":\"Table_Table__Row__2C1ES\",\"Table__Row__Icon\":\"Table_Table__Row__Icon__Xl14o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateQuiz\":\"CreateQuiz_CreateQuiz__3oE9V\",\"CreateQuiz__Header\":\"CreateQuiz_CreateQuiz__Header__1X_I1\",\"CreateQuiz__Body\":\"CreateQuiz_CreateQuiz__Body__igFh4\",\"CreateQuiz__Cta\":\"CreateQuiz_CreateQuiz__Cta__1vGSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountItem\":\"AccountItem_AccountItem__1eXyK\",\"AccountItem__Profile\":\"AccountItem_AccountItem__Profile__2Vr-X\",\"AccountItem__Profile__Picture\":\"AccountItem_AccountItem__Profile__Picture__296t_\",\"AccountItem__Menu\":\"AccountItem_AccountItem__Menu__cvtKG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PasswordReset\":\"PasswordReset_PasswordReset__dcqX4\",\"PasswordReset__Header\":\"PasswordReset_PasswordReset__Header__1NBN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseList\":\"CourseList_CourseList__VZ7sF\",\"CourseList__Header\":\"CourseList_CourseList__Header__1zf4j\",\"CourseList__Content\":\"CourseList_CourseList__Content__1luCZ\",\"CourseList__Loader\":\"CourseList_CourseList__Loader__6mIWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthorInfo\":\"AuthorInfo_AuthorInfo__BZvxU\",\"AuthorInfo__Avatar\":\"AuthorInfo_AuthorInfo__Avatar__17yNu\",\"AuthorInfo__Avatar__Picture\":\"AuthorInfo_AuthorInfo__Avatar__Picture__1m4ZF\",\"AuthorInfo__Name\":\"AuthorInfo_AuthorInfo__Name__1unLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseSectionSidebarItem\":\"CourseSectionSidebarItem_CourseSectionSidebarItem__1zI6d\",\"CourseSectionSidebarItem__Main\":\"CourseSectionSidebarItem_CourseSectionSidebarItem__Main__2yZwz\",\"CourseSectionSidebarItem__List\":\"CourseSectionSidebarItem_CourseSectionSidebarItem__List__nkeSH\",\"CourseSectionSidebarItem__List__Icon\":\"CourseSectionSidebarItem_CourseSectionSidebarItem__List__Icon__2sBgv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RadioGroup\":\"RadioButton_RadioGroup__1yKfD\",\"RadioButton\":\"RadioButton_RadioButton__14Wqs\",\"RadioButton__Input\":\"RadioButton_RadioButton__Input__-XdWC\",\"RadioButton__Label\":\"RadioButton_RadioButton__Label__2Rcxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InfoBox\":\"InfoBox_InfoBox__cMskB\",\"InfoBox__Header\":\"InfoBox_InfoBox__Header__3R4Ge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MiniButton\":\"MiniButton_MiniButton__2xGDu\",\"MiniButton__Active\":\"MiniButton_MiniButton__Active__3DY3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubSectionItem\":\"SubSectionItem_SubSectionItem__2QvMW\",\"SubSectionItem__Cta\":\"SubSectionItem_SubSectionItem__Cta__3lGhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FileUpload\":\"FileUpload_FileUpload__1pVwy\",\"FileUploadHeader\":\"FileUpload_FileUploadHeader__Vdmpc\",\"Form\":\"FileUpload_Form__3Xeu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminCourseList\":\"AdminCourseList_AdminCourseList__gaMlf\",\"AdminCourseList__Header\":\"AdminCourseList_AdminCourseList__Header__2rhdp\",\"AdminCourseList__Body\":\"AdminCourseList_AdminCourseList__Body__3qLdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserItem\":\"UserItem_UserItem__36Tvs\",\"UserItem__Active\":\"UserItem_UserItem__Active__3Mtdg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminUserCard\":\"AdminUserCard_AdminUserCard__2IgLx\",\"AdminUserCard__Cta\":\"AdminUserCard_AdminUserCard__Cta__2MD2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateUser\":\"CreateUser_CreateUser__A46Ne\",\"CreateUser__Header\":\"CreateUser_CreateUser__Header__2LRi4\",\"CreateUser__Form\":\"CreateUser_CreateUser__Form__1Cyx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatWindow\":\"ChatWindow_ChatWindow__39mR3\",\"ChatWindow__Messages\":\"ChatWindow_ChatWindow__Messages__1MXn4\",\"ChatWindow__Cta\":\"ChatWindow_ChatWindow__Cta__1v1XH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolbarWrapper\":\"Toolbar_ToolbarWrapper__3im4k\",\"Toolbar\":\"Toolbar_Toolbar__2SxNU\",\"Toolbar__Main\":\"Toolbar_Toolbar__Main__2MYNm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"NavigationItems_Navigation__11upe\",\"Navigation__Items\":\"NavigationItems_Navigation__Items__1WDyp\",\"Navigation__Auth\":\"NavigationItems_Navigation__Auth__1Lmc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1AORq\",\"Link\":\"NavigationItem_Link__Fqtjy\",\"ActiveLink\":\"NavigationItem_ActiveLink__34Hsc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignupSuccess\":\"SignupSuccess_SignupSuccess__14-sH\",\"SignupSuccess__Header\":\"SignupSuccess_SignupSuccess__Header__k6BX3\",\"SignupSuccess__Content\":\"SignupSuccess_SignupSuccess__Content__2nzg2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loader_Spinner__PLvjF\",\"Circular\":\"Loader_Circular__15Vpv\",\"rotate\":\"Loader_rotate__3JVOZ\",\"Stroke\":\"Loader_Stroke__Imdbe\",\"dash\":\"Loader_dash__1IREe\",\"color\":\"Loader_color__KRuSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Course\":\"Course_Course__HnlM1\",\"Course__Title\":\"Course_Course__Title__pzPsL\",\"Course__Loader\":\"Course_Course__Loader__1H602\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostComment\":\"PostComment_PostComment__30mpU\",\"PostComment__Footer\":\"PostComment_PostComment__Footer__3hevk\",\"PostComment__Content\":\"PostComment_PostComment__Content__3kHG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseMenu__Intro\":\"CourseMenu_CourseMenu__Intro__3_AIt\",\"CourseMenu__Misc\":\"CourseMenu_CourseMenu__Misc__3GNwh\",\"CourseMenu__Cta\":\"CourseMenu_CourseMenu__Cta__2FC67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizIntro\":\"QuizIntro_QuizIntro__2czEU\",\"QuizIntro__Header\":\"QuizIntro_QuizIntro__Header__1-iBI\",\"QuizIntro__Cta\":\"QuizIntro_QuizIntro__Cta__3MkIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProgressBar\":\"ProgressBar_ProgressBar__14eCC\",\"ProgressBar__Background\":\"ProgressBar_ProgressBar__Background__3Pi-Z\",\"ProgressBar__Foreground\":\"ProgressBar_ProgressBar__Foreground__3RBPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Intro\":\"Intro_Intro__17oV9\",\"Intro__Header\":\"Intro_Intro__Header__3NhCk\",\"Intro__Cta\":\"Intro_Intro__Cta__1V3_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContentWrapper\":\"Content_ContentWrapper__RtvPD\",\"Content\":\"Content_Content__2aLwy\",\"Content__Cta\":\"Content_Content__Cta__ptult\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MultipleChoiceQuestion\":\"MultipleChoiceQuestion_MultipleChoiceQuestion__1s67V\",\"MultipleChoiceQuestion__Text\":\"MultipleChoiceQuestion_MultipleChoiceQuestion__Text__2zsOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SliderCombinationQuestion__Text\":\"SliderCombinationQuestion_SliderCombinationQuestion__Text__2j8Ss\",\"SliderCombinationQuestion__SubSliders\":\"SliderCombinationQuestion_SliderCombinationQuestion__SubSliders__1tBvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseListElement\":\"CourseListElement_CourseListElement__1nCNs\",\"CourseListElement__Content\":\"CourseListElement_CourseListElement__Content__Vggmd\",\"CourseListElement__Side\":\"CourseListElement_CourseListElement__Side__1MmW3\",\"CourseListElement__Side__Front\":\"CourseListElement_CourseListElement__Side__Front__3KoNo\",\"CourseListElement__Side__Back\":\"CourseListElement_CourseListElement__Side__Back__1s3vY\",\"CourseListElement__Side__Back__1\":\"CourseListElement_CourseListElement__Side__Back__1__1Kbww\",\"CourseListElement__Side__Back__2\":\"CourseListElement_CourseListElement__Side__Back__2__1nsnV\",\"CourseListElement__Side__Back__3\":\"CourseListElement_CourseListElement__Side__Back__3__1uvO3\",\"CourseListElement__Picture\":\"CourseListElement_CourseListElement__Picture__2G2I0\",\"CourseListElement__Heading\":\"CourseListElement_CourseListElement__Heading__12iNG\",\"CourseListElement__Heading__1\":\"CourseListElement_CourseListElement__Heading__1__2ngem\",\"CourseListElement__Heading__2\":\"CourseListElement_CourseListElement__Heading__2__1fyaj\",\"CourseListElement__Heading__3\":\"CourseListElement_CourseListElement__Heading__3__3DP64\",\"CourseListElement__Description\":\"CourseListElement_CourseListElement__Description__2NKpr\",\"CourseListElement__Description__FacultyList\":\"CourseListElement_CourseListElement__Description__FacultyList__1QL34\",\"CourseListElement__Description__FacultyList__Item\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__1173o\",\"CourseListElement__Description__FacultyList__Item__1\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__1__2OILi\",\"CourseListElement__Description__FacultyList__Item__2\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__2__1WYQq\",\"CourseListElement__Description__FacultyList__Item__3\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__3__35hPJ\",\"CourseListElement__Cta\":\"CourseListElement_CourseListElement__Cta__1KcQy\",\"CourseListElement__Cta__Link\":\"CourseListElement_CourseListElement__Cta__Link__7GXFU\",\"CourseListElement__Cta__Link__Icon\":\"CourseListElement_CourseListElement__Cta__Link__Icon__3pJpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Graph\":\"Graph_Graph__3GXKP\",\"Graph__Header\":\"Graph_Graph__Header__2cr-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseStats\":\"CourseStats_CourseStats__3aNa7\",\"CourseStats__Header\":\"CourseStats_CourseStats__Header__2aRdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackCondition\":\"FeedbackCondition_FeedbackCondition__1Bbfa\",\"FeedbackCondition__Icon\":\"FeedbackCondition_FeedbackCondition__Icon__1KqZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SectionFormControl\":\"SectionFormControl_SectionFormControl__3rFeJ\",\"SectionFormControl__Remove\":\"SectionFormControl_SectionFormControl__Remove__2f1Dv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectInputWrapper\":\"SelectInput_SelectInputWrapper__30dvY\",\"SelectInput\":\"SelectInput_SelectInput__3s0_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserPool\":\"UserPool_UserPool__3nxrA\",\"UserPool__Body\":\"UserPool_UserPool__Body__3HML3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminUserList\":\"AdminUserList_AdminUserList__2Esl7\",\"AdminUserList__Header\":\"AdminUserList_AdminUserList__Header__2e6ao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseForum\":\"CourseForum_CourseForum__1SptO\",\"CourseForum__Cta\":\"CourseForum_CourseForum__Cta__1_lkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostList\":\"PostList_PostList__1WtTj\",\"PostList__Header\":\"PostList_PostList__Header__1UgNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paginator\":\"Paginator_Paginator__2pUpa\",\"ItemPerPage\":\"Paginator_ItemPerPage__1QDE0\",\"PaginatorButtons\":\"Paginator_PaginatorButtons__2R5-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PrevButton\":\"PrevButton_PrevButton__1oNTJ\",\"ArrowIcon\":\"PrevButton_ArrowIcon__3X2eq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NextButton\":\"NextButton_NextButton__2TYZd\",\"ArrowIcon\":\"NextButton_ArrowIcon__9-Dwn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"QuizContainer_Quiz__2R0RO\",\"Quiz__Exit\":\"QuizContainer_Quiz__Exit__7LieL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Questionnaire\":\"Questionnaire_Questionnaire__2fUlC\",\"Questionnaire__Exit\":\"Questionnaire_Questionnaire__Exit__26ve9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostDetailContainer\":\"PostDetail_PostDetailContainer__38zm7\",\"PostDetailContainer__Cta\":\"PostDetail_PostDetailContainer__Cta__2q8yk\",\"PostDetail\":\"PostDetail_PostDetail__29DFb\",\"PostDetail__Header\":\"PostDetail_PostDetail__Header__2vco9\",\"PostDetail__Header__Title\":\"PostDetail_PostDetail__Header__Title__3l1sn\",\"PostDetail__Header__TimeContainer\":\"PostDetail_PostDetail__Header__TimeContainer__3HN_M\",\"PostDetail__Header__TimeContainer__Time\":\"PostDetail_PostDetail__Header__TimeContainer__Time__1WME5\",\"PostDetail__Header__TimeContainer__Tooltip\":\"PostDetail_PostDetail__Header__TimeContainer__Tooltip___Imon\",\"PostDetail__Body\":\"PostDetail_PostDetail__Body__3nICe\",\"PostDetail__Cta\":\"PostDetail_PostDetail__Cta__2Gd8E\",\"PostDetail__Cta__Buttons\":\"PostDetail_PostDetail__Cta__Buttons__Z8c8p\",\"PostComments\":\"PostDetail_PostComments__31Xo1\",\"PostComments__Overflow\":\"PostDetail_PostComments__Overflow__3B-74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminHome\":\"AdminHome_AdminHome__1qbgX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminNavigation\":\"AdminNavigation_AdminNavigation__13d_9\",\"AdminNavigation__Item\":\"AdminNavigation_AdminNavigation__Item__2ybbL\",\"AdminNavigation__Item__Menu\":\"AdminNavigation_AdminNavigation__Item__Menu__3QyHF\",\"AdminNavigation__Item__Menu__Opened\":\"AdminNavigation_AdminNavigation__Item__Menu__Opened__3fOMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PasswordFeedback\":\"PasswordFeedback_PasswordFeedback__OECxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__1UWE0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuItem\":\"MenuItem_MenuItem__1RMuE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageBreak\":\"PageBreak_PageBreak__1oiDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"File_Input__1fQwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectOptions\":\"Options_SelectOptions__12sD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Option\":\"Option_Option__3VuPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListElement\":\"ListElement_ListElement__2lzqu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Administration\":\"Administration_Administration__2H3p8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2GijV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__1aB3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__3Smg5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1sj81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessagesList\":\"MessagesList_MessagesList__2V5qt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Authentication\":\"Authentication_Authentication__1w6vB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseNavigation\":\"CourseNavigation_CourseNavigation__3Osuh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostCommentList\":\"PostCommentList_PostCommentList__25SPV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaginationRange\":\"PaginationRange_PaginationRange__3g2z3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseSubSectionSidebar\":\"CourseSubSectionSidebar_CourseSubSectionSidebar__2sPer\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizContent\":\"QuizContent_QuizContent__1_Wdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuccessCheck\":\"SuccessCheck_SuccessCheck__k1GAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Finish\":\"Finish_Finish__lYL_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuestionWrapper\":\"Question_QuestionWrapper__1DkAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"CourseSection_Section__3p9dm\",\"Section__Content\":\"CourseSection_Section__Content__3MWkg\",\"Section__Container\":\"CourseSection_Section__Container__WdGY0\",\"Section__Title\":\"CourseSection_Section__Title__1fQk1\",\"Section__List\":\"CourseSection_Section__List__1SYNB\",\"Section__ListItem\":\"CourseSection_Section__ListItem__2qjj8\",\"Section__ListButton\":\"CourseSection_Section__ListButton__IEQLN\",\"Section__ListIcon\":\"CourseSection_Section__ListIcon__1yMQz\",\"BackMenu__Button\":\"CourseSection_BackMenu__Button__wcsrK\",\"BackMenu__Icon\":\"CourseSection_BackMenu__Icon__i0p3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeaturedInfo\":\"FeaturedInfo_FeaturedInfo__1A6OS\",\"FeaturedInfo__Body\":\"FeaturedInfo_FeaturedInfo__Body__1fXsY\",\"FeaturedInfo__Body__Amount\":\"FeaturedInfo_FeaturedInfo__Body__Amount__2ddRL\",\"FeaturedInfo__Body__Percentage\":\"FeaturedInfo_FeaturedInfo__Body__Percentage__1pKim\",\"FeaturedInfo__Body__Icon\":\"FeaturedInfo_FeaturedInfo__Body__Icon__3p3Yt\",\"FeaturedInfo__Body__Icon__Increase\":\"FeaturedInfo_FeaturedInfo__Body__Icon__Increase__1vL0N\",\"FeaturedInfo__Body__Icon__Decrease\":\"FeaturedInfo_FeaturedInfo__Body__Icon__Decrease__1DvTt\",\"FeaturedInfo__Footer\":\"FeaturedInfo_FeaturedInfo__Footer__Je87N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseHome\":\"CourseHome_CourseHome__HqeK2\",\"CourseHome__Header\":\"CourseHome_CourseHome__Header__2cfyq\",\"CourseHome__SectionList\":\"CourseHome_CourseHome__SectionList__1MmWy\",\"CourseHome__SectionList__List\":\"CourseHome_CourseHome__SectionList__List__fq98m\",\"CourseHome__SectionList__Cta\":\"CourseHome_CourseHome__SectionList__Cta__3whW3\",\"CourseHome__Activities\":\"CourseHome_CourseHome__Activities__1WEZd\",\"CourseHome__Activities__List\":\"CourseHome_CourseHome__Activities__List__2t-Rs\",\"CourseHome__Activities__Cta\":\"CourseHome_CourseHome__Activities__Cta__3acfQ\",\"CourseHome__UserEnrollment\":\"CourseHome_CourseHome__UserEnrollment__rg9iR\",\"CourseHome__UserEnrollment__Cta\":\"CourseHome_CourseHome__UserEnrollment__Cta__3rNfv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3-BUU\",\"ValidationError\":\"Input_ValidationError__1bHwl\",\"InputElement\":\"Input_InputElement__2ZNLz\",\"InputElement__Label\":\"Input_InputElement__Label__13D2c\",\"InputElement__Label__White\":\"Input_InputElement__Label__White__AFfay\",\"Invalid\":\"Input_Invalid__3oLC1\",\"SelectElement\":\"Input_SelectElement__4tB1P\",\"TextArea\":\"Input_TextArea__343bn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3rE_2\",\"Login__Overlay\":\"Login_Login__Overlay__1qL9t\",\"Login__Overlay__Active\":\"Login_Login__Overlay__Active__3cQ7j\",\"Login__Form__Header\":\"Login_Login__Form__Header__3D2Fd\",\"Login__Form__Cta\":\"Login_Login__Form__Cta__HvIKc\"};","module.exports = __webpack_public_path__ + \"static/media/spine.303de4cf.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__33OkN\",\"ButtonDanger\":\"Button_ButtonDanger__wiXM0\",\"ButtonSecondary\":\"Button_ButtonSecondary__3n5zi\",\"ButtonSmall\":\"Button_ButtonSmall__1RuLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageListItem\":\"MessageListItem_MessageListItem__1qReY\",\"MessageListItem__Picture\":\"MessageListItem_MessageListItem__Picture__2aRwn\",\"MessageListItem__Picture__Img\":\"MessageListItem_MessageListItem__Picture__Img__TEgy3\",\"MessageListItem__Content\":\"MessageListItem_MessageListItem__Content__2H8EK\",\"MessageListItem__Content__Username\":\"MessageListItem_MessageListItem__Content__Username__1h9Ic\",\"MessageListItem__Time\":\"MessageListItem_MessageListItem__Time__XnvLY\",\"MessageListItem__UnreadCount\":\"MessageListItem_MessageListItem__UnreadCount__3ZPhc\"};","var map = {\n\t\"./failure_cross\": 301,\n\t\"./failure_cross.json\": 301,\n\t\"./success_check\": 221,\n\t\"./success_check.json\": 221\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 563;","export const featuredData = {\n    revenue: {\n        amount: 2454,\n        percentage: -11.4\n    },\n    sales: {\n        amount: 4454,\n        percentage: -1.4\n    },\n    cost: {\n        amount: 1923,\n        percentage: +3.1\n    }\n};\n\nexport const userData = [\n    {\n      \"Month\": \"Jan\",\n      \"Active User\": 4000,\n    },\n    {\n      \"Month\": \"Feb\",\n      \"Active User\": 3000,\n    },\n    {\n      \"Month\": \"Mar\",\n      \"Active User\": 5000,\n    },\n    {\n      \"Month\": \"Apr\",\n      \"Active User\": 4000,\n    },\n    {\n      \"Month\": \"May\",\n      \"Active User\": 3000,\n    },\n    {\n      \"Month\": \"Jun\",\n      \"Active User\": 2000,\n    },\n    {\n      \"Month\": \"Jul\",\n      \"Active User\": 4000,\n    },\n    {\n      \"Month\": \"Agu\",\n      \"Active User\": 3000,\n    },\n    {\n      \"Month\": \"Sep\",\n      \"Active User\": 4000,\n    },\n    {\n      \"Month\": \"Oct\",\n      \"Active User\": 1000,\n    },\n    {\n      \"Month\": \"Nov\",\n      \"Active User\": 4000,\n    },\n    {\n      \"Month\": \"Dec\",\n      \"Active User\": 3000,\n    },\n];\n\nexport const quizData = [\n    {\n        _id: 'abcd1',\n        firstName: 'John',\n        lastName: 'Doe',\n        answers: [\n            { questionNumber: 1, selectedIndex: 2, correctIndex: 1, isCorrect: false },\n            { questionNumber: 2, selectedIndex: 0, correctIndex: 0, isCorrect: true },\n            { questionNumber: 3, selectedIndex: 3, correctIndex: 3, isCorrect: true },\n            { questionNumber: 4, selectedIndex: 1, correctIndex: 0, isCorrect: false },\n            { questionNumber: 5, selectedIndex: 3, correctIndex: 3, isCorrect: true },\n            { questionNumber: 6, selectedIndex: 2, correctIndex: 1, isCorrect: false },\n            { questionNumber: 7, selectedIndex: 0, correctIndex: 0, isCorrect: true }\n        ]\n    }, {\n        _id: 'abcd2',\n        firstName: 'Jane',\n        lastName: 'Doedoe',\n        answers: [\n            { questionNumber: 1, selectedIndex: 1, correctIndex: 1, isCorrect: true },\n            { questionNumber: 2, selectedIndex: 0, correctIndex: 0, isCorrect: true },\n            { questionNumber: 3, selectedIndex: 3, correctIndex: 3, isCorrect: true },\n            { questionNumber: 4, selectedIndex: 2, correctIndex: 0, isCorrect: false },\n            { questionNumber: 5, selectedIndex: 2, correctIndex: 3, isCorrect: false },\n            { questionNumber: 6, selectedIndex: 1, correctIndex: 1, isCorrect: true },\n            { questionNumber: 7, selectedIndex: 0, correctIndex: 0, isCorrect: true }\n        ]\n    }, {\n        _id: 'abcd3',\n        firstName: 'Jordan',\n        lastName: 'Do',\n        answers: [\n            { questionNumber: 1, selectedIndex: 1, correctIndex: 1, isCorrect: true },\n            { questionNumber: 2, selectedIndex: 0, correctIndex: 0, isCorrect: true },\n            { questionNumber: 3, selectedIndex: 2, correctIndex: 3, isCorrect: false },\n            { questionNumber: 4, selectedIndex: 1, correctIndex: 0, isCorrect: false },\n            { questionNumber: 5, selectedIndex: 2, correctIndex: 3, isCorrect: false },\n            { questionNumber: 6, selectedIndex: 1, correctIndex: 1, isCorrect: true },\n            { questionNumber: 7, selectedIndex: 3, correctIndex: 0, isCorrect: false }\n        ]\n    }\n]","const firstLettersUpper = (string) => {\n    return ((string || '').replace(/-/g, ' ').split(' ').map(function (word) {\n        return (((word[0] || '').toUpperCase() + word.slice(1))).trim();\n    }).join(' ')).trim();\n}\n\nexport default firstLettersUpper;","import React from 'react';\n\nimport classes from './InfoBox.module.scss';\n\nconst InfoBox = props => {\n    return (\n        <article className={classes.InfoBox}>\n            <header className={classes.InfoBox__Header}>\n                <h2>\n                    {props.title}\n                </h2>\n            </header>\n\n            <div className={classes.InfoBox__Body}>\n                {props.children}\n            </div>\n        </article>\n    )\n}\n\nexport default InfoBox;","import React from 'react';\n\nimport svg from '../../../../assets/images/sprite.svg';\nimport classes from './FeaturedInfo.module.scss';\nimport { featuredData } from '../../../../assets/exampleData';\nimport firstLetterUpper from '../../../../utility/firstLetterUpper';\nimport InfoBox from '../../../UI/InfoBox/InfoBox';\n\nconst FeaturedInfo = () => {\n    const data = featuredData;\n\n    return (\n        <div className={classes.FeaturedInfo}>\n            {Object.keys(data).map(item => {\n                let percentage = data[item].percentage;\n\n                return <InfoBox key={item} title={firstLetterUpper(item)}>\n                    <div className={classes.FeaturedInfo__Body}>\n                        <span className={classes.FeaturedInfo__Body__Amount}>{`$${data[item].amount}`}</span>\n\n                        <span className={classes.FeaturedInfo__Body__Percentage}>{`${percentage > 0 ? '+' : ''}${percentage}`}</span>\n\n                        <svg className={percentage > 0 ?\n                            [classes.FeaturedInfo__Body__Icon, classes.FeaturedInfo__Body__Icon__Increase].join(' ') :\n                            [classes.FeaturedInfo__Body__Icon, classes.FeaturedInfo__Body__Icon__Decrease].join(' ')}>\n                            <use xlinkHref={`${svg}#icon-arrow-${percentage > 0 ? 'up' : 'down'}`}></use>\n                        </svg>\n                    </div>\n\n                    <footer className={classes.FeaturedInfo__Footer}>\n                        Compared to last month\n                    </footer>\n                </InfoBox>;\n            })}\n        </div>\n    )\n}\n\nexport default FeaturedInfo;","import React from 'react';\nimport {\n    LineChart,\n    Line,\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    ResponsiveContainer,\n    Label,\n    Legend\n} from 'recharts';\n\nimport classes from './Graph.module.scss';\n\n// TODO: Add additional properties to increase variety\nconst Graph = props => {\n    let graphType = props.graphType || 'line';\n\n    let pageContent = (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n                width={500}\n                height={300}\n                data={props.data}\n                margin={{\n                    top: 5,\n                    right: 5,\n                    left: 5,\n                    bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey={props.dataKeyxAxis}>\n                    <Label value={props.dataKeyxAxis} offset={0} position=\"insideBottom\" />\n                </XAxis>\n                \n                <YAxis dataKey={props.dataKeyyAxis}>\n                    <Label value={props.dataKeyyAxis} angle=\"-90\" position=\"insideLeft\" textAnchor=\"middle\" />\n                </YAxis>\n                <Tooltip />\n                <Line type=\"monotone\" dataKey={props.dataKeyName} stroke=\"#000000\" />\n            </LineChart>\n        </ResponsiveContainer>\n    );\n\n    if (graphType === 'bar') {\n        pageContent = (\n            <BarChart width={600} height={250} data={props.data}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey='name' />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                {props.bars.map(bar => {\n                    return <Bar key={bar.name} dataKey={bar.name} fill={bar.color} />\n                })}\n            </BarChart>\n        );\n    }\n\n    return (\n        <div className={classes.Graph}>\n            <header className={classes.Graph__Header}>\n                <h2>{props.graphTitle}</h2>\n            </header>\n\n            {pageContent}\n        </div>\n    )\n}\n\nexport default Graph;","import React from 'react';\n\nimport classes from './AdminHome.module.scss';\nimport FeaturedInfo from './FeaturedInfo/FeaturedInfo';\nimport Graph from '../../Graph/Graph';\nimport { userData } from '../../../assets/exampleData';\n\nconst AdminHome = () => {\n    return (\n        <div className={classes.AdminHome}>\n            <FeaturedInfo />\n\n            <Graph\n                data={userData}\n                graphTitle='Active User Details'\n                dataKeyxAxis='Month'\n                dataKeyyAxis='Active User'\n                dataKeyName='Active User'\n            />\n        </div>\n    );\n}\n\nexport default AdminHome;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './AdminAccordionMenuItem.module.scss';\nimport svg from '../../../../../assets/images/sprite.svg';\n\nconst AdminAccordionMenuItem = props => {\n    let data = props.data;\n\n    // TODO: Include the react router\n\n    return (\n        <li className={classes.AdminAccordionMenuItem}>\n            <svg className={classes.AdminAccordionMenuItem__Icon}>\n                <use xlinkHref={`${svg}#icon-${data.icon}`}></use>\n            </svg>\n\n            <span className={classes.AdminAccordionMenuItem__Label}>\n                <NavLink\n                    to={data.path}\n                    className={classes.AdminAccordionMenuItem__Link}\n                    activeClassName={classes.AdminAccordionMenuItem__ActiveLink}\n                    exact={data.isExact}\n                >{data.name}</NavLink>\n            </span>\n        </li>\n    );\n}\n\nexport default AdminAccordionMenuItem;","import React, { useState, useRef, useEffect } from 'react';\n\nimport classes from './AdminAccordionMenu.module.scss';\nimport AdminAccordionMenuItem from './AdminAccordionMenuItem/AdminAccordionMenuItem';\n\nconst AdminAccordionMenu = props => {\n    const [isActive, setIsActive] = useState(false);\n    const [height, setHeight] = useState(0);\n\n    const innerElementRef = useRef(null);\n    let timeout = useRef(null);\n\n    useEffect(() => {\n        timeout.current = setTimeout(() => {\n            setHeight(innerElementRef.current.scrollHeight);\n        }, 333);\n\n        return () => {\n            clearTimeout(timeout.current);\n        }\n    }, []);\n\n    const toggleMenu = () => {\n        setIsActive(prevState => !prevState);\n    }\n\n    const innerStyle = {\n        height: `${isActive ? height : 0}px`\n    };\n\n    return (\n        <div className={classes.AdminAccordionMenu} aria-expanded={isActive}>\n            <button className={classes.AdminAccordionMenu__label} role='tab' onClick={toggleMenu}>\n                {props.label}\n            </button>\n\n            <div className={classes.AdminAccordionMenu__inner}\n                style={innerStyle}\n                aria-hidden={!isActive}\n                ref={innerElementRef}>\n                <div className={classes.AdminAccordionMenu__content}>\n                    <ul>\n                        {props.subItems.map((item, index) => {\n                            return <AdminAccordionMenuItem key={index} data={item} />\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AdminAccordionMenu;","export const dashboardData = [\n    {\n        name: 'Dashboard',\n        subMenuItems: [\n            {\n                name: 'Administration',\n                icon: 'home',\n                path: '/administration',\n                isExact: true\n            }, {\n                name: 'Analytics',\n                icon: 'stats-dots',\n                path: '/analytics',\n                isExact: true\n            }, {\n                name: 'Sales',\n                icon: 'stats-bars',\n                path: '/sales',\n                isExact: true\n            }\n        ]\n    }, {\n        name: 'Courses',\n        subMenuItems: [\n            {\n                name: 'Management',\n                icon: 'folder-open',\n                path: '/administration/course-management',\n                isExact: true\n            }, {\n                name: 'Create',\n                icon: 'folder-plus',\n                path: '/administration/course-management/create-course',\n                isExact: true\n            }\n        ]\n    }, {\n        name: 'Users',\n        subMenuItems: [\n            {\n                name: 'Management',\n                icon: 'users',\n                path: '/administration/user-management',\n                isExact: true\n            }, {\n                name: 'Create',\n                icon: 'user-plus',\n                path: '/administration/user-management/create-user',\n                isExact: true\n            }\n        ]\n    }\n]","import React from 'react';\n\nimport classes from './AdminNavigation.module.scss';\nimport AdminAccordionMenu from './AdminAccordionMenu/AdminAccordionMenu';\nimport { dashboardData } from '../../../assets/admin_dashborad_data';\n\nconst AdminNavigation = () => {\n    return (\n        <nav className={classes.AdminNavigation}>\n            {dashboardData.map((dashboardItem, index) => {\n                return <AdminAccordionMenu\n                    key={index}\n                    label={dashboardItem.name}\n                    subItems={dashboardItem.subMenuItems}\n                />;\n            })}\n        </nav>\n    )\n}\n\nexport default AdminNavigation;","// 'https://glacial-garden-54072.herokuapp.com'\n// 'http://localhost:8000'\n\nexport const BACKEND_ORIGIN = 'https://glacial-garden-54072.herokuapp.com';\n","import axios from 'axios';\nimport { BACKEND_ORIGIN } from '../utility/apiUrl';\n\nconst instance = axios.create({\n    baseURL: BACKEND_ORIGIN + '/api/admin'\n});\n\nexport default instance;","const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isURL) {\n        const pattern = /^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.containsNumeric) {\n        const pattern = /\\d/g;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.containsSpecial) {\n        const pattern = /[!@#$%^&*]/g;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isEnglishOnly) {\n        const pattern = /^[a-zA-Z]+$/;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n}\n\nexport default checkValidity;","import React from 'react';\n\nimport classes from './MiniButton.module.scss';\n\nconst MiniButton = props => {\n    let classList = [classes.MiniButton];\n\n    if (props.isActive) {\n        classList = [classes.MiniButton, classes.MiniButton__Active];\n    }\n\n    return (\n        <span className={classList.join(' ')} onClick={props.clicked}>\n            {props.children}\n        </span>\n    );\n}\n\nexport default MiniButton;","import React from 'react';\n\nimport classes from './Table.module.scss';\nimport svg from '../../../assets/images/sprite.svg';\n\nconst Table = props => {\n    return (\n        <div className={classes.TableWrapper}>\n            <table className={classes.Table}>\n                <thead>\n                    <tr>\n                        {props.headers.map(header => {\n                            return <th key={header}>{header}</th>\n                        })}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {props.rows.map((row, index) => {\n                        return (\n                            <tr key={'AnswerRow' + index}>\n                                {row.map((rowData, index) => {\n                                    return (\n                                        <td key={rowData.value + '_' + index} className={classes.Table__Row}>\n                                            {rowData.value}\n\n                                            {rowData.showIcon || false ?\n                                                <svg className={classes.Table__Row__Icon} style={rowData.changeColor ? {fill: '#5B0200'} : {}}>\n                                                    <use xlinkHref={`${svg}#icon-${rowData.icon}`}></use>\n                                                </svg> : null}\n                                        </td>\n                                    )\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Table;","import React from 'react';\n\nimport Table from '../../../../../UI/Table/Table';\nimport { quizData } from '../../../../../../assets/exampleData';\nimport Graph from '../../../../../Graph/Graph';\n\nconst QuizStats = props => {\n    let headerData = ['Name'];\n    let rows = [];\n    let questionToUserAnswersData = [];\n\n    quizData[0].answers.forEach(question => {\n        headerData.push('Q' + question.questionNumber);\n        questionToUserAnswersData.push({\n            name: 'Q' + question.questionNumber,\n            correct: 0,\n            incorrect: 0\n        });\n    });\n    headerData.push('Correct answers');\n    headerData.push('Points');\n\n    for (let i = 0; i < quizData.length; i++) {\n        let data = quizData[i];\n        let row = [];\n\n        row.push({\n            value: data.firstName + ' ' + data.lastName\n        });\n\n        data.answers.forEach((answer, index) => {\n            row.push({\n                value: answer.selectedIndex,\n                showIcon: true,\n                icon: answer.isCorrect ? 'checkmark' : 'cross',\n                changeColor: !answer.isCorrect\n            });\n\n            let copiedQuestionData = {...questionToUserAnswersData[index]};\n\n            if (answer.isCorrect) {\n                copiedQuestionData.correct += 1;\n            } else {\n                copiedQuestionData.incorrect += 1;\n            }\n\n            questionToUserAnswersData[index] = {...copiedQuestionData}\n        });\n\n        let correctAnswers = data.answers.filter(answer => answer.isCorrect).length;\n\n        row.push({\n            value: correctAnswers\n        });\n        row.push({\n            value: parseFloat(((correctAnswers / data.answers.length) * 100).toFixed(2))\n        });\n\n        rows.push(row);\n    }\n\n    return (\n        <div>\n            <Table headers={headerData} rows={rows} />\n\n            <Graph\n                graphType='bar'\n                data={questionToUserAnswersData}\n                graphTitle='Users answers'\n                dataKeyxAxis='Questions'\n                bars={[{ name: 'correct', color: '#6BA006' }, { name: 'incorrect', color: '#AC0B06' }]}\n            />\n        </div>\n    )\n}\n\nexport default QuizStats;","import React, { useState } from 'react';\n\nimport classes from './CourseStats.module.scss';\nimport MiniButton from '../../../../UI/MiniButton/MiniButton';\nimport QuizStats from './QuizStats/QuizStats';\n\nconst CourseStats = () => {\n    const [statPaginationData, setStatPaginationData] = useState([{\n            isActive: true,\n            label: 'Quiz'\n        }, {\n            isActive: false,\n            label: 'Questionnaire'\n        }]\n    );\n\n    const onPaginationClickedHandler = (index) => {\n        setStatPaginationData(prevState => {\n            return prevState.map((prevButtonData, i) => {\n                if (index === i) {\n                    prevButtonData.isActive = true;\n                } else {\n                    prevButtonData.isActive = false;\n                }\n\n                return prevButtonData;\n            });\n        });\n    }\n\n    return (\n        <section className={classes.CourseStats}>\n            <header className={classes.CourseStats__Header}>\n                {statPaginationData.map((button, index) => {\n                    return (\n                        <MiniButton key={button.label} isActive={button.isActive} clicked={() => onPaginationClickedHandler(index)}>\n                            {button.label}\n                        </MiniButton>\n                    );\n                })}\n            </header>\n\n            <div>\n                <QuizStats />\n            </div>\n        </section>\n    );\n}\n\nexport default CourseStats;","import React from 'react';\n\nimport classes from './SubSectionItem.module.scss';\n\nconst SubSectionItem = props => {\n    return (\n        <li className={classes.SubSectionItem}>\n            <span className={classes.SubSectionItem__Name}>{props.name}</span>\n\n            <span className={classes.SubSectionItem__Cta}>\n                <button onClick={props.subsectionEdited}>Edit</button>\n\n                <button onClick={props.subsectionDeleted}>Delete</button>\n            </span>\n        </li>\n    )\n}\n\nexport default SubSectionItem;","import React from 'react';\n\nimport classes from './SectionItem.module.scss';\nimport SubSectionItem from './SubSectionItem/SubSectionItem';\n\nconst SectionItem = props => {\n    const sectionData = props.sectionData || {};\n\n    const onSubSectionAdd = () => {\n        props.subsectionAdded(sectionData._id);\n    }\n\n    const onSectionDelete = () => {\n        props.sectionDeleted(sectionData._id);\n    }\n\n    const onSubSectionEdited = (subsectionId) => {\n        props.subsectionEdited({\n            section: sectionData._id,\n            subsection: subsectionId\n        });\n    }\n\n    return (\n        <li className={classes.SectionItem}>\n            <div className={classes.SectionItem__Name}>\n                {sectionData.name}\n                \n                <button className={classes.SectionItem__Add} onClick={onSubSectionAdd}>Add</button>\n\n                <button className={classes.SectionItem__Add} onClick={onSectionDelete}>Delete</button>\n            </div>\n\n            <ul className={classes.SectionItem__List}>\n                {sectionData.subsections.map(subsection => {\n                    return <SubSectionItem\n                        key={subsection._id}\n                        name={subsection.name}\n                        subsectionEdited={() => onSubSectionEdited(subsection._id)}\n                        subsectionDeleted={() => props.subsectionDeleted(subsection._id)}\n                    />;\n                })}\n            </ul>\n        </li>\n    )\n}\n\nexport default SectionItem;","import React from 'react';\n\nimport svg from '../../../assets/images/sprite.svg';\nimport classes from './FeedbackCondition.module.scss';\n\nconst FeedbackCondition = (props) => {\n    return (\n        <div className={classes.FeedbackCondition}>\n            <svg className={classes.FeedbackCondition__Icon} style={{fill: props.isTrue ? 'green' : 'red'}}>\n                <use xlinkHref={`${svg}#icon-${props.isTrue ? 'checkmark1' : 'cross'}`}></use>\n            </svg>\n            <span>{props.children}</span>\n        </div>\n    )\n}\n\nexport default FeedbackCondition;","import React, { useState, useEffect, useRef } from 'react';\n\nimport classes from './PasswordFeedback.module.scss';\nimport FeedbackCondition from './FeedbackCondition/FeedbackCondition';\n\n/*\n    A valid password should include the following:\n    - at least 8 characters, at most 16 characters long\n    - at least 1 uppercase character\n    - at least 1 numeric character\n    - at least 1 non-alpha numeric character like: `! @ # $ % ^ &`\n*/\n\nconst PasswordFeedback = (props) => {\n    const [validationMap, setValidationMap] = useState({\n        validLength: {\n            label: 'at least 8 characters, at most 16 characters long',\n            value: false\n        }, upperCase: {\n            label: 'at least 1 uppercase character',\n            value: false\n        }, hasNumber: {\n            label: 'at least 1 numeric character',\n            value: false\n        }, specialChar: {\n            label: 'at least 1 of the following: ! @ # $ % ^ & *',\n            value: false\n        }\n    });\n    const [visible, setVisible] = useState('hidden');\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n    const ref = useRef(null);\n    const timerRef = useRef(null);\n    \n    useEffect(() => {\n        setHeight(ref.current.scrollHeight);\n        setWidth(ref.current.scrollWidth);\n\n        timerRef.current = setTimeout(() => {\n            setVisible('visible')\n        }, 200);\n\n        return () => {\n            clearTimeout(timerRef.current);\n        };\n    }, []);\n\n    useEffect(() => {\n        const copiedValidationMap = {...validationMap};\n        let copiedValidationCondition;\n\n        Object.keys(props.validation || {}).forEach(condition => {\n            copiedValidationCondition = { ...copiedValidationMap[condition] };\n\n            copiedValidationCondition.value = (props.validation || {})[condition] || false;\n            copiedValidationMap[condition] = copiedValidationCondition;\n        });\n\n        setValidationMap(copiedValidationMap);\n        // eslint-disable-next-line\n    }, [props.validation]);\n\n    const innerStyle = {\n        visibility: `${visible}`,\n        top: `-${height}px`,\n        right: `-${width / 3}px`\n    };\n\n    return (\n        <div className={classes.PasswordFeedback} ref={ref} style={innerStyle} id='PasswordFeedback'>\n            {Object.keys(validationMap).map(condition => {\n                return <FeedbackCondition\n                    key={condition}\n                    isTrue={validationMap[condition].value || false}\n                >{validationMap[condition].label || ''}</FeedbackCondition>;\n            })}\n        </div>\n    );\n}\n\nexport default PasswordFeedback;","import React, { useState } from 'react';\n\nimport PasswordFeedback from '../../PasswordFeedback/PasswordFeedback';\nimport classes from './Input.module.scss';\n\nconst Input = (props) => {\n    const [passwordFeebackVisible, setPasswordFeedbackVisible] = useState(false);\n\n    let inputElement = null;\n    let inputClasses = [classes.InputElement];\n    let validationError = '';\n\n    if (!props.isValid && props.touched) {\n        inputClasses.push(classes.Invalid);\n        if(props.value !== ''){\n            validationError = 'Please enter a valid value';\n        }\n        else {\n            validationError = 'This field is required';\n        }\n    }\n\n    const onInputFocused = (event) => {\n        if (event.target.type === 'password') {\n            setPasswordFeedbackVisible(true)\n        }\n    }\n\n    const onInputFocusLost = (event) => {\n        if (event.target.type === 'password') {\n            setPasswordFeedbackVisible(false)\n        }\n\n        typeof props.focusLost === 'function' && props.focusLost();\n    }\n\n    switch(props.elementType) {\n        case 'input':\n            inputElement = (<input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig}\n                value={props.value} \n                onChange={props.changed}\n                onBlur={onInputFocusLost}\n                onFocus={onInputFocused}\n            />);\n            break;\n        case 'textarea':\n            inputClasses.push(classes.TextArea)\n            inputElement = <textarea \n                className={inputClasses.join(' ')} \n                {...props.elementConfig}\n                value={props.value} \n                onChange={props.changed}\n            />;\n            break;\n        case 'select':\n            inputElement = <select \n                className={classes.SelectElement} \n                value={props.value} \n                onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\n                    ))}\n            </select>\n            break;\n        default:\n            break;\n    }\n\n    let labelClassList = [classes.InputElement__Label];\n\n    if (props.labelColor === 'white') {\n        labelClassList = [classes.InputElement__Label, classes.InputElement__Label__White];\n    }\n    \n    return (\n        <div className={classes.Input}>\n            <p className={classes.ValidationError}>{validationError}</p>\n            {inputElement}\n            <label className={labelClassList.join(' ')}>{props.label}</label>\n            {props.isPassword && passwordFeebackVisible ? <PasswordFeedback validation={props.passwordValidationMap} /> : null}\n        </div>\n    )\n}\n\nexport default Input;","import React from 'react';\n\nimport classes from './Button.module.scss';\n\nconst Button = (props) => {\n    let classList = [classes.Button];\n\n    switch(props.btnType) {\n        case 'BtnPrimary':\n            classList = [classes.Button, classes.ButtonPrimary];\n            break;\n        case 'BtnDanger':\n            classList = [classes.Button, classes.ButtonDanger];\n            break;\n        case 'BtnSecondary':\n            classList = [classes.Button, classes.ButtonSecondary];\n            break;\n        default:\n            break;\n    }\n\n    if (props.btnSize && props.btnSize === 'BtnSmall') {\n        classList.push(classes.ButtonSmall);\n    }\n\n    return (\n        <button\n            className={classList.join(' ')}\n            onClick={props.clicked}\n            disabled={props.disabled}>{props.children}</button>\n    )\n}\n\nexport default Button;","import React, { useState, useRef, useEffect } from 'react';\n\nimport classes from './Accordion.module.scss';\n\nconst Accordion = (props) => {\n    const [isActive, setIsActive] = useState(false);\n    const [height, setHeight] = useState(0);\n\n    const innerElementRef = useRef(null);\n    let timeout = useRef(null);\n    \n    useEffect(() => {\n        timeout.current = setTimeout(() => {\n            setHeight(innerElementRef.current.scrollHeight);\n        }, 333);\n\n        return () => {\n            clearTimeout(timeout.current);\n        }\n    }, []);\n\n    const toggleAccordion = () => {\n        setIsActive(prevState => !prevState);\n    }\n\n    const innerStyle = {\n        height: `${isActive ? height : 0}px`\n    };\n\n    return (\n        <div className={classes.Accordion} role='tabpanel' aria-expanded={isActive}>\n            <button className={classes.Accordion__label} role='tab' onClick={toggleAccordion}>\n                {props.label}\n\n                <span className={classes.Accordion__label__border}></span>\n            </button>\n\n            <div className={classes.Accordion__inner}\n                style={innerStyle}\n                aria-hidden={!isActive}\n                ref={innerElementRef}>\n                <div className={classes.Accordion__content}>\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Accordion;","import React, { useRef } from 'react';\n\nimport classes from './Select.module.scss';\n\nconst Select = props => {\n    let data = props.data;\n    let selectRef = useRef(null);\n\n    const onSelectOptionChanged = () => {\n        props.selectChanged(selectRef.current.value)\n    }\n\n    let content = Object.keys(data).map(option => {\n        return !data[option].alreadyExists ? <option key={option} value={data[option].label}>{data[option].label}</option> : null\n    });\n\n    return (\n        <div className={classes.Select}>\n            <select onChange={onSelectOptionChanged} ref={selectRef}>\n                {content}\n            </select>\n        </div>\n    )\n}\n\nexport default Select;","import React, { useState, useEffect } from 'react';\n\nimport formValidation from '../../../../../utility/formValidation';\nimport classes from './CourseHome.module.scss';\nimport CourseStats from '../CourseStats/CourseStats';\nimport SectionItem from './SectionItem/SectionItem';\nimport Input from '../../../../UI/Input/Input';\nimport Button from '../../../../UI/Button/Button';\nimport Accordion from '../../../../UI/Accordion/Accordion';\nimport Select from '../../../../UI/Select/Select';\n\nconst CourseHome = props => {\n    const [sectionNameFormCtrl, setSectionNameFormCtrl] = useState({\n        elementType: 'input',\n        elementConfig: {\n            type: 'text',\n            placeholder: 'Section Name'\n        },\n        label: \"Section Name\",\n        validation: {\n            required: true\n        },\n        valid: false,\n        touched: false,\n        value: ''\n    });\n    const [courseActivities, setCourseActivities] = useState({\n        'quiz': {\n            'label': 'Quiz',\n            'createLink': '/create-quiz',\n            'selected': true,\n            'alreadyExists': typeof props.courseData.quiz !== 'undefined'\n        },\n        'questionnaire': {\n            'label': 'Questionnaire',\n            'createLink': '/create-questionnaire',\n            'selected': false,\n            'alreadyExists': typeof props.courseData.questionnaire !== 'undefined'\n        }\n    });\n\n    useEffect(() => {\n        let copiedCourseActivities = { ...courseActivities };\n        let copiedQuizData = copiedCourseActivities.quiz;\n        let copiedQuestionnaireData = copiedCourseActivities.questionnaire;\n\n        copiedQuizData.alreadyExists = typeof props.courseData.quiz !== 'undefined';\n        copiedQuestionnaireData.alreadyExists = typeof props.courseData.questionnaire !== 'undefined';\n\n        copiedCourseActivities.quiz = { ...copiedQuizData };\n        copiedCourseActivities.questionnaire = { ...copiedQuestionnaireData };\n\n        setCourseActivities(copiedCourseActivities);\n        // eslint-disable-next-line\n    }, [props.courseData])\n\n    const courseData = props.courseData || {};\n    \n    const onSubSectionAddedHandler = (sectionId) => {\n        props.history.push(props.match.url + `/${sectionId}/create-subsection`);\n    }\n\n    const inputChangedHandler = (event) => {\n        const copiedFormControl = { ...sectionNameFormCtrl };\n\n        copiedFormControl.value = event.target.value;\n\n        // Also check validity & mark it as touched\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\n        copiedFormControl.valid = isValid;\n        copiedFormControl.touched = true;\n\n        setSectionNameFormCtrl(copiedFormControl);\n    }\n\n    const onSectionAddHandler = () => {\n        props.sectionAdded(sectionNameFormCtrl.value);\n    }\n\n    const onSelectChangedHandler = (label) => {\n        const copiedCourseActivities = {...courseActivities};\n        const keys = Object.keys(copiedCourseActivities);\n\n        for (let i = 0; i < keys.length; i++) {\n            let copiedActivity = {...copiedCourseActivities[keys[i]]};\n\n            copiedActivity.selected = copiedActivity.label === label;\n\n            copiedCourseActivities[keys[i]] = {...copiedActivity};\n        }\n\n        setCourseActivities(copiedCourseActivities);\n    }\n\n    const onActivityAdd = () => {\n        let link = (Object.values(courseActivities).find(item => item.selected) || {}).createLink || '';\n\n        props.history.push(props.match.url + link);\n    }\n\n    const onCourseActivityEdit = (activityName, activityId) => {\n        // console.log(`The activity: ${activityName} with the id: ${activityId} is gonna be edited.`)\n\n        props.history.push(props.match.url + `/edit-${activityName}/${activityId}`);\n    }\n\n    const onCourseActivityDelete = (activityName, activityId) => {\n        props.courseActivityDeleted(activityName, activityId);\n    }\n\n    const onUserEnroll = () => {\n        props.history.push(props.match.url + '/user-enrollment');\n    }\n\n    let courseActivityContent = (\n        <span>No course activity has been added yet!</span>\n    );\n\n    if (typeof courseData.quiz !== 'undefined' || typeof courseData.questionnaire !== 'undefined') {\n        courseActivityContent = (\n            <ul className={classes.CourseHome__Activities__List}>\n                { typeof courseData.quiz !== 'undefined' ?\n                    <li>\n                        {courseData.quiz.name}\n\n                        <button onClick={() => onCourseActivityEdit('quiz', courseData.quiz._id)}>Edit</button>\n                        <button onClick={() => onCourseActivityDelete('quiz', courseData.quiz._id)}>Delete</button>\n                    </li> : null }\n                \n                { typeof courseData.questionnaire !== 'undefined' ?\n                    <li>\n                        {courseData.questionnaire.name}\n\n                        <button>Edit</button>\n                        <button>Delete</button>\n                    </li> : null }\n            </ul>\n        )\n    }\n\n    return (\n        <section className={classes.CourseHome}>\n            <header className={classes.CourseHome__Header}>\n                <h1>{courseData.name || ''}</h1>\n            </header>\n\n            <CourseStats />\n\n            <Accordion label=\"Sections\">\n                <ul className={classes.CourseHome__SectionList__List}>\n                    {courseData.sections.map(section => {\n                        return <SectionItem\n                            key={section._id}\n                            sectionData={section}\n                            subsectionAdded={onSubSectionAddedHandler}\n                            subsectionDeleted={props.deletedSubsection}\n                            subsectionEdited={props.editedSubsection}\n                            sectionDeleted={props.deletedSection}\n                        />;\n                    })}\n                </ul>\n\n                <div className={classes.CourseHome__SectionList__Cta}>\n                    <Input\n                        elementType={sectionNameFormCtrl.elementType}\n                        elementConfig={sectionNameFormCtrl.elementConfig}\n                        label={sectionNameFormCtrl.label}\n                        value={sectionNameFormCtrl.value}\n                        touched={sectionNameFormCtrl.touched}\n                        isValid={sectionNameFormCtrl.valid}\n                        changed={(event) => inputChangedHandler(event)}\n                    />\n\n                    <Button\n                        btnType='BtnPrimary'\n                        btnSize='BtnSmall'\n                        disabled={!sectionNameFormCtrl.valid}\n                        clicked={onSectionAddHandler}>Add</Button>\n                </div>\n            </Accordion>\n\n            <Accordion label=\"Course Activities\">\n                <div className={classes.CourseHome__Activities}>\n                    {courseActivityContent}\n\n                    <div className={classes.CourseHome__Activities__Cta}>\n                        <Select data={courseActivities} selectChanged={onSelectChangedHandler} />\n\n                        <Button\n                            btnType='BtnPrimary'\n                            btnSize='BtnSmall'\n                            clicked={onActivityAdd}>Add</Button>\n                    </div>\n                </div>\n            </Accordion>\n\n            <Accordion label=\"User Enrollment\">\n                <div className={classes.CourseHome__UserEnrollment}>\n                    {`There are currently ${courseData.enrolledUsers.length} users in this course.`}\n\n                    <div className={classes.CourseHome__UserEnrollment__Cta}>\n                        <Button\n                            btnType='BtnPrimary'\n                            btnSize='BtnSmall'\n                            clicked={onUserEnroll}>Enroll Users</Button>\n                    </div>\n                </div>\n            </Accordion>\n        </section>\n    )\n}\n\nexport default CourseHome;","const INPUT_TEMPLATE = {\n    elementType: '',\n    elementConfig: {\n        type: 'text',\n        placeholder: ''\n    },\n    label: \"\",\n    validation: {\n        required: true\n    },\n    valid: false,\n    touched: false,\n    value: ''\n};\n\nconst addInputField = (inputObj, newInputObj) => {\n    const copiedInputObj = { ...inputObj };\n    const { type, inputKey, placeholder, label, validation, touched, value, valid } = newInputObj;\n\n    let newFormControl = { ...INPUT_TEMPLATE };\n    let copiedConfig = { ...newFormControl.elementConfig };\n\n    copiedConfig.placeholder = placeholder;\n    newFormControl.elementType = type;\n    newFormControl.elementConfig = copiedConfig;\n    newFormControl.label = label;\n    newFormControl.validation = validation;\n    newFormControl.value = value || '';\n    newFormControl.touched = touched || false;\n    newFormControl.valid = valid || false;\n\n    copiedInputObj[inputKey] = newFormControl;\n\n    return {\n        ...copiedInputObj\n    };\n}\n\nexport default addInputField;","import React from 'react';\n\nimport classes from './MenuItem.module.scss';\n\nconst MenuItem = (props) => {\n    return (\n        <span className={classes.MenuItem} onClick={props.clicked}>\n            {props.label}\n        </span>\n    )\n}\n\nexport default MenuItem;","import React from 'react';\n\nimport MenuItem from './MenuItem/MenuItem';\n\nconst Menu = (props) => {\n    let content = props.items.map((item, i) => {\n        return <MenuItem\n            key={i}\n            label={item}\n            clicked={() => props.menuItemClicked(item)}\n        />;\n    });\n    return (\n        <>\n            {content}\n        </>\n    )\n}\n\nexport default Menu;","import React from 'react';\n\nimport classes from './PageBreak.module.scss';\n\nconst PageBreak = () => {\n    return (\n        <span className={classes.PageBreak}>\n            {'</>'}\n        </span>\n    );\n};\n\nexport default PageBreak;","import React from 'react';\n\nimport classes from './SectionFormControl.module.scss';\nimport Input from '../../../../../UI/Input/Input';\nimport PageBreak from '../../../../../UI/PageBreak/PageBreak';\n\nconst SectionFormControl = (props) => {\n    const { isPageBreak, formControl } = props;\n\n    const onInputChangedHandler = (event) => {\n        props.inputChanged(event.target.value);\n    }\n\n    let content = (\n        !isPageBreak ? <Input\n            elementType={formControl.elementType}\n            elementConfig={formControl.elementConfig}\n            label={formControl.label}\n            value={formControl.value}\n            touched={formControl.touched}\n            isValid={formControl.valid}\n            changed={onInputChangedHandler} /> : <PageBreak />\n    );\n\n    return (\n        <div className={classes.SectionFormControl}>\n            {content}\n            {props.showRemove ? <span className={classes.SectionFormControl__Remove} onClick={props.removed}>\n                &nbsp;\n            </span> : null}\n        </div>\n    )\n}\n\nexport default SectionFormControl;","import React, { useState, useEffect, useCallback } from 'react';\nimport { withRouter, useParams } from 'react-router';\n\nimport firstLetterUpper from '../../../../../utility/firstLetterUpper';\nimport addInputField from '../../../../../utility/addInputField';\nimport checkValidity from '../../../../../utility/formValidation';\nimport classes from './CreateSubSection.module.scss';\nimport Button from '../../../../UI/Button/Button';\nimport Menu from '../../../../UI/Menu/Menu';\nimport SectionFormControl from './SectionFormControl/SectionFormControl';\n\nconst SECTION_ELEMENTS = ['Title', 'Index', 'Pagebreak'];\n\nconst CreateSubSection = props => {\n    const params = useParams();\n    const [isEditMode, setIsEditMode] = useState(false);\n    const [formValid, setFormValid] = useState(false);\n    const [sectionFormControls, setSectionFormControls] = useState({\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Sub Section Name'\n            },\n            label: \"Sub Section Name\",\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        }\n    });\n\n    // TODO: Revisit this function\n    const populateFormFields = useCallback(() => {\n        const subsectionToEdit = props.savedSubSectionData || {};\n        const subsectionContent = subsectionToEdit.content || [];\n\n        // Set the name of the subsection\n        let  copiedFormControls = { ...sectionFormControls };\n        const copiedNameFormCtrl = { ...copiedFormControls.name };\n\n        copiedNameFormCtrl.value = subsectionToEdit.name || '';\n        copiedNameFormCtrl.valid = true;\n        copiedNameFormCtrl.touched = true;\n        copiedFormControls.name = { ...copiedNameFormCtrl };\n\n        let pageBreakCount = subsectionContent.length - 1;\n        let currPageBreakIndex = 0;\n        for (let i = 0; i < subsectionContent.length; i++) {\n            if (i > 0 && currPageBreakIndex < pageBreakCount) {\n                copiedFormControls[`Pagebreak${currPageBreakIndex}`] = true;\n\n                currPageBreakIndex++;\n            }\n\n            let contentKeyArr = Object.keys(subsectionContent[i]);\n\n            for (let j = 0; j < contentKeyArr.length; j++) {\n                let formControlKeyArr = Object.keys(copiedFormControls);\n                let agent = contentKeyArr[j];\n                let formControlValue = subsectionContent[i][agent];\n                let agentIndex = formControlKeyArr.filter(frmCtrller => frmCtrller.toLowerCase()\n                    .indexOf(agent.replace(/[0-9]/g, '')) !== -1).length;\n                let formKeyName = firstLetterUpper(agent);\n\n                copiedFormControls = addInputField(copiedFormControls, {\n                    type: agent !== 'index' ? 'input' : 'textarea',\n                    inputKey: `${formKeyName + agentIndex}`,\n                    placeholder: `${formKeyName + ' ' + (agentIndex + 1)}`,\n                    label: `${formKeyName + ' ' + (agentIndex + 1)}`,\n                    validation: {\n                        required: true\n                    },\n                    valid: true,\n                    touched: true,\n                    value: formControlValue\n                });\n            }\n        }\n        \n        setSectionFormControls(copiedFormControls);\n        setFormValid(true);\n        \n        // eslint-disable-next-line\n    }, [props.savedSubSectionData]);\n\n    useEffect(() => {\n        if (params.subsectionId && params.subsectionId !== '') {\n            setIsEditMode(true);\n        }\n\n        populateFormFields();\n    }, [params, populateFormFields]);\n\n    const onMenuItemClickedHandler = (item) => {\n        let copiedSectionFormControls = { ...sectionFormControls };\n        let formControlArr = Object.keys(copiedSectionFormControls);\n        \n        let formControllerNumbers = formControlArr.filter(frmCtrller => frmCtrller.indexOf(item) !== -1)\n            .map(ctrller => parseInt(ctrller.replace(/[^0-9]/g, '')));\n\n        let index = 0;\n\n        while (formControllerNumbers.indexOf(index) !== -1) {\n            index++;\n        }\n\n        if (item !== 'Pagebreak') {\n            copiedSectionFormControls = addInputField(copiedSectionFormControls, {\n                type: item !== 'Index' ? 'input' : 'textarea',\n                inputKey: `${item + index}`,\n                placeholder: `${item + ' ' + (index + 1)}`,\n                label: `${item + ' ' + (index + 1)}`,\n                validation: {\n                    required: true\n                }\n            });\n\n            setSectionFormControls(copiedSectionFormControls);\n\n            setFormValid(false)\n        } else {\n            if (formControlArr.slice(1).length > 0) {\n                if (formControlArr.pop().indexOf('Pagebreak') === -1) {\n                    copiedSectionFormControls[`${item + index}`] = true;\n\n                    setSectionFormControls(copiedSectionFormControls);\n                }\n            }\n        }\n    }\n\n    const checkFormValidity = (wholeForm) => {\n        let isValid = true;\n\n        wholeForm.forEach(formCtrl => {\n            isValid = isValid && formCtrl.valid;\n        });\n\n        setFormValid(isValid && wholeForm.length > 1);\n    }\n\n    const onFormInputChangedHandler = (value, formControl) => {\n        let copiedSectionFormControls = { ...sectionFormControls };\n        let copiedFormControl = { ...copiedSectionFormControls[formControl] };\n\n        copiedFormControl.touched = true;\n        copiedFormControl.value = value;\n        copiedFormControl.valid = checkValidity(value, copiedFormControl.validation);\n\n        copiedSectionFormControls[formControl] = copiedFormControl;\n\n        setSectionFormControls(copiedSectionFormControls);\n\n        checkFormValidity(Object.values(copiedSectionFormControls).filter(obj => typeof obj.valid !== 'undefined'));\n    }\n\n    const onFormControlRemovedHandler = frmCtrl => {\n        let copiedSectionFormControls = { ...sectionFormControls };\n        \n        delete copiedSectionFormControls[`${frmCtrl}`];\n\n        // We need to handle pagebreaks here. No two consecutive page breaks should be present.\n        let frmCtrlArr = Object.keys(copiedSectionFormControls).slice(1);\n\n        if (frmCtrlArr.length > 0) {\n            if (frmCtrlArr[0].indexOf('Pagebreak') !== -1) {\n                delete copiedSectionFormControls[`${frmCtrlArr[0]}`];\n            }\n    \n            let dupIndex = 0;\n            for (let i = 0; i < frmCtrlArr.length - 1; i++) {\n                if (frmCtrlArr[i].indexOf('Pagebreak') !== -1) {\n                    if (frmCtrlArr[i+1].indexOf('Pagebreak') !== -1) {\n                        dupIndex = i;\n                    }\n                }\n            }\n    \n            if(dupIndex !== 0) {\n                delete copiedSectionFormControls[`${frmCtrlArr[dupIndex]}`];\n            }\n        }\n\n        setSectionFormControls(copiedSectionFormControls);\n\n        let formControlArr = Object.values(copiedSectionFormControls);\n        if (formControlArr.length === 0) {\n            setFormValid(false);\n        } else {\n            checkFormValidity(Object.values(copiedSectionFormControls)\n                .filter(obj => typeof obj.valid !== 'undefined'));\n        }\n    }\n\n    // TODO: If the last agent is a pagebreak, handle it.\n    const onSubSectionCreatedHandler = () => {\n        // Subsections\n        let formControlArr = Object.keys(sectionFormControls).slice(1);\n        let sectionCount = formControlArr.filter(item => item.toLowerCase().indexOf('pagebreak') !== -1).length + 1;\n\n        let activeIndex = 0;\n        let subSections = new Array(sectionCount).fill({});\n\n        let index = 0;\n\n        while (index < formControlArr.length) {\n            let currentFormCtrl = formControlArr[index].toLowerCase().replace(/[^A-Za-z]/g, '');\n            let formCtrlValue = sectionFormControls[formControlArr[index]].value;\n            let copiedSubSection = {\n                ...subSections[activeIndex]\n            };\n\n            index++;\n\n            if (currentFormCtrl.indexOf('pagebreak') === -1) {\n                copiedSubSection[currentFormCtrl] = formCtrlValue;\n\n                subSections[activeIndex] = {...copiedSubSection};\n            } else {\n                activeIndex++;\n            }\n        }\n\n        if (!isEditMode) {\n            props.createdSubSection({\n                section: ((props.match || {}).params || {}).sectionId || '',\n                name: sectionFormControls['name'].value,\n                content: subSections\n            });\n        } else {\n            props.editedSubSection({\n                subsection: ((props.match || {}).params || {}).subsectionId || '',\n                section: ((props.match || {}).params || {}).sectionId || '',\n                name: sectionFormControls['name'].value,\n                content: subSections\n            });\n        }\n    }\n\n    // Exclude the first form control\n    let content = Object.keys(sectionFormControls).slice(1).map(frmCtrl => {\n        return <SectionFormControl\n            key={frmCtrl}\n            label={frmCtrl}\n            isPageBreak={frmCtrl.indexOf('Pagebreak') !== -1}\n            showRemove={true}\n            formControl={sectionFormControls[frmCtrl]}\n            inputChanged={(value) => onFormInputChangedHandler(value, frmCtrl)}\n            removed={() => onFormControlRemovedHandler(frmCtrl)}\n        />;\n    });\n\n    // Pick up the first element\n    let nameField = sectionFormControls.name;\n\n    return (\n        <section className={classes.CreateSection}>\n            <header className={classes.CreateSection__Header}>\n                <h1>{!isEditMode ? 'Create a subsection' : 'Edit the subsection'}</h1>\n\n                <SectionFormControl\n                    label={'Section Name'}\n                    isPageBreak={false}\n                    showRemove={false}\n                    formControl={nameField}\n                    inputChanged={(value) => onFormInputChangedHandler(value, 'name')}\n                />\n            </header>\n\n            <div className={classes.CreateSection__Body}>\n                <div className={classes.CreateSection__Body__FormField}>\n                    {content}\n                </div>\n\n                <div className={classes.CreateSection__Body__Menu}>\n                    <Menu\n                        items={SECTION_ELEMENTS}\n                        menuItemClicked={onMenuItemClickedHandler} />\n                </div>\n            </div>\n\n            <div className={classes.CreateSection__Cta}>\n                <Button\n                    disabled={!formValid}\n                    clicked={onSubSectionCreatedHandler}>{!isEditMode ? 'Create' : 'Edit'}</Button>\n            </div>\n        </section>\n    )\n}\n\nexport default withRouter(CreateSubSection);","import React, { useRef } from 'react';\n\nimport classes from './File.module.scss';\nimport Button from '../Button/Button';\n\nconst File = (props) => {\n    const fileInput = useRef();\n\n    const onFileSelected = (event) => {\n        props.selectedFile(event.target.files[0]);\n    }\n\n    if(props.droppedFile) {\n        fileInput.current.files = props.droppedFile;\n    }\n\n    const openFilePicker = (e) => {\n        e.preventDefault();\n        fileInput.current.click();\n    }\n\n    return (\n        <>\n            <input\n                type=\"file\"\n                name=\"file\"\n                id=\"file\"\n                onChange={onFileSelected}\n                ref={fileInput}\n                className={classes.Input} />\n            \n            <Button clicked={openFilePicker} type=\"ButtonSmall\">Select File</Button>\n        </>\n    )\n}\n\nexport default File;","import React, { Component, createRef } from 'react';\n\nimport classes from './DragAndDrop.module.scss';\nimport File from '../../components/UI/File/File';\n\nconst MIME_TYPE_MAP = {\n    \"image/png\": \"png\",\n    \"image/jpeg\": \"jpeg\",\n    \"image/jpg\": \"jpg\",\n    \"application/json\": \"json\"\n};\n\nclass DragAndDrop extends Component {\n    dropRef = createRef();\n\n    constructor(props) {\n        super(props);\n\n        if (this.props.preSelectedFileName) {\n            this.state = {\n                classList: [classes.DropContainer, classes.DropContainerEnter],\n                content: `Selected file: ${this.props.preSelectedFileName}`,\n                contentClassList: [classes.ContentText, classes.ValidFileType],\n                dataTransferFiles: undefined,\n                selectedFileName: this.props.preSelectedFileName\n            };\n        } else {\n            this.state = {\n                classList: [classes.DropContainer],\n                content: 'DRAG YOUR FILE HERE (.png, .jpeg, .jpg, .json)',\n                contentClassList: [classes.ContentText],\n                dataTransferFiles: undefined,\n                selectedFileName: undefined\n            };\n        }\n\n        this.dragCounter = 0;\n    }\n\n    componentDidMount() {\n        let div = this.dropRef.current;\n        div.addEventListener('dragenter', this.dragInHandler);\n        div.addEventListener('dragleave', this.dragOutHandler);\n        div.addEventListener('dragover', this.dragOverHandler);\n        div.addEventListener('drop', this.dropHandler);\n    }\n\n    componentWillUnmount() {\n        let div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.dragInHandler);\n        div.removeEventListener('dragleave', this.dragOutHandler);\n        div.removeEventListener('dragover', this.dragOverHandler);\n        div.removeEventListener('drop', this.dropHandler);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.file !== this.props.file && (prevProps.file !== undefined && this.props.file === undefined)) {\n            this.resetState();\n        }\n\n        if (prevProps.preSelectedFileName !== this.props.preSelectedFileName) {\n            this.setState({\n                classList: [classes.DropContainer, classes.DropContainerEnter],\n                content: `Selected file: ${this.props.preSelectedFileName}`,\n                contentClassList: [classes.ContentText, classes.ValidFileType],\n                dataTransferFiles: undefined,\n                selectedFileName: this.props.preSelectedFileName\n            });\n        }\n\n        return ((prevProps.file !== this.props.file) && (prevProps.file !== undefined && this.props.file === undefined)) ||\n            prevProps.preSelectedFileName !== this.props.preSelectedFileName;\n    }\n\n    checkMimeType = (file) => {\n        return MIME_TYPE_MAP[file];\n    }\n\n    resetState = () => {\n        this.setState({\n            classList: [classes.DropContainer],\n            content: 'DRAG YOUR FILE HERE (.png, .jpeg, jpg)',\n            contentClassList: [classes.ContentText],\n            dataTransferFiles: undefined,\n            selectedFileName: undefined\n        });\n    }\n\n    dragInHandler = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.dragCounter++;\n\n        this.setState((prevState) => {\n            return {\n                classList: prevState.classList.concat(classes.DropContainerEnter)\n            };\n        });\n\n        if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n            let isValid = this.checkMimeType(event.dataTransfer.items[0].type);\n            if(isValid) {\n                let newList = [classes.ContentText, classes.ValidFileType];\n                this.setState(prevState => {\n                    return {\n                        content: 'DROP YOUR FILE HERE',\n                        contentClassList: newList\n                    }\n                });\n            }\n            else {\n                let newList = [classes.ContentText, classes.InvalidFileType];\n                this.setState(prevState => {\n                    return {\n                        content: 'INVALID FILE TYPE!',\n                        contentClassList: newList\n                    }\n                });\n            }\n        }\n    }\n\n    dragOutHandler = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.dragCounter--;\n        if(this.dragCounter > 0) {\n            return;\n        }\n\n        this.setState((prevState) => {\n            return {\n                classList: prevState.classList.filter(c => c !== classes.DropContainerEnter)\n            };\n        });\n\n        if(this.state.selectedFileName === undefined || this.state.selectedFileName === '') {\n            let newList = [classes.ContentText];\n            this.setState({\n                content: 'DRAG YOUR FILE HERE (.png, .jpeg, jpg)',\n                contentClassList: newList\n            });\n        }\n        else {\n            let newList = [classes.ContentText, classes.ValidFileType];\n            this.setState(prevState => {\n                return {\n                    classList: [classes.DropContainer, classes.DropContainerEnter],\n                    content: `Selected file: ${this.state.selectedFileName}`,\n                    contentClassList: newList\n                }\n            });\n        }\n    }\n\n    dragOverHandler = (event) => {\n        // To prevent the file from opening\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    dropHandler = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n            if(this.checkMimeType(event.dataTransfer.items[0].type)) {\n                this.props.dropHandle(event.dataTransfer.files[0]);\n                this.dragCounter = 0;\n\n                let name = event.dataTransfer.files[0].name;\n\n                this.setState({\n                    classList: [classes.DropContainer, classes.DropContainerEnter],\n                    dataTransferFiles: event.dataTransfer.files,\n                    selectedFileName: name,\n                    content: `Selected file: ${name}`\n                });\n            }\n            else {\n                if(!this.props.file) {\n                    this.props.dropHandle(undefined);\n                    this.resetState();\n                }\n                else {\n                    if(this.state.selectedFileName !== undefined || this.state.selectedFileName !== '') {\n                        this.setState((prevState) => {\n                            let fileName = prevState.selectedFileName;\n                            return {\n                                classList: [classes.DropContainer, classes.DropContainerEnter],\n                                content: `Selected file: ${fileName}`,\n                                contentClassList: [classes.ContentText, classes.ValidFileType],\n                                dataTransferFiles: prevState.dataTransferFiles,\n                                selectedFileName: fileName\n                            }\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    fileSelectHandler = (file) => {\n        // Validate the file first\n        if(!this.checkMimeType(file.type)) {\n            return;\n        }\n\n        this.setState({\n            classList: [classes.DropContainer, classes.DropContainerEnter],\n            selectedFileName: file.name,\n            content: `Selected file: ${file.name}`,\n            contentClassList: [classes.ContentText, classes.ValidFileType]\n        });\n\n        this.props.fileSelect(file);\n    }\n\n    render() {\n        let pageContentTemplate = <p className={this.state.contentClassList.join(' ')}>{this.state.content}</p>\n\n        return(\n            <div className={this.state.classList.join(' ')} ref={this.dropRef}>\n                {pageContentTemplate}\n                <div className={classes.FileSelect}>\n                    <File selectedFile={this.fileSelectHandler} droppedFile={this.state.dataTransferFiles} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DragAndDrop;","import React, { useState } from 'react';\n\nimport classes from './FileUpload.module.scss';\nimport DragAndDrop from '../../containers/DragAndDrop/DragAndDrop';\n\nconst FileUpload = props => {\n    const [file, setFile] = useState(undefined);\n\n    const onSelectFile = (input_file) => {\n        setFile(input_file);\n\n        props.fileSelected(input_file);\n    }\n\n    return (\n        <section className={classes.FileUpload}>\n            <header className={classes.FileUploadHeader}>\n                <h2>File Upload</h2>\n            </header>\n            \n            <div className={classes.Form}>\n                <DragAndDrop\n                    dropHandle={onSelectFile}\n                    file={file}\n                    fileSelect={onSelectFile}\n                    preSelectedFileName={props.preSelectedFile}\n                />\n            </div>\n        </section>\n    )\n}\n\nexport default FileUpload;","import React, { useState, useEffect } from 'react';\n\nimport classes from './CreateQuiz.module.scss';\nimport FileUpload from '../../../../../FileUpload/FileUpload';\nimport Input from '../../../../../UI/Input/Input';\nimport Button from '../../../../../UI/Button/Button';\nimport formValidation from '../../../../../../utility/formValidation';\n\nconst CreateQuiz = props => {\n    const [editMode, setEditMode] = useState(false);\n    const [quizToEditData, setQuizToEditData] = useState(null);\n    const [quizNameFormControl, setquizNameFormControl] = useState({\n        validation: {\n            required: true\n        },\n        valid: false,\n        touched: false,\n        value: ''\n    });\n    const [file, setFile] = useState(undefined);\n\n    useEffect(() => {\n        if (typeof props.currentQuizData === 'undefined') {\n            return;\n        }\n\n        setEditMode(true);\n\n        setQuizToEditData(props.currentQuizData);\n\n        const copiedQuizNameFormCtrl = { ...quizNameFormControl };\n\n        copiedQuizNameFormCtrl.touched = true;\n        copiedQuizNameFormCtrl.value = props.currentQuizData.name;\n        copiedQuizNameFormCtrl.valid = true;\n\n        setquizNameFormControl(copiedQuizNameFormCtrl);\n        // eslint-disable-next-line\n    }, [props.currentQuizData]);\n\n    const onInputFieldChanged = (event) => {\n        const copiedQuizNameFormCtrl = { ...quizNameFormControl };\n\n        let value = event.target.value;\n\n        copiedQuizNameFormCtrl.touched = true;\n        copiedQuizNameFormCtrl.value = value;\n        copiedQuizNameFormCtrl.valid = formValidation(value, copiedQuizNameFormCtrl.validation);\n\n        setquizNameFormControl(copiedQuizNameFormCtrl);\n    }\n\n    const onFileSelectedHandler = (selectedFile) => {\n        setFile(selectedFile);\n    }\n\n    const onQuizCreate = () => {\n        const formData = new FormData();\n\n        formData.append('quizName', quizNameFormControl.value);\n        \n        if (typeof file !== 'undefined') {\n            formData.append('file', file);\n        } else {\n            formData.append('fileName', quizToEditData.questionDataUrl);\n        }\n\n        if (editMode) {\n            formData.append('quizId', quizToEditData._id);\n\n            props.onQuizEdited(formData)\n        } else {\n            props.onQuizCreated(formData);\n        }\n    }\n\n    return (\n        <section className={classes.CreateQuiz}>\n            <header className={classes.CreateQuiz__Header}>\n                <h1>{!editMode ? 'Create a' : 'Edit the'} quiz</h1>\n            </header>\n\n            <div className={classes.CreateQuiz__Body}>\n                <Input\n                    elementType='input'\n                    elementConfig={{\n                        type: 'text',\n                        placeholder: 'Quiz name'\n                    }}\n                    label='Quiz name'\n                    value={quizNameFormControl.value}\n                    touched={quizNameFormControl.touched}\n                    isValid={quizNameFormControl.valid}\n                    changed={(event) => onInputFieldChanged(event)}\n                />\n\n                <FileUpload\n                    fileSelected={onFileSelectedHandler}\n                    preSelectedFile={editMode ? quizToEditData.questionDataUrl.split(\"\\\\\").pop().slice(Date.now().toString().length) : undefined}\n                />\n            </div>\n\n            <div className={classes.CreateQuiz__Cta}>\n                <Button\n                    clicked={onQuizCreate}>{!editMode ? 'Create' : 'Edit'}</Button>\n            </div>\n        </section>\n    )\n}\n\nexport default CreateQuiz;","import React, { useState, useEffect, useRef } from 'react';\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\n\n// import classes from './Course.module.scss';\nimport axiosAdmin from '../../../../axiosUtility/axios-admin';\nimport CourseHome from './CourseHome/CourseHome';\nimport CreateSubSection from './CreateSubSection/CreateSubSection';\nimport CreateQuiz from '../Course/CourseActivities/CreateQuiz/CreateQuiz';\n\n// TODO: Instead of using state management here, move all the logic to its parent component\nconst Course = props => {\n    const [subSectionToEdit, setSubSectionToEdit] = useState({});\n    const config = {\n        headers: {\n            'Authorization': 'Bearer ' + props.token\n        }\n    };\n    const history = useHistory();\n\n    const timeout = useRef();\n\n    // useEffect(() => {\n    //     setCourseData(props.courseData);\n    // }, [props.courseData]);\n\n    useEffect(() => {\n        timeout.current = null;\n        return () => {\n            clearTimeout(timeout.current);\n        }\n    }, [])\n\n    const onSectionAddedHandler = (sectionName) => {\n        axiosAdmin.post(`/section`, {\n            courseId: props.courseData._id,\n            name: sectionName\n        }, config).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isSectionAdded) {\n                props.courseListUpdated(responseData.newCourseData);\n            }\n        });\n    }\n\n    const onSectionDeletedHandler = (sectionId) => {\n        axiosAdmin.delete(`/section/${sectionId}`, config).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isSectionDeleted) {\n                // props.courseListUpdated(responseData.newCourseData);\n                let copiedCourseData = { ...props.courseData };\n                let deletedSectionId = (responseData.result || {})._id || '';\n                let copiedCourseSections = [ ...copiedCourseData.sections ];\n                let newSections =  copiedCourseSections.filter(section => section._id !== deletedSectionId);\n\n                copiedCourseData.sections = [...newSections];\n\n                props.courseListUpdated(copiedCourseData);\n            }\n        });\n    }\n\n    const courseSectionDataChangedHandler = (newSectionData) => {\n        let copiedCourseData = { ...props.courseData };\n\n        let copiedCourseSections = [ ...copiedCourseData.sections ];\n        let newSections =  copiedCourseSections.map(section => {\n            if (section._id === newSectionData._id) {\n                section = {...newSectionData};\n            }\n\n            return section;\n        });\n\n        copiedCourseData.sections = [...newSections];\n\n        return copiedCourseData;\n    }\n\n    const onSubsectionDeletedHandler = (subsectionId) => {\n        axiosAdmin.delete(`/section/subsection/${subsectionId}`, config).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isSubSectionDeleted) {\n                props.courseListUpdated(courseSectionDataChangedHandler(responseData.newSectionData));\n            }\n        });\n    }\n\n    const onSubsectionEdit = (data) => {\n        const subSectionToEdit = ((props.courseData.sections.find(section => section._id === data.section) ||\n            {}).subsections || []).find(subsection => subsection._id === data.subsection) || {};\n\n        setSubSectionToEdit(subSectionToEdit);\n\n        history.push(props.match.url + `/${data.section}/edit-subsection/${data.subsection}`);\n    }\n\n    const onSubSectionEditedHandler = (data) => {\n        axiosAdmin.put(`/section/subsection/${data.subsection}`, data, config).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isSubSectionEdited) {\n                props.courseListUpdated(courseSectionDataChangedHandler(responseData.newSectionData));\n\n                props.history.push(props.match.url + `/course-management/${props.courseData._id}`);\n            }\n        });\n    }\n\n    const onSubSectionCreatedHandler = (data) => {\n        axiosAdmin.post(`/section/${data.section}/add-subsection`, {\n            ...data\n        }, config).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isSubSectionAdded) {\n                // let newSectionData = responseData.newSectionData;\n\n                props.courseListUpdated(courseSectionDataChangedHandler(responseData.newSectionData))\n\n                // let copiedCourseData = { ...props.courseData };\n\n                // let copiedCourseSections = [ ...copiedCourseData.sections ];\n                // let newSections =  copiedCourseSections.map(section => {\n                //     if (section._id === newSectionData._id) {\n                //         section = {...newSectionData};\n                //     }\n\n                //     return section;\n                // });\n\n                // copiedCourseData.sections = [...newSections];\n\n                // props.courseListUpdated(copiedCourseData)\n\n                // setCourseData(copiedCourseData);\n\n                props.history.push(props.match.url + `/course-management/${props.courseData._id}`);\n            }\n        });\n    }\n\n    const onCourseActivityCreatedHandler = (activityType, data) => {\n        let requestUrl = '';\n\n        switch (activityType) {\n            case 'quiz':\n                requestUrl = '/quiz';\n                break;\n            default:\n                break;\n        }\n\n        let courseId = props.courseData._id;\n\n        if (typeof data.append !== 'undefined') {\n            data.append('courseId', courseId);\n        } else {\n            data['courseId'] = courseId;\n        }\n\n        axiosAdmin.post(requestUrl, data, config).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isAdded) {\n                props.courseActivityAdded(responseData.newCourseData);\n\n                props.history.push(props.match.url + `/course-management/${props.courseData._id}`);\n            }\n        }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    const onCourseActivityEditedHandler = (activityType, data) => {\n        let requestUrl = '';\n\n        // console.log(data.get('quizId'))\n\n        switch (activityType) {\n            case 'quiz':\n                requestUrl = '/quiz/' + data.get('quizId');\n                break;\n            default:\n                break;\n        }\n\n        axiosAdmin.put(requestUrl, data, config).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isEdited) {\n                props.courseActivityEdited(responseData.newCourseData);\n\n                props.history.push(props.match.url + `/course-management/${props.courseData._id}`);\n            }\n        }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    const onCourseActivityDeletedHandler = (activityType, id) => {\n        let requestUrl = '';\n\n        switch (activityType) {\n            case 'quiz':\n                requestUrl = '/quiz/' + id;\n                break;\n            default:\n                break;\n        }\n\n        axiosAdmin.delete(requestUrl, config).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isDeleted) {\n                props.courseListUpdated(responseData.newCourseData);\n            }\n        }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    const routes = (\n        <Switch>\n            <Route path={props.match.url + '/create-questionnaire'} render={() => <div>CREATE QUESTIONNAIRE</div>} />\n            <Route path={props.match.url + '/edit-quiz/:quizId'} render={() => <CreateQuiz\n                currentQuizData={(props.courseData || {}).quiz || {}}\n                onQuizEdited={(quizData) => onCourseActivityEditedHandler('quiz', quizData)} />} />\n            <Route path={props.match.url + '/create-quiz'} render={() => <CreateQuiz\n                currentQuizData={undefined}\n                onQuizCreated={(quizData) => onCourseActivityCreatedHandler('quiz', quizData) } />} />\n            <Route path={props.match.url + '/:sectionId/edit-subsection/:subsectionId'} render={() => <CreateSubSection\n                savedSubSectionData={subSectionToEdit}\n                editedSubSection={onSubSectionEditedHandler} />}\n            />\n            <Route path={props.match.url + '/:sectionId/create-subsection'} render={() => <CreateSubSection\n                sectionList={props.courseData.sections}\n                createdSubSection={onSubSectionCreatedHandler} />}\n            />\n            {/* <Route path={props.match.url + '/:sectionName'} render={() => <span>Section Management</span>} /> */}\n            <Route path={props.match.url + '/'} render={() => <CourseHome\n                sectionAdded={onSectionAddedHandler}\n                deletedSection={onSectionDeletedHandler}\n                deletedSubsection={onSubsectionDeletedHandler}\n                editedSubsection={onSubsectionEdit}\n                courseData={props.courseData}\n                courseActivityDeleted={onCourseActivityDeletedHandler}\n                {...props} />}\n            />\n\t\t</Switch>\n    )\n\n    return (\n        routes\n    )\n}\n\nexport default withRouter(Course);","import React, { useState, useEffect } from 'react';\n\nimport classes from './Counter.module.scss';\n\nconst Counter = (props) => {\n    const [counter, setCounter] = useState(0);\n\n    useEffect(() => {\n        setCounter(props.initialValue);\n    }, [props.initialValue]);\n\n    const counterChanged = (isIncrement) => {\n        let newCounter = counter;\n\n        if (isIncrement) {\n            newCounter = newCounter + 1;\n        } else {\n            if (counter === 0) {\n                return;\n            }\n\n            newCounter = newCounter - 1;\n        }\n\n        setCounter(newCounter);\n\n        props.counterAmountChanged(newCounter - counter);\n    }\n\n    return (\n        <div className={classes.Counter}>\n            <span className={classes.Counter__Label}>{props.label}</span>\n            <div className={classes.Counter__Body}>\n                <span\n                    className={classes.Counter__Button}\n                    onClick={() => counterChanged(false)}>\n                    -\n                </span>\n                <span className={classes.Counter__Amount}>{counter}</span>\n                <span\n                    className={classes.Counter__Button}\n                    onClick={() => counterChanged(true)}>\n                    +\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default Counter;","import React from 'react';\n\nimport classes from './Option.module.scss';\n\nconst Option = (props) => {\n\n    const optionSelected = () => {\n        props.onOptionSelected(props.value)\n    }\n\n    return (\n        <li className={classes.Option} onClick={optionSelected}>\n            {props.value}\n        </li>\n    )\n}\n\nexport default Option;","import React from 'react';\n\nimport classes from './Options.module.scss';\nimport Option from './Option/Option';\n\nconst Options = (props) => {\n    const optionSelectedHandler = (value) => {\n        props.selectedOption(value);\n    }\n\n    let options = null;\n    if(props.show) {\n        options = (\n            <ul className={classes.SelectOptions} ref={props.optionsRef}>\n                {props.options.map(option => {\n                    return <Option key={option} value={option} onOptionSelected={optionSelectedHandler}></Option>\n                })}\n            </ul>\n        )\n    }\n\n    return (\n        options\n    )\n}\n\nexport default Options;","import React, { useState, useRef, useEffect } from 'react';\n\nimport classes from './SelectInput.module.scss';\nimport Options from './Options/Options';\n\nconst SelectInput = (props) => {\n    const [showOptions, setShowOptions] = useState(false);\n\n    let optionsRef = useRef(null);\n    let buttonRef = useRef(null);\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n        // eslint-disable-next-line\n    }, [showOptions]);\n\n    const handleClickOutside = (event) => {\n        if((optionsRef.current && buttonRef.current.contains(event.target))) {\n            return;\n        }\n\n        if(!(optionsRef.current && optionsRef.current.contains(event.target))) {\n            if(showOptions) {\n                setShowOptions(showOptions => !showOptions);\n            }\n        }\n    }\n    \n    const onSelectInputClickedHandler = () => {\n        setShowOptions(showOptions => !showOptions);\n    }\n\n    const onSelectOptionHandler = (value) => {\n        // setSelected(value);\n        setShowOptions(showOptions => !showOptions);\n        props.valueSelected(value);\n    }\n    \n    return (\n        <>\n            <div className={classes.SelectInputWrapper}>\n                <Options\n                    show={showOptions}\n                    options={props.itemPerPageList}\n                    selectedOption={onSelectOptionHandler}\n                    optionsRef={optionsRef}\n                />\n                \n                <label>{props.label}</label>\n                \n                <div className={classes.SelectInput} onClick={onSelectInputClickedHandler} ref={buttonRef}>{props.itemPerPage}</div>\n            </div>\n        </>\n        \n    )\n}\n\nexport default SelectInput;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './CreateCourse.module.scss';\nimport Input from '../../../UI/Input/Input';\nimport Counter from '../../../UI/Counter/Counter';\nimport Button from '../../../UI/Button/Button';\nimport SelectInput from '../../../UI/SelectInput/SelectInput';\nimport checkValidity from '../../../../utility/formValidation';\nimport addInputField from '../../../../utility/addInputField';\n\nconst QUIZ_LIST = ['Quiz 1', 'Quiz 2', 'Quiz 3', 'Quiz 4'];\n\nconst CreateCourse = props => {\n    const params = useParams();\n    const [isEditMode, setIsEditMode] = useState(false);\n    const [courseDataFormControls, setCourseDataFormControls] = useState({\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Course Title'\n            },\n            label: \"Course Title\",\n            validation: {\n                required: true,\n                minLength: 3\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        image: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'url',\n                placeholder: 'Landing Image URL'\n            },\n            label: \"Landing Image URL\",\n            validation: {\n                required: true,\n                isURL: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        description: {\n            elementType: 'textarea',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Description'\n            },\n            label: \"Description\",\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        }\n    });\n    const [facultyFormControls, setFacultyFormControls] = useState({});\n    const [formValid, setFormValid] = useState(false);\n    const [selectedQuiz, setSelectedQuiz] = useState(QUIZ_LIST[0]);\n\n    const populateFormFields = useCallback(() => {\n        const copiedFormControls = { ...courseDataFormControls };\n        const copiedNameFormCtrl = { ...copiedFormControls.name };\n\n        copiedNameFormCtrl.value = (props.savedCourseData || {}).name || '';\n        copiedNameFormCtrl.valid = true;\n        copiedNameFormCtrl.touched = true;\n        copiedFormControls.name = { ...copiedNameFormCtrl };\n\n        const copiedImageFormCtrl = { ...copiedFormControls.image };\n\n        copiedImageFormCtrl.value = ((props.savedCourseData || {}).landing || {}).image || '';\n        copiedImageFormCtrl.valid = true;\n        copiedImageFormCtrl.touched = true;\n        copiedFormControls.image = { ...copiedImageFormCtrl };\n\n        const copiedDescFormCtrl = { ...copiedFormControls.description };\n\n        copiedDescFormCtrl.value = ((props.savedCourseData || {}).landing || {}).info || '';\n        copiedDescFormCtrl.valid = true;\n        copiedDescFormCtrl.touched = true;\n        copiedFormControls.description = { ...copiedDescFormCtrl };\n\n        setCourseDataFormControls({...copiedFormControls});\n\n        // ======================================================== //\n        let copiedFacultyFormControls = { ...facultyFormControls };\n\n        (((props.savedCourseData || {}).landing || {}).faculty || []).forEach((facultyMember, index) => {\n            copiedFacultyFormControls = addInputField(copiedFacultyFormControls, {\n                type: 'input',\n                inputKey: `faculty${index}`,\n                placeholder: `Faculty ${index + 1}`,\n                label: `Faculty ${index + 1}`,\n                validation: {\n                    required: true,\n                    minLength: 8\n                },\n                valid: true,\n                touched: true,\n                value: [facultyMember.firstName, facultyMember.lastName].join(' ')\n            });\n        });\n\n        setFacultyFormControls(copiedFacultyFormControls);\n\n        // eslint-disable-next-line\n    }, [props.savedCourseData]);\n\n    useEffect(() => {\n        if (params.id && params.id !== '') {\n            setIsEditMode(true);\n\n            // Populate the form fields\n            populateFormFields();\n        }\n    }, [params, populateFormFields]);\n\n    useEffect(() => {\n        let facultyArr = Object.values(facultyFormControls);\n\n        if (facultyArr.length === 0)\n            setFormValid(false);\n        else\n            checkFormValidity([...Object.values(courseDataFormControls), ...facultyArr]);\n    }, [courseDataFormControls, facultyFormControls]);\n\n    const onQuizSelectedHandler = (selectedQuiz) => {\n        setSelectedQuiz(selectedQuiz);\n    }\n\n    const onCourseCreatedHandler = () => {\n        let courseData = {};\n\n        if (!isEditMode) {\n            courseData = {\n                name: (courseDataFormControls.name || {}).value || '',\n                landing: {\n                    image: (courseDataFormControls.image || {}).value || '',\n                    info: (courseDataFormControls.description || {}).value || '',\n                    faculty: Object.keys(facultyFormControls).map(facultyFrmCtrl => {\n                        return facultyFormControls[facultyFrmCtrl].value || '';\n                    })\n                },\n                quiz: selectedQuiz\n            };\n\n            props.courseCreated(courseData);\n        } else {\n            courseData = {\n                ...props.savedCourseData,\n                name: (courseDataFormControls.name || {}).value || '',\n                landing: {\n                    image: (courseDataFormControls.image || {}).value || '',\n                    info: (courseDataFormControls.description || {}).value || '',\n                    faculty: Object.keys(facultyFormControls).map(facultyFrmCtrl => {\n                        return facultyFormControls[facultyFrmCtrl].value || '';\n                    })\n                },\n                quiz: selectedQuiz\n            };\n\n            props.courseEdited(courseData)\n        }\n    }\n\n    const onInputChangedHandler = (event, formCtrl, operationType) => {\n        let inputtedValue = event.target.value;\n\n        switch (operationType) {\n            case 'faculty':\n                let copiedFacultyFormControls = { ...facultyFormControls };\n                let copiedFacultyFormCtrl = { ...copiedFacultyFormControls[formCtrl] };\n\n                copiedFacultyFormCtrl.value = inputtedValue;\n                copiedFacultyFormCtrl.touched = true;\n                copiedFacultyFormCtrl.valid = checkValidity(inputtedValue, copiedFacultyFormCtrl.validation);\n\n                copiedFacultyFormControls[formCtrl] = copiedFacultyFormCtrl;\n\n                setFacultyFormControls(copiedFacultyFormControls);\n                break;\n            default:\n                let copiedCourseDataFormControls = { ...courseDataFormControls };\n                let copiedFormCtrl = { ...copiedCourseDataFormControls[formCtrl] };\n\n                copiedFormCtrl.value = inputtedValue;\n                copiedFormCtrl.touched = true;\n                copiedFormCtrl.valid = checkValidity(inputtedValue, copiedFormCtrl.validation);\n\n                copiedCourseDataFormControls[formCtrl] = copiedFormCtrl;\n                \n                setCourseDataFormControls(copiedCourseDataFormControls);\n                break;\n        }\n    }\n\n    const onCounterAmountChangedHandler = (operation) => {\n        // Operation: 1 (Increment)\n        // Operation: -1 (Decrement)\n        let copiedFacultyFormControls = { ...facultyFormControls };\n        let keyArr = Object.keys(copiedFacultyFormControls);\n\n        if (operation === 1) {\n            let formCtrlCount = keyArr.length;\n\n            copiedFacultyFormControls = addInputField(copiedFacultyFormControls, {\n                type: 'input',\n                inputKey: `faculty${formCtrlCount}`,\n                placeholder: `Faculty ${formCtrlCount + 1}`,\n                label: `Faculty ${formCtrlCount + 1}`,\n                validation: {\n                    required: true,\n                    minLength: 8\n                }\n            });\n\n            setFormValid(false);\n        } else {\n            delete copiedFacultyFormControls[keyArr.pop()];\n        }\n\n        setFacultyFormControls(copiedFacultyFormControls);\n    }\n\n    const checkFormValidity = (wholeForm) => {\n        let isValid = true;\n\n        wholeForm.forEach(formCtrl => {\n            isValid = isValid && formCtrl.valid;\n        });\n\n        setFormValid(isValid);\n    }\n\n    /*\n        TODO: This is pretty messy, fix later\n    */\n    const createFormContent = (formControls, formType) => {\n        let content = Object.keys(formControls).map(formCtrl => {\n            return <Input\n                key={formCtrl}\n                elementType={formControls[formCtrl].elementType}\n                elementConfig={formControls[formCtrl].elementConfig}\n                label={formControls[formCtrl].label}\n                value={formControls[formCtrl].value}\n                touched={formControls[formCtrl].touched}\n                isValid={formControls[formCtrl].valid}\n                changed={(event) => onInputChangedHandler(event, formCtrl, formType)} />\n        });\n\n        return content;\n    }\n\n    return (\n        <section className={classes.CreateCourse}>\n            <header className={classes.CreateCourse__Header}>\n                <h1>{!isEditMode ? 'Create a course' : 'Edit the course'}</h1>\n            </header>\n\n            <section className={classes.CreateCourse__Body}>\n                {createFormContent(courseDataFormControls, 'course')}\n\n                <SelectInput label={'Quiz list: '} itemPerPageList={QUIZ_LIST} valueSelected={onQuizSelectedHandler} />\n\n                <div className={classes.CreateCourse__Faculty}>\n                    <Counter\n                        label={'Faculty:'}\n                        initialValue={!isEditMode ? 0 : (((props.savedCourseData || {}).landing || {}).faculty || []).length || 0}\n                        counterAmountChanged={(operationType) => onCounterAmountChangedHandler(operationType, 'faculty')} />\n\n                    {createFormContent(facultyFormControls, 'faculty')}\n                </div>\n            </section>\n\n            <div className={classes.CreateCourse__Cta}>\n                <Button\n                    disabled={!formValid}\n                    clicked={onCourseCreatedHandler}>{!isEditMode ? 'Create' : 'Edit'}</Button>\n            </div>\n        </section>\n    );\n}\n\nexport default CreateCourse;","import React from 'react';\n\nimport classes from './ListElement.module.scss';\n\nconst ListElement = props => {\n    return (\n        <li className={classes.ListElement}>\n            {props.children}\n        </li>\n    )\n}\n\nexport default ListElement;","import React from 'react';\n\nimport svg from '../../../../../assets/images/sprite.svg';\nimport classes from './CourseCard.module.scss';\nimport ListElement from '../../../../UI/ListElement/ListElement';\nimport Button from '../../../../UI/Button/Button';\n\nconst CourseCard = (props) => {\n    const courseData = props.data || {};\n    const landingData = courseData.landing || {};\n    const courseName = courseData.name || '';\n\n    return (\n        <div className={classes.CourseCard}>\n            <span\n                style={{backgroundImage: `url(${landingData.image || ''}`}}\n                className={classes.CourseCard__ImgSection}\n            ></span>\n\n            <h5 className={classes.CourseCard__Name} onClick={props.courseNameClicked}>{courseName.length > 25 ? courseName.slice(0, 25) + '...' : courseName}</h5>\n            \n            <div className={classes.CourseCard__Body}>\n                <h5>\n                    <svg className={classes.CourseCard__Body__Icon}>\n                        <use xlinkHref={`${svg}#icon-education`}></use>\n                    </svg>\n                    <span>\n                        Faculty:\n                    </span>\n                </h5>\n\n                <ul>\n                    {(landingData.faculty || []).map((person, index) => {\n                        return <ListElement key={index}>{[person.firstName, person.lastName].join(' ')}</ListElement>;\n                    })}\n                </ul>\n            </div>\n\n            <div className={classes.CourseCard__Cta}>\n                <Button btnType='BtnPrimary' btnSize='BtnSmall' clicked={props.coursePublish}>{courseData.isPublished ? 'UnPublish' : 'Publish'}</Button>\n                <Button btnType='BtnSecondary' btnSize='BtnSmall' clicked={props.courseEdit}>Edit</Button>\n                <Button btnType='BtnDanger' btnSize='BtnSmall' clicked={props.courseDelete}>Delete</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default CourseCard;","import React from 'react';\n\nimport classes from './AdminCourseList.module.scss';\nimport CourseCard from './CourseCard/CourseCard';\n\nconst AdminCourseList = (props) => {\n    return (\n        <section className={classes.AdminCourseList}>\n            <header className={classes.AdminCourseList__Header}>\n                <h1>Course List</h1>\n            </header>\n\n            <div className={classes.AdminCourseList__Body}>\n                {(props.courseList || []).map(course => {\n                    return <CourseCard\n                        key={course._id}\n                        data={course}\n                        courseEdit={() => props.onCourseEdited(course)}\n                        courseDelete={() => props.onCourseDeleted(course._id)}\n                        coursePublish={() => props.onCoursePublished(course._id, !course.isPublished)}\n                        courseNameClicked={() => props.onCourseNameClicked(course)}\n                    />\n                })}\n            </div>\n        </section>\n    )\n}\n\nexport default AdminCourseList;","import React from 'react';\n\nimport classes from './UserItem.module.scss';\n\nconst UserItem = props => {\n    return (\n        <li \n            className={!props.userData.isSelected ? classes.UserItem : [classes.UserItem, classes.UserItem__Active].join(' ')}\n            onClick={props.userSelect}>\n            {props.userData.name}\n        </li>\n    );\n}\n\nexport default UserItem;","import React from 'react';\n\nimport classes from './UserPool.module.scss';\nimport UserItem from './UserItem/UserItem';\n\nconst UserPool = props => {\n    return (\n        <div className={classes.UserPool}>\n            <h2>{props.title}</h2>\n\n            <ul className={classes.UserPool__Body}>\n                {props.userList.map(user => {\n                    return <UserItem\n                        key={user._id}\n                        userData={user}\n                        userSelect={() => props.userSelected(user._id)}\n                    />;\n                })}\n            </ul>\n        </div>\n    );\n}\n\nexport default UserPool;","import React, { useState, useEffect } from 'react';\n\nimport classes from './CourseEnrollment.module.scss';\nimport UserPool from './UserPool/UserPool';\nimport Button from '../../../UI/Button/Button';\n\nconst CourseEnrollment = props => {\n    const [enrolledUsers, setEnrolledUsers] = useState(props.enrolledUsers.map(user => {\n        return {\n            _id: user._id,\n            name: user.firstName + ' ' + user.lastName,\n            isSelected: false\n        }\n    }));\n    const [nonEnrolledUsers, setNonEnrolledUsers] = useState([]);\n\n    useEffect(() => {\n        let idArr = props.enrolledUsers.map(user => user._id);\n\n        const modifiedUserList = props.userList\n            .filter(user => user.status !== 'admin' && idArr.indexOf(user._id) === -1)\n            .map(user => {\n                return {\n                    _id: user._id,\n                    name: user.firstName + ' ' + user.lastName,\n                    isSelected: false\n                };\n            });\n\n        setNonEnrolledUsers(modifiedUserList)\n    }, [props.userList, props.enrolledUsers]);\n\n    const onUserSelectedHandler = (action, userId) => {\n        let copiedList = {};\n\n        switch(action) {\n            case 'enrol':\n                copiedList = [...nonEnrolledUsers].map(item => {\n                    if (item._id === userId) {\n                        item.isSelected = !item.isSelected;\n                    }\n\n                    return item;\n                });\n\n                setNonEnrolledUsers(copiedList);\n                break;\n            case 'expel':\n                copiedList = [...enrolledUsers].map(item => {\n                    if (item._id === userId) {\n                        item.isSelected = !item.isSelected;\n                    }\n\n                    return item;\n                });\n\n                setEnrolledUsers(copiedList);\n                break;\n            default:\n                console.log('Check your enrollment action!');\n                break;\n        }\n    }\n\n    const onUserEnrollmentChangedHandler = (action) => {\n        let copiedEnrolledUsers = [...enrolledUsers];\n        let copiedNonEnrolledUsers = [...nonEnrolledUsers];\n\n        if (action === 'enrol') {\n            copiedNonEnrolledUsers.filter(user => user.isSelected).forEach(user => {\n                copiedEnrolledUsers.push({\n                    ...user,\n                    isSelected: false\n                });\n            });\n    \n            copiedNonEnrolledUsers = copiedNonEnrolledUsers.filter(user => !user.isSelected);\n        } else {\n            copiedEnrolledUsers.filter(user => user.isSelected).forEach(user => {\n                copiedNonEnrolledUsers.push({\n                    ...user,\n                    isSelected: false\n                });\n            });\n\n            copiedEnrolledUsers = copiedEnrolledUsers.filter(user => !user.isSelected);\n        }\n\n        setNonEnrolledUsers(copiedNonEnrolledUsers);\n        setEnrolledUsers(copiedEnrolledUsers);\n    }\n\n    const onUserEnrollmentSubmit = () => {\n        props.onUserEnrollmentSubmitted(enrolledUsers.map(enrolledUser => enrolledUser._id));\n    }\n\n    return (\n        <section className={classes.CourseEnrollment}>\n            <header className={classes.CourseEnrollment__Header}>\n                <h2>Enroll users to the course</h2>\n            </header>\n\n            <div className={classes.CourseEnrollment__Body}>\n                <UserPool\n                    title=\"Enrolled Users\"\n                    userList={enrolledUsers}\n                    userSelected={(userId) => onUserSelectedHandler('expel', userId)}\n                />\n\n                <div className={classes.CourseEnrollment__Body__Cta}>\n                    <button onClick={() => onUserEnrollmentChangedHandler('enrol')}>{'<<<<'}</button>\n\n                    <button onClick={() => onUserEnrollmentChangedHandler('expel')}>{'>>>>'}</button>\n                </div>\n\n                <UserPool\n                    title=\"Non Enrolled Users\"\n                    userList={nonEnrolledUsers}\n                    userSelected={(userId) => onUserSelectedHandler('enrol', userId)}\n                />\n            </div>\n\n            <div className={classes.CourseEnrollment__Cta}>\n                <Button\n                    btnType=\"BtnPrimary\"\n                    clicked={onUserEnrollmentSubmit}>Submit</Button>\n            </div>\n        </section>\n    );\n}\n\nexport default CourseEnrollment;","import React, { useState, useEffect  } from 'react';\nimport { Route, Switch, useHistory} from 'react-router-dom';\n\nimport axiosAdmin from '../../../axiosUtility/axios-admin';\nimport Course from './Course/Course';\nimport CreateCourse from './CreateCourse/CreateCourse';\nimport AdminCourseList from './CourseList/AdminCourseList';\nimport CourseEnrollment from './CourseEnrollment/CourseEnrollment';\n\nconst CourseManagement = (props) => {\n    const config = {\n        headers: {\n            'Authorization': 'Bearer ' + props.token\n        }\n    };\n    const [selectedCourse, setSelectedCourse] = useState({});\n    const [courseToEdit, setCourseToEdit] = useState({});\n    const [courseList, setCourseList] = useState([]);\n    const [userList, setUserList] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        axiosAdmin.get('/course').then(response => {\n            setCourseList(response.data.courseList);\n        });\n\n        axiosAdmin.get('/user', config).then(response => {\n            setUserList(response.data.userList);\n        });\n        // eslint-disable-next-line\n    }, []);\n\n    const onCourseNameClickedHandler = (course) => {\n        setSelectedCourse(course);\n\n        history.push(props.match.url + `/course-management/${course._id}`);\n    }\n\n    const onCourseCreatedHandler = (courseData) => {\n        // console.log(courseData)\n        axiosAdmin.post(`/course`, courseData, config).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isAdded) {\n                const newCourseList = courseList.concat(responseData.addedProduct);\n\n                setCourseList(newCourseList);\n\n                history.push(props.match.url + '/course-management');\n            }\n        });\n    };\n\n    const onCourseEditHandler = (courseToEdit) => {\n        history.push(props.match.url + `/course-management/edit-course/${courseToEdit._id}`)\n\n        setCourseToEdit(courseToEdit);\n    }\n\n    const onCourseEditedHandler = (newCourseData) => {\n        axiosAdmin.put(`/course/${newCourseData._id}`, newCourseData, config).then(response => {\n            if (response.data.isEdited) {\n                const copiedCourseList = courseList.map(course => {\n                    if (course._id === newCourseData._id) {\n                        return {\n                            ...response.data.newCourse\n                        };\n                    }\n\n                    return course\n                });\n\n                setCourseList(copiedCourseList);\n\n                history.push(props.match.url + '/course-management');\n            }\n        });\n    }\n\n    const onCourseDeletedHandler = (courseId) => {\n        axiosAdmin.delete(`/course/${courseId}`, config).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isDeleted || false) {\n                const copiedCourseList = courseList.filter(course => course._id !== responseData.removedItemId);\n\n                setCourseList(copiedCourseList);\n            }\n        })\n    }\n\n    const onCoursePublishedHandler = (courseId, isPublished) => {\n        axiosAdmin.put(`/course/publish/${courseId}`, { isPublished: isPublished }, config).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.success || false) {\n                const copiedCourseList = courseList.map(course => {\n                    if (course._id === courseId) {\n                        return {\n                            ...course,\n                            isPublished: responseData.isPublished\n                        };\n                    }\n\n                    return course;\n                });\n\n                setCourseList(copiedCourseList);\n            }\n        }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    // TODO: FIX/CHANGE LATER\n    const onCourseListUpdatedHandler = (newCourseData) => {\n        const copiedCourseList = [...courseList].map(course => {\n            if (course._id === newCourseData._id) {\n                course = {...newCourseData};\n            }\n\n            return course;\n        });\n\n        // console.log(copiedCourseList)\n        setCourseList(copiedCourseList);\n        setSelectedCourse(newCourseData);\n    }\n\n    const onUserEnrollmentSubmittedHandler = (submittedUsers) => {\n        axiosAdmin.put(`/course/${selectedCourse._id}/enroll-users`, { userList: submittedUsers }, config).then(response => {\n            let responseData = response.data;\n\n            if (responseData.areUsersEnrolled) {\n                const copiedCourseList = courseList.map(course => {\n                    if (course._id === selectedCourse._id) {\n                        return {\n                            ...responseData.newCourse\n                        };\n                    }\n\n                    return course\n                });\n\n                setCourseList(copiedCourseList);\n\n                history.push(props.match.url + '/course-management');\n            }\n        });\n    }\n\n    let routes = (\n\t\t<Switch>\n            <Route path={props.match.url + '/course-management/:id/user-enrollment'} render={() =>\n                <CourseEnrollment\n                    userList={userList}\n                    enrolledUsers={selectedCourse.enrolledUsers}\n                    onUserEnrollmentSubmitted={onUserEnrollmentSubmittedHandler}\n                />} />\n            <Route path={props.match.url + '/course-management/edit-course/:id'} render={() =>\n                <CreateCourse\n                    savedCourseData={courseToEdit}\n                    courseEdited={onCourseEditedHandler}\n                />} />\n            <Route path={props.match.url + '/course-management/create-course'} render={() =>\n                <CreateCourse courseCreated={onCourseCreatedHandler} />} />\n            <Route path={props.match.url + '/course-management/:id'} render={() =>\n                <Course\n                    token={props.token}\n                    courseData={selectedCourse}\n                    courseListUpdated={onCourseListUpdatedHandler}\n                    courseActivityAdded={onCourseListUpdatedHandler}\n                    courseActivityEdited={onCourseListUpdatedHandler}\n                />} />\n\t\t\t<Route path={props.match.url  + '/course-management/'} render={() => <AdminCourseList\n                courseList={courseList}\n                onCourseNameClicked={onCourseNameClickedHandler}\n                onCourseEdited={onCourseEditHandler}\n                onCourseDeleted={onCourseDeletedHandler}\n                onCoursePublished={onCoursePublishedHandler}\n                />} />\n\t\t</Switch>\n\t);\n\n    return (\n        <>\n            {routes}\n        </>\n    )\n}\n\nexport default CourseManagement;","import React from 'react';\n\nimport classes from './AdminUserCard.module.scss';\nimport Button from '../../../../UI/Button/Button';\n\n// TODO: ADD MORE FIELD AND CUSTOM DESIGN\nconst AdminUserCard = props => {\n    return (\n        <section className={classes.AdminUserCard}>\n            <div className={classes.AdminUserCard__Body}>\n                {props.email + ' - ' + props.status}\n            </div>\n\n            <div className={classes.AdminUserCard__Cta}>\n                <Button btnType='BtnSecondary' btnSize='BtnSmall' clicked={props.userEdit}>Edit</Button>\n                <Button btnType='BtnDanger' btnSize='BtnSmall' clicked={props.userDelete}>Delete</Button>\n            </div>\n        </section>\n    )\n}\n\nexport default AdminUserCard;","import React from 'react';\n\nimport classes from './AdminUserList.module.scss';\nimport Accordion from '../../../UI/Accordion/Accordion';\nimport AdminUserCard from './AdminUserCard/AdminUserCard';\n\n// TODO: ADD MORE FIELD AND CUSTOM DESIGN\nconst AdminUserList = props => {\n    return (\n        <div className={classes.AdminUserList}>\n            <header className={classes.AdminUserList__Header}>\n                <h1>User List</h1>\n            </header>\n\n            <section>\n                {(props.userList || []).map(user => {\n                    return (\n                        <Accordion \n                            key={user._id}\n                            label={[user.firstName, user.lastName].join(' ')}>\n                            <AdminUserCard\n                                email={user.email}\n                                status={user.status}\n                                userEdit={() => props.userEdited(user)}\n                                userDelete={() => props.userDeleted(user._id)}\n                            />\n                        </Accordion>\n                    )\n                })}\n            </section>\n        </div>\n    )\n}\n\nexport default AdminUserList;","import { useState, useEffect } from 'react';\n\n/*\n    A valid password should include the following:\n    - at least 8 characters, at most 16 characters long\n    - at least 1 uppercase character\n    - at least 1 numeric character\n    - at least 1 non-alpha numeric character like: `! @ # $ % ^ &`\n*/\n\nconst usePasswordValidation = password => {\n    const [validLength, setValidLength] = useState(false);\n    const [hasNumber, setHasNumber] = useState(false);\n    const [upperCase, setUpperCase] = useState(false);\n    const [specialChar, setSpecialChar] = useState(false);\n\n    useEffect(() => {\n        // Length validation\n        setValidLength(password.length >= 8 && password.length <= 16);\n\n        // Number validation\n        setHasNumber(/\\d/g.test(password)); \n\n        // Uppercase validation\n        setUpperCase(/[A-Z]/g.test(password));\n\n        // Special character validation\n        setSpecialChar(/[!@#$%^&*]/g.test(password));\n    }, [password]);\n\n    return [validLength, hasNumber, upperCase, specialChar];\n}\n\nexport default usePasswordValidation;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport usePasswordValidation from '../../../../hooks/usePasswordValidation';\nimport classes from './CreateUser.module.scss';\nimport formValidation from '../../../../utility/formValidation';\nimport Input from '../../../UI/Input/Input';\nimport Button from '../../../UI/Button/Button';\n\nconst CreateUser = React.memo(props => {\n    const params = useParams();\n    const [isEditMode, setIsEditMode] = useState(false);\n    const [userDataFormControls, setUserDataFormControls] = useState({\n        firstName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'First Name'\n            },\n            label: \"First Name\",\n            validation: {\n                required: true,\n                isEnglishOnly: true,\n                minLength: 3\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        lastName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Last Name'\n            },\n            label: \"Last Name\",\n            validation: {\n                required: true,\n                isEnglishOnly: true,\n                minLength: 3\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'E-mail'\n            },\n            label: \"E-mail\",\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password',\n                autoComplete: 'new-password'\n            },\n            label: \"Password\",\n            validation: {\n                required: true,\n                minLength: 8,\n                maxLength: 16,\n                containsNumeric: true,\n                containsSpecial: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        status: {\n            elementType: 'select',\n            elementConfig: {\n                options: [{\n                    value: 'user',\n                    displayValue: 'User'\n                }, {\n                    value: 'teacher',\n                    displayValue: 'Teacher'\n                }]\n            },\n            label: \"Status\",\n            validation: {\n                required: true\n            },\n            valid: true,\n            touched: false,\n            value: 'user'\n        }\n    });\n    const [formIsValid, setFormIsValid] = useState(false);\n    const [validLength, hasNumber, upperCase, specialChar] = usePasswordValidation(userDataFormControls.password.value);\n\n    const populateFormFields = useCallback(() => {\n        const userData = { ...props.savedUserData, password: ''};\n        const copiedFormControls = { ...userDataFormControls };\n        let copiedFormCtrl = {};\n\n        Object.keys(copiedFormControls).forEach(frmCtrl => {\n            copiedFormCtrl = { ...copiedFormControls[frmCtrl] };\n\n            copiedFormCtrl.value = userData[frmCtrl] || '';\n            copiedFormCtrl.touched = true;\n            copiedFormCtrl.valid = true;\n\n            copiedFormControls[frmCtrl] = {...copiedFormCtrl};\n        });\n\n        setUserDataFormControls(copiedFormControls);\n        setFormIsValid(true);\n        // eslint-disable-next-line\n    }, [props.savedUserData]);\n\n    const resetFormFields = useCallback(() => {\n        const copiedFormControls = { ...userDataFormControls };\n        let copiedFormCtrl = {};\n\n        Object.keys(copiedFormControls).forEach(frmCtrl => {\n            copiedFormCtrl = { ...copiedFormControls[frmCtrl] };\n\n            if (frmCtrl === 'status') {\n                copiedFormCtrl.value = 'user';\n                copiedFormCtrl.valid = true;\n            } else {\n                copiedFormCtrl.value = '';\n            }\n\n            copiedFormCtrl.touched = false;\n            copiedFormCtrl.valid = false;\n\n            copiedFormControls[frmCtrl] = {...copiedFormCtrl};\n        });\n\n        setUserDataFormControls(copiedFormControls);\n        setFormIsValid(false);\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        if (params.id && params.id !== '') {\n            setIsEditMode(true);\n\n            // Populate the form fields\n            populateFormFields();\n        } else {\n            // setIsEditMode(false);\n            if (isEditMode) {\n                setIsEditMode(false);\n\n                resetFormFields()\n            }\n            \n        }\n        // eslint-disable-next-line\n    }, [params, populateFormFields, resetFormFields]);\n\n    const inputChangedHandler = (event, formControl) => {\n        const copiedUserDataFormControls = { ...userDataFormControls };\n\n        const copiedFormControl = { ...copiedUserDataFormControls[formControl] };\n\n        copiedFormControl.value = event.target.value;\n\n        // Also check validity & mark it as touched\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\n        copiedFormControl.valid = isValid;\n        copiedFormControl.touched = true;\n\n        copiedUserDataFormControls[formControl] = copiedFormControl;\n\n        // Set the validiity of the form\n        let formValid = true;\n        Object.keys(copiedUserDataFormControls).forEach(formCtrl => {\n            formValid = formValid && copiedUserDataFormControls[formCtrl].valid;\n        });\n\n        setFormIsValid(formValid);\n        setUserDataFormControls(copiedUserDataFormControls);\n    }\n\n    const onUserCreatedHandler = () => {\n        let userData = {};\n\n        if (!isEditMode) {\n            userData = {\n                firstName: (userDataFormControls.firstName || {}).value || '',\n                lastName: (userDataFormControls.lastName || {}).value || '',\n                email: (userDataFormControls.email || {}).value || '',\n                password: (userDataFormControls.password || {}).value || '',\n                status: (userDataFormControls.status || {}).value || '',\n            };\n\n            props.userCreated(userData);\n        } else {\n            userData = {\n                ...props.savedUserData,\n                firstName: (userDataFormControls.firstName || {}).value || '',\n                lastName: (userDataFormControls.lastName || {}).value || '',\n                email: (userDataFormControls.email || {}).value || '',\n                status: (userDataFormControls.status || {}).value || '',\n            };\n\n            let newPass = (userDataFormControls.password || {}).value || '';\n            if (newPass !== '') {\n                userData.password = newPass;\n            }\n\n            props.userEdited(userData);\n        }\n    };\n\n    let formContent = Object.keys(userDataFormControls).map(formControl => {\n        return <Input\n            key={formControl}\n            elementType={userDataFormControls[formControl].elementType}\n            elementConfig={userDataFormControls[formControl].elementConfig}\n            label={userDataFormControls[formControl].label}\n            value={userDataFormControls[formControl].value}\n            touched={userDataFormControls[formControl].touched}\n            isValid={userDataFormControls[formControl].valid}\n            changed={(event) => inputChangedHandler(event, formControl)}\n            isPassword={formControl === 'password'}\n            passwordValidationMap={{validLength, hasNumber, upperCase, specialChar}}\n        />;\n    });\n\n    return (\n        <section className={classes.CreateUser}>\n            <header className={classes.CreateUser__Header}>\n                <h1>{!isEditMode ? 'Create a user' : 'Edit the user'}</h1>\n            </header>\n\n            <div className={classes.CreateUser__Form}>\n                {formContent}\n            </div>\n\n            <Button\n                btnType='BtnSecondary'\n                disabled={!formIsValid}\n                clicked={onUserCreatedHandler}>{!isEditMode ? 'Create' : 'Edit'}</Button>\n        </section>\n    );\n});\n\nexport default CreateUser;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport axiosAdmin from '../../../axiosUtility/axios-admin';\nimport AdminUserList from './AdminUserList/AdminUserList';\nimport CreateUser from './CreateUser/CreateUser';\n\nconst UserManagement = (props) => {\n    const [userList, setUserList] = useState([]);\n    const [userToEdit, setUserToEdit] = useState({});\n    const history = useHistory();\n\n    useEffect(() => {\n        axiosAdmin.get('/user', {\n            headers: {\n                'Authorization': 'Bearer ' + props.token\n            }\n        }).then(response => {\n            setUserList(response.data.userList);\n        });\n    }, [props.token]);\n\n    const onUserCreatedHandler = (userData) => {\n        axiosAdmin.post(`/user`, userData, {\n            headers: {\n                'Authorization': 'Bearer ' + props.token\n            }\n        }).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isCreated) {\n                const newUserList = userList.concat(responseData.user);\n\n                setUserList(newUserList);\n\n                history.push(props.match.url + '/user-management');\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    const onUserEditedHandler = (editedUserData) => {\n        axiosAdmin.put(`/user/${editedUserData._id}`, editedUserData, {\n            headers: {\n                'Authorization': 'Bearer ' + props.token\n            }\n        }).then(response => {\n            if (response.data.isEdited) {\n                const copiedUserList = userList.map(user => {\n                    if (user._id === editedUserData._id) {\n                        return {\n                            ...response.data.newUserData\n                        };\n                    }\n\n                    return user\n                });\n\n                setUserList(copiedUserList);\n\n                history.push(props.match.url + '/user-management');\n            }\n        });\n    }\n\n    const onUserDeletedHandler = (userId) => {\n        axiosAdmin.delete(`/user/${userId}`, {\n            headers: {\n                'Authorization': 'Bearer ' + props.token\n            }\n        }).then(response => {\n            const responseData = response.data || {};\n\n            if (responseData.isDeleted || false) {\n                const copiedUserList = userList.filter(user => user._id !== responseData.removedUserId);\n\n                setUserList(copiedUserList);\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    const onUserEdit = (userToEdit) => {\n        history.push(props.match.url + `/user-management/edit-user/${userToEdit._id}`)\n\n        setUserToEdit(userToEdit);\n    }\n\n    let routes = (\n\t\t<Switch>\n            <Route path={props.match.url + '/user-management/edit-user/:id'} render={() =>\n                <CreateUser\n                    savedUserData={userToEdit}\n                    userEdited={onUserEditedHandler}\n                />} />\n            <Route path={props.match.url + '/user-management/create-user'} render={() => <CreateUser \n                userCreated={onUserCreatedHandler}/>} />\n\t\t\t<Route path={props.match.url} render={() => <AdminUserList\n                userList={userList}\n                userEdited={onUserEdit}\n                userDeleted={onUserDeletedHandler} />} />\n\t\t</Switch>\n\t);\n\n    return (\n        routes\n    );\n}\n\nexport default UserManagement;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\n\nimport AdminHome from './AdminHome/AdminHome';\nimport AdminNavigation from './AdminNavigation/AdminNavigation';\nimport CourseManagement from './CourseManagement/CourseManagement';\nimport UserManagement from './UserManagement/UserManagement';\nimport classes from './Administration.module.scss';\n\nconst Administration = (props) => {\n    let routes = (\n\t\t<Switch>\n\t\t\t<Route path={props.match.url + '/user-management'}  render={() => <UserManagement {...props} />} />\n\t\t\t<Route path={props.match.url + '/course-management'} render={() => <CourseManagement {...props} />} />\n\t\t\t<Route path={props.match.url} render={() => <AdminHome />} />\n\t\t\t{/* <Redirect to='/' /> */}\n\t\t</Switch>\n\t);\n\n    return (\n        <section className={classes.Administration}>\n            <AdminNavigation { ...props } />\n\n            {routes}\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    };\n};\n\nexport default connect(mapStateToProps, null)(Administration);","import axios from 'axios';\nimport { BACKEND_ORIGIN } from '../utility/apiUrl';\n\nconst instance = axios.create({\n    baseURL: BACKEND_ORIGIN + '/api/auth'\n});\n\nexport default instance;","import * as actionTypes from './actionTypes';\nimport axiosAuth from '../../axiosUtility/axios-auth';\n// import axiosMessage from '../../axiosUtility/axios-message';\n\nexport const signupStart = () => {\n    return {\n        type: actionTypes.SIGNUP_START\n    };\n};\n\nexport const signupSuccess = () => {\n    return {\n        type: actionTypes.SIGNUP_SUCCESS,\n        path: '/auth/signup-success'\n    };\n};\n\nexport const signupFail = (error) => {\n    return {\n        type: actionTypes.SIGNUP_FAIL,\n        error: error\n    };\n};\n\nexport const signupRedirect = () => {\n    return {\n        type: actionTypes.SIGNUP_REDIRECT\n    };\n};\n\nexport const signup = (userData) => {\n    return dispatch => {\n        dispatch(signupStart());\n\n        axiosAuth.post('/signup', userData).then(response => {\n            dispatch(signupSuccess());\n        }).catch(error => {\n            dispatch(signupFail(error.response.data.message));\n        });\n    };\n};\n\nexport const authTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    }\n};\n\nexport const authCheckState = () => {\n    return async dispatch => {\n        const token = localStorage.getItem('token');\n\n        if(token === null) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationTime'));\n            if(expirationDate > new Date()){\n                const userId = localStorage.getItem('userId');\n\n                const response = await axiosAuth.get(`/${userId}`);\n                const userData = response.data.user;\n                const status = userData.status;\n                const userImage = userData.avatarUrl;\n\n                dispatch(loginSuccess(token, userId, userImage, status, userData.messages));\n                dispatch(authTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            } else {\n                dispatch(logout());\n            }\n        }\n    }\n};\n\nexport const loginStart = () => {\n    return {\n        type: actionTypes.LOGIN_START\n    };\n}\n\nexport const loginSuccess = (token, userId, userImage, status, messages) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        token: token,\n        userId: userId,\n        userImage: userImage,\n        path: '/',\n        status: status,\n        userMessages: messages\n    };\n};\n\nexport const loginFail = (error) => {\n    return {\n        type: actionTypes.LOGIN_FAIL,\n        error: error\n    };\n};\n\nexport const login = (userData) => {\n    return dispatch => {\n        dispatch(loginStart());\n\n        axiosAuth.post('/login', userData).then(response => {\n            const responseData = response.data.userData;\n            const expirationTime = new Date(new Date().getTime() + responseData.expiresIn * 1000);\n\n            localStorage.setItem(\"userId\", responseData.userId);\n            localStorage.setItem(\"token\", responseData.token);\n            localStorage.setItem(\"expirationTime\", expirationTime);\n\n            dispatch(loginSuccess(responseData.token, responseData.userId, responseData.userImage, responseData.status, responseData.messages));\n            dispatch(authTimeout(+responseData.expiresIn));\n        }).catch(error => {\n            dispatch(loginFail(error.response.data.message));\n        })\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    return {\n        type: actionTypes.LOGOUT\n    }\n}\n\nexport const passwordResetRequestStart = () => {\n    return {\n        type: actionTypes.PASSWORD_RESET_REQUEST_START\n    };\n};\n\nexport const passwordResetRequestSuccess = () => {\n    return {\n        type: actionTypes.PASSWORD_RESET_REQUEST_SUCCESS,\n        path: '/'\n    };\n};\n\nexport const passwordResetRequestFail = (error) => {\n    return {\n        type: actionTypes.PASSWORD_RESET_REQUEST_FAIL,\n        error: error,\n        path: '/auth/reset-password'\n    };\n};\n\nexport const passwordResetRequest = (email) => {\n    return dispatch => {\n        dispatch(passwordResetRequestStart());\n\n        axiosAuth.post('/password-reset-request', { email }).then(result => {\n            dispatch(passwordResetRequestSuccess());\n        }).catch(error => {\n            dispatch(passwordResetRequestFail(error.response.data.message));\n        });\n    };\n};\n\n\n// TODO\nexport const resetPasswordStart = () => {\n    return {\n        type: actionTypes.PASSWORD_RESET_START\n    };\n};\n\nexport const resetPasswordSuccess = () => {\n    return {\n        type: actionTypes.PASSWORD_RESET_SUCCESS,\n        path: '/'\n    };\n}\n\nexport const resetPasswordFail = (error) => {\n    return {\n        type: actionTypes.PASSWORD_RESET_FAIL,\n        error: error,\n        path: '/auth/reset-password'\n    };\n}\n\nexport const resetPassword = (formData) => {\n    return dispatch => {\n        dispatch(resetPasswordStart());\n\n        const data = {\n            password: formData.password,\n            token: formData.token\n        };\n\n        axiosAuth.put('/password-reset', data).then(response => {\n            dispatch(resetPasswordSuccess());\n        }).catch(error => {\n            dispatch(resetPasswordFail(error.response.data.message));\n        });\n    }\n}\n\nexport const changeAvatar = (newAvatarUrl) => {\n    return {\n        type: actionTypes.AVATAR_CHANGE,\n        newUrl: newAvatarUrl\n    };\n}\n\n// USER MESSAGES\n// export const getMessageSuccess = (messageList) => {\n//     return {\n//         type: actionTypes.MESSAGE_FETCH_SUCCESS,\n//         messages: messageList\n//     };\n// }\n\n// export const getMessageFail = (error) => {\n//     return {\n//         type: actionTypes.MESSAGE_FETCH_FAIL,\n//         error: error\n//     };\n// }\n\n// export const getMessages = (userId, userToken) => {\n//     return dispatch => {\n//         let config = {\n//             headers: {\n//                 Authorization: 'Bearer ' + userToken\n//             }\n//         };\n\n//         axiosMessage.get('/' + userId, config).then(response => {\n//             dispatch(getMessageSuccess(response.data.messageList));\n//         }).catch(error => {\n//             dispatch(getMessageFail(error.response.data.message));\n//         });\n//     }\n// }\n\nexport const updateMessages = (newMessages) => {\n    return {\n        type: actionTypes.UPDATE_MESSAGES,\n        messages: newMessages\n    }\n}","export const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const SIGNUP_REDIRECT = 'SIGNUP_REDIRECT';\n\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const PASSWORD_RESET_REQUEST_START = 'PASSWORD_RESET_REQUEST_START';\nexport const PASSWORD_RESET_REQUEST_SUCCESS = 'PASSWORD_RESET_REQUEST_SUCCESS';\nexport const PASSWORD_RESET_REQUEST_FAIL = 'PASSWORD_RESET_REQUEST_FAIL';\n\nexport const PASSWORD_RESET_START = 'PASSWORD_RESET_START';\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n\nexport const LOGOUT = 'LOGOUT';\n\nexport const AVATAR_CHANGE = 'AVATAR_CHANGE';\n\n// export const MESSAGE_FETCH_SUCCESS = 'MESSAGE_FETCH_SUCCESS';\n// export const MESSAGE_FETCH_FAIL = 'MESSAGE_FETCH_FAIL';\nexport const UPDATE_MESSAGES = 'UPDATE_MESSAGES';","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport classes from './Backdrop.module.scss';\n\nconst Backdrop = (props) => \n    ReactDOM.createPortal(\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}/> : null,\n        document.getElementById('backdrop-root')\n    );\n\nexport default Backdrop;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport classes from './FeedbackDialogue.module.scss';\nimport Backdrop from '../UI/Backdrop/Backdrop';\n\nconst FeedbackDialogue = (props) => {\n    let classList = [classes.FeedbackDialogue__Button];\n\n    if (props.isError) {\n        classList = [classes.FeedbackDialogue__Button, classes.FeedbackDialogue__Button__Error];\n    } else {\n        classList = [classes.FeedbackDialogue__Button, classes.FeedbackDialogue__Button__Success];\n    }\n\n    return (\n        ReactDOM.createPortal(\n            props.show ? (\n                <div className={classes.FeedbackDialogueContainer}>\n                    <Backdrop show={props.show} />\n                    <div className={classes.FeedbackDialogue}>\n                        <p>{props.feedbackMessage || 'Something went wrong'}</p>\n                        <div>\n                            <button\n                                className={classList.join(' ')}\n                                onClick={props.closed}>Close</button>\n                        </div>\n                    </div>\n                </div>) : null,\n            document.getElementById('error-root')\n        )\n    );\n}  \n\nexport default FeedbackDialogue;","const changeInputObjectValue = (actualObject, keyName, newData) => {\n    const copiedObject = { ...actualObject };\n    const copiedObjectElement = { \n        ...copiedObject[keyName],\n        ...newData\n    };\n\n    copiedObject[keyName] = copiedObjectElement;\n\n    return { ...copiedObject };\n}\n\nexport default changeInputObjectValue;","import React, { useState } from 'react';\n\nimport classes from './PasswordChange.module.scss';\nimport changeInputObjectValue from '../../../utility/changeInputObjectValue';\nimport usePasswordValidation from '../../../hooks/usePasswordValidation';\nimport formValidation from '../../../utility/formValidation';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\n\nconst PasswordChange = props => {\n    const [passwordChangeFormControls, setPasswordChangeFormControls] = useState({\n        oldPassword: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Old Password',\n                autoComplete: 'new-password'\n            },\n            label: \"Old Password\",\n            validation: {\n                required: true,\n                minLength: 8,\n                maxLength: 16,\n                containsNumeric: true,\n                containsSpecial: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        newPassword: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'New Password',\n                autoComplete: 'new-password'\n            },\n            label: \"New Password\",\n            validation: {\n                required: true,\n                minLength: 8,\n                maxLength: 16,\n                containsNumeric: true,\n                containsSpecial: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        newPasswordAgain: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'New Password Again',\n                autoComplete: 'new-password'\n            },\n            label: \"New Password Again\",\n            validation: {\n                required: true,\n                minLength: 8,\n                maxLength: 16,\n                containsNumeric: true,\n                containsSpecial: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        }\n    });\n    const [validLength, hasNumber, upperCase, specialChar] = usePasswordValidation(passwordChangeFormControls.newPassword.value);\n    const [_validLength, _hasNumber, _upperCase, _specialChar] = usePasswordValidation(passwordChangeFormControls.newPasswordAgain.value);\n    const [formIsValid, setFormIsValid] = useState(false);\n    const [passwordsMatch, setPasswordsMatch] = useState(false);\n\n    const inputChangedHandler = (event, formControl) => {\n        const copiedPasswordChangeFormControls = { ...passwordChangeFormControls };\n        const copiedFormControl = { ...copiedPasswordChangeFormControls[formControl] };\n\n        copiedFormControl.value = event.target.value;\n\n        // Also check validity & mark it as touched\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\n        \n        copiedFormControl.valid = isValid;\n        copiedFormControl.touched = true;\n\n        copiedPasswordChangeFormControls[formControl] = copiedFormControl;\n\n        // Set the validiity of the form\n        let formValid = true;\n        Object.keys(copiedPasswordChangeFormControls).forEach(formCtrl => {\n            formValid = formValid && copiedPasswordChangeFormControls[formCtrl].valid;\n        });\n\n        setFormIsValid(formValid);\n        setPasswordChangeFormControls(copiedPasswordChangeFormControls);\n\n        // Check if the passwords match\n        setPasswordsMatch(copiedPasswordChangeFormControls.newPassword.value ===\n            copiedPasswordChangeFormControls.newPasswordAgain.value)\n    }\n\n    const onPasswordChanged = () => {\n        let data = {};\n\n        Object.keys(passwordChangeFormControls).forEach(passwordData => {\n            data[passwordData] = passwordChangeFormControls[passwordData].value;\n        });\n\n        props.passwordChange(data);\n\n        // Reset the form fields.\n        let copiedFormControls = {...passwordChangeFormControls};\n\n        Object.keys(copiedFormControls).forEach(key => {\n            copiedFormControls = changeInputObjectValue(copiedFormControls, key, {\n                value: '',\n                touched: false,\n                valid: false\n            });\n        });\n\n        setPasswordChangeFormControls(copiedFormControls);\n    }\n\n    let formContent = Object.keys(passwordChangeFormControls).map(formControl => {\n        return <Input\n            key={formControl}\n            elementType={passwordChangeFormControls[formControl].elementType}\n            elementConfig={passwordChangeFormControls[formControl].elementConfig}\n            label={passwordChangeFormControls[formControl].label}\n            value={passwordChangeFormControls[formControl].value}\n            touched={passwordChangeFormControls[formControl].touched}\n            isValid={passwordChangeFormControls[formControl].valid}\n            changed={(event) => inputChangedHandler(event, formControl)}\n            isPassword={formControl === 'newPassword' || formControl === 'newPasswordAgain'}\n            passwordValidationMap={formControl === 'newPassword' ?\n                {validLength, hasNumber, upperCase, specialChar} :\n                {validLength: _validLength, hasNumber: _hasNumber, upperCase: _upperCase, specialChar: _specialChar}}\n        />;\n    });\n\n    let showMatchWarning = !passwordsMatch &&\n        passwordChangeFormControls.newPassword.touched &&\n        passwordChangeFormControls.newPasswordAgain.touched;\n\n    return (\n        <div className={classes.PasswordChange}>\n            <header className={classes.PasswordChange__Header}>\n                <h2>Change your password</h2>\n            </header>\n\n            <div className={classes.PasswordChange__Form}>\n                {formContent}\n\n                {showMatchWarning ? <div className={classes.PasswordChange__Form__Warning}>\n                    New passwords should match!\n                </div> : null}\n            </div>\n\n            <div className={classes.PasswordChange__Cta}>\n                <Button\n                    disabled={!(formIsValid && passwordsMatch)}\n                    clicked={onPasswordChanged}\n                >Save</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default PasswordChange;","import React, { useState, useEffect, useCallback } from 'react';\n\nimport classes from './AccountDataChange.module.scss';\nimport changeInputObjectValue from '../../../utility/changeInputObjectValue';\nimport formValidation from '../../../utility/formValidation';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\n\nconst AccountDataChange = props => {\n    const [accountDataFormControls, setAccountDataFormControls] = useState({\n        firstName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'First Name'\n            },\n            label: 'First Name',\n            validation: {\n                required: true,\n                isEnglishOnly: true,\n                minLength: 3\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        lastName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Last Name'\n            },\n            label: 'Last Name',\n            validation: {\n                required: true,\n                isEnglishOnly: true,\n                minLength: 3\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'E-mail'\n            },\n            label: 'E-mail',\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        dateOfBirth: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'date',\n                placeholder: 'Date of Birth'\n            },\n            label: 'Date of Birth',\n            validation: {},\n            valid: true,\n            touched: false,\n            value: ''\n        },\n        gender: {\n            elementType: 'select',\n            elementConfig: {\n                options: [{\n                    value: 'male',\n                    displayValue: 'Male'\n                }, {\n                    value: 'female',\n                    displayValue: 'Female'\n                }, {\n                    value: 'I don\\'t want to disclose',\n                    displayValue: 'I don\\'t want to disclose'\n                }]\n            },\n            label: \"Gender\",\n            validation: {},\n            valid: true,\n            touched: false,\n            value: 'male'\n        },\n    });\n    const [formValid, setFormValid] = useState(false);\n\n    const populateFormFields = useCallback(() => {\n        let savedUserData = props.userData || {};\n\n        let copiedFormControls = {...accountDataFormControls};\n\n        Object.keys(savedUserData).filter(dataKey => Object.keys(accountDataFormControls).indexOf(dataKey) !== -1).forEach(key => {\n            copiedFormControls = changeInputObjectValue(copiedFormControls, key, {\n                value: savedUserData[key],\n                touched: true,\n                valid: true\n            });\n        });\n\n        setAccountDataFormControls({...copiedFormControls});\n        setFormValid(true);\n        // eslint-disable-next-line\n    }, [props.userData]);\n\n    useEffect(() => {\n        populateFormFields();\n    }, [populateFormFields]);\n\n    const inputChangedHandler = (event, formControl) => {\n        // console.log(`The input: ${formControl} and the value is: ${event.target.value}`);\n\n        const copiedAccountDataFormControls = { ...accountDataFormControls };\n        const copiedFormControl = { ...copiedAccountDataFormControls[formControl] };\n\n        copiedFormControl.value = event.target.value;\n\n        // Also check validity & mark it as touched\n        let isValid = formControl !== 'dateOfBirth' ? formValidation(event.target.value, copiedFormControl.validation) : true;\n        \n        copiedFormControl.valid = isValid;\n        copiedFormControl.touched = true;\n\n        copiedAccountDataFormControls[formControl] = copiedFormControl;\n\n        // Set the validiity of the form\n        let formValid = true;\n        Object.keys(copiedAccountDataFormControls).forEach(formCtrl => {\n            formValid = formValid && copiedAccountDataFormControls[formCtrl].valid;\n        });\n\n        setFormValid(formValid);\n        setAccountDataFormControls(copiedAccountDataFormControls);\n    }\n\n    const onAccountDataChanged = () => {\n        let data = {};\n\n        Object.keys(accountDataFormControls).forEach(accountData => {\n            data[accountData] = accountDataFormControls[accountData].value;\n        });\n\n        props.accountDataChange(data);\n    }\n\n    let formContent = Object.keys(accountDataFormControls).map(formControl => {\n        return <Input\n            key={formControl}\n            elementType={accountDataFormControls[formControl].elementType}\n            elementConfig={accountDataFormControls[formControl].elementConfig}\n            label={accountDataFormControls[formControl].label}\n            value={accountDataFormControls[formControl].value}\n            touched={accountDataFormControls[formControl].touched}\n            isValid={accountDataFormControls[formControl].valid}\n            changed={(event) => inputChangedHandler(event, formControl)}\n            isPassword={false}\n        />;\n    });\n\n    return (\n        <div className={classes.AccountDataChange}>\n            <header className={classes.AccountDataChange__Header}>\n                <h2>Edit account data</h2>\n            </header>\n\n            <div className={classes.AccountDataChange__Form}>\n                {formContent}\n\n                <div className={classes.AccountDataChange__Form__Warning}>\n                    Error Message\n                </div>\n            </div>\n\n            <div className={classes.AccountDataChange__Cta}>\n                <Button\n                    disabled={!formValid}\n                    clicked={onAccountDataChanged}>\n                    Save</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default AccountDataChange;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nimport classes from './Account.module.scss';\nimport axiosAuth from '../../axiosUtility/axios-auth';\nimport FeedbackDialogue from '../FeedbackDialogue/FeedbackDialogue';\nimport PasswordChange from './PasswordChange/PasswordChange';\nimport AccountDataChange from './AccountDataChange/AccountDataChange';\nimport File from '../UI/File/File';\nimport { BACKEND_ORIGIN } from '../../utility/apiUrl';\n\nconst MIME_TYPE_MAP = {\n    \"image/png\": \"png\",\n    \"image/jpeg\": \"jpeg\",\n    \"image/jpg\": \"jpg\"\n};\n\nconst Account = props => {\n    const [userData, setUserData] = useState({});\n    const [imageFile, setImageFile] = useState(undefined);\n    const [feedbackDialogue, setFeedbackDialogue] = useState({\n        isError: false,\n        message: '',\n        show: false\n    });\n\n    useEffect(() => {\n        axiosAuth.get(`${props.userId}`).then(response => {\n            setUserData(response.data.user)\n        }).catch(err => {\n            console.log(err);\n        });\n    }, [props.userId]);\n\n    const checkMimeType = (file) => {\n        return MIME_TYPE_MAP[file];\n    }\n\n    const fileSelectHandler = (file) => {\n        if(!checkMimeType(file.type)) {\n            return;\n        }\n\n        setImageFile(file);\n    }\n\n    const onPasswordChangedHandler = (data) => {\n        axiosAuth.put('/change-passwor', data, {\n            headers: {\n                'Authorization': 'Bearer ' + props.token\n            }\n        }).then(response => {\n            setFeedbackDialogue(() => {\n                return {\n                    isError: false,\n                    message: response.data.message,\n                    show: true\n                };\n            });\n        }).catch(error => {\n            setFeedbackDialogue(() => {\n                return {\n                    isError: true,\n                    message: error.response.data.message || 'Something went wrong!',\n                    show: true\n                };\n            });\n        });\n    }\n\n    const onAccountDataChangedHandler = (data) => {\n        const formData = new FormData();\n\n        Object.keys(data).forEach(key => {\n            formData.append(key, data[key]);\n        });\n        \n        if (typeof imageFile !== 'undefined') {\n            formData.append('file', imageFile);\n        } else {\n            formData.append('avatarUrl', userData.avatarUrl);\n        }\n\n        axiosAuth.put('/edit-account', formData, {\n            headers: {\n                'Authorization': 'Bearer ' + props.token\n            }\n        }).then(response => {\n            let newUserData = response.data.newUserData;\n\n            setUserData(newUserData);\n\n            props.changeAvatar(newUserData.avatarUrl);\n\n            setFeedbackDialogue(() => {\n                return {\n                    isError: false,\n                    message: response.data.message || 'Successful!',\n                    show: true\n                };\n            });\n        });\n    }\n\n    const onCloseFeedBackDialogueHandler = () => {\n        setFeedbackDialogue(() => {\n            return {\n                isError: false,\n                message: '',\n                show: false\n            };\n        });\n    }\n\n    let style = {};\n\n    if (imageFile) {\n        style['backgroundImage'] = `url(${URL.createObjectURL(imageFile)})`;\n    } else if (userData.avatarUrl !== '') {\n        let imageUrl = userData.avatarUrl || '';\n        \n        if (imageUrl !== '')\n            style['backgroundImage'] = `url(${BACKEND_ORIGIN + '/' + imageUrl.replace(/\\\\/g, '/')})`;\n    }\n\n    return (\n        <>\n            <FeedbackDialogue\n                show={feedbackDialogue.show}\n                feedbackMessage={feedbackDialogue.message}\n                closed={onCloseFeedBackDialogueHandler}\n                isError={feedbackDialogue.isError}\n            />\n\n            <section className={classes.Account}>\n                <header className={classes.Account__Header}>\n                    <h2>My Account</h2>\n                </header>\n\n                <div className={classes.Account__Content}>\n                    <div className={classes.Account__Content__ImageContainer}>\n                        <figure>\n                            <div className={classes.Account__Content__ImageContainer__Image} style={style}></div>\n                        </figure>\n\n                        <File selectedFile={fileSelectHandler} />\n                    </div>\n\n                    <div className={classes.Account__Content__FormContainer}>\n                        <AccountDataChange\n                            userData={userData}\n                            accountDataChange={onAccountDataChangedHandler} />\n\n                        <PasswordChange passwordChange={onPasswordChangedHandler} />\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.userId,\n        token: state.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeAvatar: (newImgUrl) => dispatch(actions.changeAvatar(newImgUrl))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);","import React from 'react';\r\n\r\nimport { BACKEND_ORIGIN } from '../../../../utility/apiUrl';\r\nimport classes from './UserItem.module.scss';\r\n\r\nconst UserItem = props => {\r\n    const userData = props.userData;\r\n    const lastMessageData = props.messageData || {};\r\n\r\n    let pictureStyle = {};\r\n\r\n    let userImage = userData.avatarUrl;\r\n\r\n    if (userImage && userImage !== '') {\r\n        pictureStyle['backgroundImage'] = `url(${BACKEND_ORIGIN + '/' + userImage.replace(/\\\\/g, '/')})`;\r\n        \r\n    }\r\n\r\n    let message = lastMessageData.message || '-';\r\n    let classList = [classes.UserItem];\r\n\r\n    if (props.isSelected) {\r\n        classList = [classes.UserItem, classes.UserItem__Selected];\r\n    }\r\n\r\n    return (\r\n        <div className={classList.join(' ')} onClick={props.userSelected}>\r\n            <figure className={classes.UserItem__PictureContainer}>\r\n                <div style={pictureStyle}></div>\r\n            </figure>\r\n\r\n            <div className={classes.UserItem__Info}>\r\n                <div>{userData.username}</div>\r\n                <div>{message.length > 17 ? message.slice(0, 17) + '...' : message}</div>\r\n            </div>\r\n\r\n            <div className={classes.UserItem__Time}>\r\n                {lastMessageData.time ? (new Date(lastMessageData.time)).toLocaleTimeString().split(':').slice(0, 2).join(':') : null}\r\n            </div>\r\n\r\n            {props.unreadMessageCount > 0 ? <span className={classes.UserItem__UnreadCount}>{props.unreadMessageCount}</span> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserItem;","import React from 'react'\r\n\r\nimport classes from './Sidebar.module.scss';\r\nimport UserItem from './UserItem/UserItem';\r\n\r\nconst Sidebar = React.memo(props => {\r\n    let lastMessageTimes = {};\r\n    let userToUnreadMessagesMap = {};\r\n\r\n    Object.keys(props.messages).forEach(userId => {\r\n        let lastItem = (props.messages[userId] || []).slice(-1)[0] || {};\r\n\r\n        userToUnreadMessagesMap[userId] = (props.messages[userId] || [])\r\n            .filter(message => !message.isRead && message.receiver._id === props.currentUserId).length;\r\n        \r\n        lastMessageTimes[userId] = lastItem.time || 0;\r\n    });\r\n\r\n    let userList = props.userList.slice().sort((a, b) => {\r\n        return lastMessageTimes[a._id] < lastMessageTimes[b._id];\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Sidebar}>\r\n            {userList.map(user => {\r\n                let lastMessage = ((props.messages || {})[user._id] || []).slice(-1)[0] || {};\r\n\r\n                return <UserItem\r\n                    key={user._id}\r\n                    userData={{ id: user._id, username: user.firstName + ' ' + user.lastName, avatarUrl: user.avatarUrl }}\r\n                    userSelected={() => props.onUserSelected(user._id)}\r\n                    messageData={{\r\n                        message: lastMessage.message || '',\r\n                        time: lastMessage.time\r\n                    }}\r\n                    unreadMessageCount={userToUnreadMessagesMap[user._id] || 0}\r\n                    isSelected={props.selectedUserId === user._id}\r\n                />\r\n            })}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Sidebar;","import { useState, useEffect, useRef } from 'react';\r\n\r\nconst useVisibility = (offset, containerRef) => {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const currentElement = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!currentElement.current) {\r\n            setIsVisible(false);\r\n            return;\r\n        }\r\n\r\n        const elementRect = currentElement.current.getBoundingClientRect();\r\n        const containerRect = containerRef.current.getBoundingClientRect();\r\n\r\n        setIsVisible(elementRect.top > containerRect.top - offset && elementRect.bottom < containerRect.bottom + offset);\r\n    }, [offset, containerRef]);\r\n\r\n    const onScroll = () => {\r\n        if (!currentElement.current) {\r\n            setIsVisible(false);\r\n            return;\r\n        }\r\n\r\n        const elementRect = currentElement.current.getBoundingClientRect();\r\n        const containerRect = containerRef.current.getBoundingClientRect();\r\n\r\n        setIsVisible(elementRect.top > containerRect.top - offset && elementRect.bottom < containerRect.bottom + offset);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('scroll', onScroll, true);\r\n\r\n        return () => {\r\n            document.removeEventListener('scroll', onScroll, true)\r\n        }\r\n    });\r\n\r\n    return [isVisible, currentElement];\r\n}\r\n\r\nexport default useVisibility;","import { useState, useEffect } from 'react';\r\n\r\nconst useCurrentTab = initValue => {\r\n    const [isCurrentTab, setIsCurrentTab] = useState(initValue);\r\n\r\n    const tabStateChange = () => {\r\n        setIsCurrentTab(!document.hidden);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('visibilitychange', tabStateChange);\r\n\r\n        return () => {\r\n            document.removeEventListener('visibilitychange', tabStateChange);\r\n        }\r\n    });\r\n\r\n    return isCurrentTab;\r\n}\r\n\r\nexport default useCurrentTab;","import React, { useEffect } from 'react';\r\n\r\nimport classes from './ChatMessage.module.scss';\r\nimport { BACKEND_ORIGIN } from '../../../../utility/apiUrl';\r\nimport useVisibility from '../../../../hooks/useVisibility';\r\nimport useCurrentTab from '../../../../hooks/useCurrentTab';\r\n\r\nconst ChatMessage = props => {\r\n    const [isVisible, elementRef] = useVisibility(20, props.windowRef);\r\n    const isCurrentTab = useCurrentTab(!document.hidden);\r\n\r\n    const messageData = props.messageData;\r\n\r\n    let senderAvatar = messageData.sender.avatarUrl;\r\n    let pictureStyle = {};\r\n\r\n    useEffect(() => {\r\n        if (isCurrentTab && isVisible) {\r\n            props.messageIsRead(messageData);\r\n        }\r\n    }, [isVisible, isCurrentTab, messageData, props]);\r\n\r\n    const getPostCreateTimeDifference = (time) => {\r\n        let now = (new Date()).getTime();\r\n        let difference = parseInt((now - time) / 3600000 * 60);\r\n        let timeString = '';\r\n        \r\n        if(difference >= 60 && difference < 1440) {\r\n            timeString += parseInt(difference / 60) + 'h';\r\n        } else if(difference >= 1440) {\r\n            timeString += parseInt(difference / 1440) + 'd';\r\n        } else if(difference <= 0) {\r\n            timeString = '<1m';\r\n        } else {\r\n            timeString = difference + 'm';\r\n        }\r\n\r\n        return timeString;\r\n    }\r\n\r\n    if (senderAvatar && senderAvatar !== '') {\r\n        pictureStyle['backgroundImage'] = `url(${BACKEND_ORIGIN + '/' + senderAvatar.replace(/\\\\/g, '/')})`;\r\n    }\r\n\r\n    let isFlipped = props.currentUserId === messageData.sender._id || false;\r\n\r\n    return (\r\n        <div className={classes.ChatMessage} style={isFlipped ? { 'transform': 'matrix(-1, 0, 0, 1, 0, 0)' } : {}} ref={elementRef}>\r\n            <div className={classes.ChatMessage__Body}>\r\n                <figure className={classes.ChatMessage__Body__UserPictureContainer}>\r\n                    <div style={pictureStyle}></div>\r\n                </figure>\r\n\r\n                <div className={classes.ChatMessage__Body__Message} style={isFlipped ? { 'transform': 'matrix(-1, 0, 0, 1, 0, 0)' } : {}}>\r\n                    {messageData.message}\r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                className={classes.ChatMessage__Message__Time}\r\n                style={isFlipped ? { 'transform': 'matrix(-1, 0, 0, 1, 0, 0)', 'textAlign':' right'} : {}}\r\n                >\r\n                {getPostCreateTimeDifference(messageData.time)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatMessage;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport classes from './ChatWindow.module.scss';\r\nimport ChatMessage from './ChatMessage/ChatMessage';\r\n\r\nconst ChatWindow = props => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    let chatWindowRef = useRef(null);\r\n    let chatWindowTargetRef = useRef(null);\r\n\r\n    const scrollToBottom = () => {\r\n        // chatWindowTargetRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    }, [props.messageList]);\r\n\r\n    const onInputValueChanged = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        props.messageSent(inputValue);\r\n\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <section className={classes.ChatWindow}>\r\n            <div className={classes.ChatWindow__Messages} ref={chatWindowRef}>\r\n                {props.messageList.length > 0 ? props.messageList.map(message => {\r\n                    return <ChatMessage\r\n                        key={message._id}\r\n                        currentUserId={props.userId}\r\n                        messageData={message}\r\n                        windowRef={chatWindowRef}\r\n                        messageIsRead={props.messageRead}\r\n                    />\r\n                }) : null}\r\n                <div ref={chatWindowTargetRef} />\r\n            </div>\r\n\r\n            <div className={classes.ChatWindow__Cta}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={onInputValueChanged}\r\n                />\r\n\r\n                <button onClick={sendMessage}>SEND</button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ChatWindow;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport classes from './Chat.module.scss';\r\nimport axiosAuth from '../../axiosUtility/axios-auth';\r\nimport Sidebar from './Sidebar/Sidebar';\r\nimport ChatWindow from './ChatWindow/ChatWindow';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Chat = props => {\r\n    const [availableUsers, setAvailableUsers] = useState([]);\r\n    const [usersToMessageList, setUsersToMessageList] = useState({});\r\n    const [selectedUser, setSelectedUser] = useState({});\r\n\r\n    let params = useParams();\r\n\r\n    useEffect(() => {\r\n        let currUserId = props.userId;   \r\n\r\n        axiosAuth.get('').then(fetchedUsers => {\r\n            let filteredUsers = fetchedUsers.data.users.filter(user => user._id !== currUserId);\r\n            setAvailableUsers(filteredUsers);\r\n\r\n            let messageList = props.userMessages;\r\n            let messageToReceiverMap = {};\r\n\r\n            filteredUsers.forEach(user => {\r\n                messageToReceiverMap[user._id] = [];\r\n            });\r\n\r\n            Object.keys(messageToReceiverMap).forEach(userId => {\r\n                messageToReceiverMap[userId] = messageList.filter(message => {\r\n                    return (message.receiver._id === userId && message.sender._id === currUserId) ||\r\n                        (message.sender._id === userId && message.receiver._id === currUserId);\r\n                });\r\n            });\r\n\r\n            setUsersToMessageList(messageToReceiverMap);\r\n            // console.log(messageToReceiverMap)\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }, [props.userMessages, props.userId, props.userSocket]);\r\n\r\n    useEffect(() => {\r\n        if (params.id) {\r\n            let user = availableUsers.find(user => user._id === params.id) || {};\r\n\r\n            setSelectedUser(user);\r\n        }\r\n    }, [params, availableUsers])\r\n\r\n    const onUserSelectedHandler = (userId) => {\r\n        setSelectedUser(availableUsers.find(user => user._id === userId));\r\n    }\r\n\r\n    const onMessageReadHandler = (data) => {\r\n        if (props.userId !== data.receiver._id) {\r\n            return;\r\n        }\r\n\r\n        let messageId = data._id;\r\n\r\n        if (!data.isRead) {\r\n            props.userSocket.emit('Message is read', {\r\n                messageId: messageId\r\n            });\r\n\r\n            let newMessages = props.userMessages.map(message => {\r\n                if (message._id === messageId) {\r\n                    message.isRead = true;\r\n                }\r\n\r\n                return message;\r\n            });\r\n\r\n            props.updateMessages(newMessages);\r\n        }\r\n    }\r\n\r\n    const onMessageSentHandler = (message) => {\r\n        const messageData = {\r\n            sender: props.userId,\r\n            receiver: selectedUser._id,\r\n            message: message,\r\n            time: (new Date()).getTime()\r\n        };\r\n\r\n        props.userSocket.emit('private message', {\r\n            to: selectedUser._id,\r\n            messageData\r\n        });\r\n\r\n        let senderData = availableUsers.find(user => user._id === props.userId) || {};\r\n\r\n        // This is for updating the user's messageList without resorting to using backend\r\n        props.updateMessages([...props.userMessages, {\r\n            ...messageData,\r\n            _id: Math.random() * 1923,\r\n            sender: {\r\n                _id: props.userId,\r\n                firstName: senderData.firstName,\r\n                lastName: senderData.lastName,\r\n                avatarUrl: senderData.avatarUrl\r\n            },\r\n            receiver: {\r\n                _id: selectedUser._id,\r\n                firstName: selectedUser.firstName,\r\n                lastName: selectedUser.lastName,\r\n                avatarUrl: selectedUser.avatarUrl\r\n            }\r\n        } ]);\r\n    }\r\n\r\n    return (\r\n        <section className={classes.Chat}>\r\n            <Sidebar\r\n                messages={usersToMessageList}\r\n                userList={availableUsers}\r\n                onUserSelected={onUserSelectedHandler}\r\n                currentUserId={props.userId}\r\n                selectedUserId={selectedUser._id}\r\n            />\r\n\r\n            {selectedUser._id && selectedUser._id !== '' ? <ChatWindow\r\n                messageSent={onMessageSentHandler}\r\n                messageList={usersToMessageList[selectedUser._id] || []}\r\n                userId={props.userId}\r\n                messageRead={onMessageReadHandler}\r\n            /> : null}\r\n        </section>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.userId,\r\n        userMessages: state.userMessages,\r\n        userSocket: state.userSocket\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateMessages: (messages) => dispatch(actions.updateMessages(messages))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","import React from 'react';\n\nimport classes from './Logo.module.scss';\n\nconst Logo = () => {\n    return (\n        <span className={classes.Logo}>\n            &nbsp;\n        </span>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.module.scss';\n\nconst NavigationItem = (props) => {\n    return (\n        <li className={classes.NavigationItem}>\n            <NavLink\n                className={classes.Link}\n                activeClassName={classes.ActiveLink}\n                exact={props.exact}\n                to={props.to}>{props.children}</NavLink>\n        </li>\n    )\n}\n\nexport default NavigationItem;","import { useState, useEffect, useRef } from \"react\";\n\nconst useComponentVisible = initialVisibilityState => {\n    const [isComponentVisible, setIsComponentVisible] = useState(initialVisibilityState);\n\n    const ref = useRef(null);\n\n    const handleHideDropdown = event => {\n        if (event.key === \"Escape\") {\n            setIsComponentVisible(false);\n        }\n    };\n\n    const handleClickOutside = event => {\n        // In order for this to work, ref element and the element that is clicked should be siblings\n        if (ref.current && !ref.current.parentElement.contains(event.target)) {\n            setIsComponentVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", handleHideDropdown, true);\n        document.addEventListener(\"click\", handleClickOutside, true);\n        \n        return () => {\n            document.removeEventListener(\"keydown\", handleHideDropdown, true);\n            document.removeEventListener(\"click\", handleClickOutside, true);\n        };\n    });\n\n    return [ ref, isComponentVisible, setIsComponentVisible ];\n}\n\nexport default useComponentVisible;","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './AccountItem.module.scss';\nimport { BACKEND_ORIGIN } from '../../../utility/apiUrl';\nimport useComponentVisible from '../../../hooks/useComponentVisible';\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem';\n\nconst AccountItem = props => {\n    const [ menuRef, isComponentVisible, setIsComponentVisible ] = useComponentVisible(false);\n    const [menuHeight, setMenuHeight] = useState(0);\n\n    let timeout = useRef(null);\n    \n    useEffect(() => {\n        timeout.current = setTimeout(() => {\n            setMenuHeight(menuRef.current.scrollHeight);\n        }, 333);\n\n        return () => {\n            clearTimeout(timeout.current);\n        }\n    }, [menuRef]);\n\n    const toggleMenu = () => {\n        setIsComponentVisible(prevState => !prevState);\n    }\n\n    const innerStyle = {\n        height: `${isComponentVisible ? menuHeight : 0}px`\n    };\n\n    let profilePictureStyle = {};\n\n    if (props.userImage) {\n        profilePictureStyle['backgroundImage'] = `url(${BACKEND_ORIGIN + '/' + props.userImage.replace(/\\\\/g, '/')})`;\n    }\n\n    return (\n        <div className={classes.AccountItem}>\n            <figure className={classes.AccountItem__Profile} onClick={toggleMenu}>\n                <div className={classes.AccountItem__Profile__Picture} style={profilePictureStyle}></div>\n            </figure>\n\n            <div className={classes.AccountItem__Menu} ref={menuRef} style={innerStyle}>\n                <NavigationItem exact to=\"/my-account\">My Account</NavigationItem>\n                <NavigationItem exact to=\"/logout\">Logout</NavigationItem>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        userImage: state.userImage\n    }\n}\n\nexport default connect(mapStateToProps, null)(AccountItem);","import React from 'react';\n\nimport classes from './MessageListItem.module.scss';\nimport { BACKEND_ORIGIN } from '../../../../../utility/apiUrl';\n\nconst MessageListItem = props => {\n    let userData = props.userData;\n    let messageData = props.lastMessageData;\n\n    const getPostCreateTimeDifference = (time) => {\n        let now = (new Date()).getTime();\n        let difference = parseInt((now - time) / 3600000 * 60);\n        let timeString = '';\n        \n        if(difference >= 60 && difference < 1440) {\n            timeString += parseInt(difference / 60) + 'h';\n        } else if(difference >= 1440) {\n            timeString += parseInt(difference / 1440) + 'd';\n        } else if(difference <= 0) {\n            timeString = '<1m';\n        } else {\n            timeString = difference + 'm';\n        }\n\n        return timeString;\n    }\n\n    let messageIndex = messageData.messageText;\n    let userImage = userData.avatarUrl || '';\n    let messageListItemStyle = {};\n    let userName = [userData.firstName, userData.lastName].join(' ');\n\n    if (userImage && userImage !== '') {\n        messageListItemStyle['backgroundImage'] = `url(${BACKEND_ORIGIN + '/' + userImage.replace(/\\\\/g, '/')})`;\n    }\n\n    return (\n        <li className={classes.MessageListItem} onClick={props.clicked}>\n            <figure className={classes.MessageListItem__Picture}>\n                <div className={classes.MessageListItem__Picture__Img} style={messageListItemStyle}></div>\n            </figure>\n\n            <div className={classes.MessageListItem__Content}>\n                <span className={classes.MessageListItem__Content__Username}>\n                    {userName}\n                </span>\n\n                <span className={classes.MessageListItem__Content__Message}>\n                    {messageIndex.length >= 19 ? messageIndex.slice(0, 17) + '...' : messageIndex}\n                </span>\n            </div>\n\n            \n            {props.unreadMessageCount > 0 ? <span className={classes.MessageListItem__UnreadCount}>{props.unreadMessageCount}</span> : null}\n            \n\n            <div className={classes.MessageListItem__Time}>\n                {getPostCreateTimeDifference(messageData.time)}\n            </div>\n        </li>\n    )\n}\n\nexport default MessageListItem;","import React from 'react';\n\nimport classes from './MessagesList.module.scss';\nimport MessageListItem from './MessageListItem/MessageListItem';\n\nconst MessagesList = props => {\n    let messages = props.list;\n\n    let content = Object.keys(messages).map(userId => {\n        let messageData = (messages[userId] || {}).lastMessage;\n        let selectedUser = messageData.sender._id === userId ? messageData.sender : messageData.receiver;\n\n        return <MessageListItem\n            key={userId}\n            userData={selectedUser}\n            lastMessageData={{\n                messageText: messageData.message,\n                time: messageData.time\n            }}\n            unreadMessageCount={(messages[userId] || {}).unreadCount}\n            clicked={props.userMessageItemClicked}\n        />;\n    });\n\n\n    return (\n        <ul className={classes.MessagesList}>\n            {content}\n        </ul>\n    );\n}\n\nexport default MessagesList;","import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport classes from './UserMessage.module.scss';\nimport useComponentVisible from '../../../hooks/useComponentVisible';\nimport svg from '../../../assets/images/sprite.svg';\nimport MessagesList from './MessagesList/MessagesList';\n\nconst UserMessage = props => {\n    const [inboxPrevRef, isComponentVisible, setIsComponentVisible] = useComponentVisible(false);\n    const [inboxPrevHeight, setInboxPrevHeight] = useState(0);\n    const [messageList, setMessageList] = useState([]);\n    const [totalUnreadMessageCount, setTotalUnreadMessageCount] = useState();\n\n    let history = useHistory();\n    let timeout = useRef(null);\n    \n    useEffect(() => {\n        timeout.current = setTimeout(() => {\n            setInboxPrevHeight(inboxPrevRef.current.scrollHeight);\n        }, 333);\n\n        return () => {\n            clearTimeout(timeout.current);\n        }\n    }, [inboxPrevRef]);\n\n    useEffect(() => {\n        let totalUnReadMessages = 0;\n        let userToLastMessageMap = {};\n        let userId = '';\n        let messageList = props.userMessages.slice().sort((a, b) => b.time > a.time)\n\n        messageList.forEach(message => {\n            userId = message.sender._id !== props.userId ? message.sender._id : message.receiver._id;\n\n            if (!Object.prototype.hasOwnProperty.call(userToLastMessageMap, userId)) {\n                userToLastMessageMap[userId] = {\n                    lastMessage: {},\n                    unreadCount: 0\n                };\n            }\n\n            let lastMessageData = userToLastMessageMap[userId];\n            let lastMessageOfUser = lastMessageData.lastMessage || {};\n\n            if (message.time > (lastMessageOfUser.time || 0) && (message.receiver._id === userId || message.sender._id === userId)) {\n                userToLastMessageMap[userId] = {\n                    lastMessage: message\n                };\n            }\n\n            userToLastMessageMap[userId].unreadCount = !message.isRead && message.sender._id !== props.userId ?\n                lastMessageData.unreadCount + 1 : lastMessageData.unreadCount;\n\n            !message.isRead && message.sender._id !== props.userId && totalUnReadMessages++;\n        });\n\n        setMessageList(userToLastMessageMap);\n        setTotalUnreadMessageCount(totalUnReadMessages);\n\n        if (totalUnReadMessages > 0) {\n            // window.alert('New Message');\n        }\n\n    }, [props.userMessages, props.userId]);\n\n    const toggleMenu = () => {\n        setIsComponentVisible(prevState => !prevState);\n    }\n\n    const onUserMessageItemClickedHandler = () => {\n        history.push(`/my-inbox`);\n\n        toggleMenu();\n    }\n\n    const innerStyle = {\n        height: `${isComponentVisible ? inboxPrevHeight : 0}px`\n    };\n\n    return (\n        <li className={classes.UserMessage}>\n            <svg className={classes.UserMessage__Icon} onClick={toggleMenu}>\n                <use xlinkHref={`${svg}#icon-bubbles2`}></use>\n            </svg>\n\n            {totalUnreadMessageCount > 0 ? <span className={classes.UserMessage__UnreadCount}>{totalUnreadMessageCount}</span> : null}\n\n            <div className={classes.UserMessage__InboxPreviewWrapper} ref={inboxPrevRef} style={innerStyle}>\n                <div className={classes.UserMessage__InboxPreviewContent}>\n                    <header>\n                        <h2>Inbox</h2>\n                    </header>\n\n                    <MessagesList\n                        list={messageList}\n                        userMessageItemClicked={onUserMessageItemClickedHandler}\n                    />\n\n                    <footer>\n                        <Link to='/my-inbox'>Go to inbox</Link>\n                    </footer>\n                </div>\n            </div>\n        </li>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.userId,\n        userMessages: state.userMessages\n    };\n};\n\nexport default connect(mapStateToProps, null)(UserMessage);","import React from 'react';\n\nimport classes from './NavigationItems.module.scss';\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport AccountItem from '../AccountItem/AccountItem';\nimport UserMessage from '../UserMessage/UserMessage';\n\nconst NavigationItems = (props) => {\n    let navList = (\n        <>\n            <NavigationItem exact to=\"/\">Home</NavigationItem>\n            <NavigationItem exact to=\"/courses\">Courses</NavigationItem>\n            <NavigationItem exact to=\"/about\">About us</NavigationItem>\n            <NavigationItem exact to=\"/contact\">Contact</NavigationItem>\n            { props.status === 'admin' ?\n                <NavigationItem exact to=\"/administration\">Administration</NavigationItem> :\n                null\n            }\n        </>\n    );\n\n    return (\n        <nav className={classes.Navigation}>\n            <ul className={classes.Navigation__Items}>\n                {navList}\n            </ul>\n\n            <ul className={classes.Navigation__Auth}>\n                { props.isAuth ?\n                    <>\n                        <UserMessage />\n                        <AccountItem />\n                    </> : <NavigationItem exact to=\"/auth\">Sign in</NavigationItem>\n                }\n            </ul>\n        </nav>\n    )\n}\n\nexport default NavigationItems;","import React from 'react';\n\nimport classes from './Toolbar.module.scss';\nimport Logo from '../../UI/Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nconst Toolbar = (props) => {\n    return (\n        <nav className={classes.ToolbarWrapper}>\n            <div className={classes.Toolbar}>\n                <Logo />\n\n                <div className={classes.Toolbar__Main}>\n                    <NavigationItems isAuth={props.isAuth} status={props.userStatus} />\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Toolbar;","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\n\nconst Layout = (props) => {\n    const testStyle = {\n        width: '65%',\n        margin: '2rem auto 0 auto'\n    };\n\n    return (\n        <Fragment>\n            <Toolbar isAuth={props.isAuthenticated} userStatus={props.userStatus} />\n\n            <div style={testStyle}>\n                {props.children}\n            </div>\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.isAuth,\n        userStatus: state.userStatus\n    }\n}\n\nexport default connect(mapStateToProps, null)(Layout);","import React from 'react';\n\nconst Home = () => {\n    return (\n        <div>\n            Home Component\n        </div>\n    )\n}\n\nexport default Home;","import React, { useState } from 'react';\n\nimport classes from './Login.module.scss';\nimport Input from '../../UI/Input/Input';\nimport formValidation from '../../../utility/formValidation';\n\nconst Login = (props) => {\n    const [formControls, setFormControls] = useState({\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'E-mail'\n            },\n            label: \"E-mail\",\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password'\n            },\n            label: \"Password\",\n            validation: {\n                required: true,\n                minLength: 6\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        }\n    });\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    let overlayClassList = [classes.Login__Overlay];\n\n    if (props.isSignupMode) {\n        overlayClassList = [classes.Login__Overlay, classes.Login__Overlay__Active];\n    }\n\n    const inputChangedHandler = (event, formControl) => {\n        const copiedFormControls = { ...formControls };\n\n        const copiedFormControl = { ...copiedFormControls[formControl] };\n\n        copiedFormControl.value = event.target.value;\n\n        // Also check validity & mark it as touched\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\n        copiedFormControl.valid = isValid;\n        copiedFormControl.touched = true;\n\n        copiedFormControls[formControl] = copiedFormControl;\n\n        // Set the validiity of the form\n        let formValid = true;\n        Object.keys(copiedFormControls).forEach(formCtrl => {\n            formValid = formValid && copiedFormControls[formCtrl].valid;\n        });\n\n        setFormIsValid(formValid);\n        setFormControls(copiedFormControls);\n    }\n\n    const onLoginFormSubmitHandler = (event) => {\n        event.preventDefault();\n\n        const loginForm = {\n            email: formControls.email.value,\n            password: formControls.password.value\n        }\n\n        if(formIsValid) {\n            props.loginFormSubmit(loginForm);\n        }\n    }\n\n    return (\n        <div className={classes.Login}>\n            <span className={overlayClassList.join(' ')}></span>\n\n            <div className={classes.Login__Form}>\n                <h2 className={classes.Login__Form__Header}>\n                    Account Login\n                </h2>\n\n                <div className={classes.Login__Form__Fields}>\n                    {Object.keys(formControls).map(formControl => {\n                        return <Input\n                            key={formControl}\n                            elementType={formControls[formControl].elementType}\n                            elementConfig={formControls[formControl].elementConfig}\n                            label={formControls[formControl].label}\n                            value={formControls[formControl].value}\n                            touched={formControls[formControl].touched}\n                            isValid={formControls[formControl].valid}\n                            changed={(event) => inputChangedHandler(event, formControl)}\n                        />\n                    })}\n                </div>\n\n                <div className={classes.Login__Form__Cta}>\n                    <span onClick={props.forgotPasswordClicked}>\n                        Forgot your password?\n                    </span>\n                </div>\n\n                <div className={classes.Login__Form__Cta}>\n                    <button disabled={!formIsValid} onClick={onLoginFormSubmitHandler}>Login</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","import React, { useState } from 'react';\n\nimport classes from './Signup.module.scss';\nimport Input from '../../UI/Input/Input';\nimport formValidation from '../../../utility/formValidation';\n\nconst Signup = (props) => {\n    const [formControls, setFormControls] = useState({\n        firstName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'First Name'\n            },\n            label: \"First Name\",\n            validation: {\n                required: true,\n                isEnglishOnly: true,\n                minLength: 3\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        lastName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Last Name'\n            },\n            label: \"Last Name\",\n            validation: {\n                required: true,\n                isEnglishOnly: true,\n                minLength: 3\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'E-mail'\n            },\n            label: \"E-mail\",\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password'\n            },\n            label: \"Password\",\n            validation: {\n                required: true,\n                minLength: 6\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        }\n    });\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    let classList = [classes.Signup];\n\n    if (props.isSignupMode) {\n        classList = [classes.Signup, classes.Signup__Active];\n    }\n\n    const inputChangedHandler = (event, formControl) => {\n        const copiedFormControls = { ...formControls };\n\n        const copiedFormControl = { ...copiedFormControls[formControl] };\n\n        copiedFormControl.value = event.target.value;\n\n        // Also check validity & mark it as touched\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\n        copiedFormControl.valid = isValid;\n        copiedFormControl.touched = true;\n\n        copiedFormControls[formControl] = copiedFormControl;\n\n        // Set the validiity of the form\n        let formValid = true;\n        Object.keys(copiedFormControls).forEach(formCtrl => {\n            formValid = formValid && copiedFormControls[formCtrl].valid;\n        });\n\n        setFormIsValid(formValid);\n        setFormControls(copiedFormControls);\n    }\n\n    const onSignupFormSubmitHandler = (event) => {\n        event.preventDefault();\n\n        const signupForm = {\n            firstName: formControls.firstName.value,\n            lastName: formControls.lastName.value,\n            email: formControls.email.value,\n            password: formControls.password.value\n        }\n\n        if(formIsValid) {\n            props.signupFormSubmit(signupForm);\n        }\n    }\n\n    const resetForm = () => {\n        const copiedFormControls = { ...formControls };\n        let copiedFormControl;\n\n        Object.keys(copiedFormControls).forEach(formControl => {\n            copiedFormControl = { ...copiedFormControls[formControl] };\n\n            copiedFormControl.valid = false;\n            copiedFormControl.touched = false;\n            copiedFormControl.value = '';\n\n            copiedFormControls[formControl] = copiedFormControl;\n        });\n\n        setFormControls(copiedFormControls);\n        setFormIsValid(false);\n    }\n\n    const onSignupOpened = (event) => {\n        resetForm();\n\n        props.closeSignupPanel(event, false);\n    }\n\n    return (\n        <div className={classList.join(' ')} onClick={(event) => props.openSignupPanel(event, true)}>\n            <span className={classes.Signup__Close} onClick={(event) => onSignupOpened(event)}></span>\n            \n            <div className={classes.Signup__Form}>\n                <h2 className={classes.Signup__Form__Header}>\n                    Create Account\n                </h2>\n\n                <div className={classes.Signup__Form__Fields}>\n                    {Object.keys(formControls).map(formControl => {\n                        return <Input\n                            key={formControl}\n                            elementType={formControls[formControl].elementType}\n                            elementConfig={formControls[formControl].elementConfig}\n                            label={formControls[formControl].label}\n                            value={formControls[formControl].value}\n                            touched={formControls[formControl].touched}\n                            isValid={formControls[formControl].valid}\n                            changed={(event) => inputChangedHandler(event, formControl)}\n                            labelColor='white'\n                        />\n                    })}\n                </div>\n\n                <div className={classes.Signup__Form__Cta}>\n                    <button disabled={!formIsValid} onClick={onSignupFormSubmitHandler}>Register</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup;","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { signupRedirect } from '../../../store/actions/index';\nimport classes from './SignupSuccess.module.scss';\n\nconst SignupSuccess = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(signupRedirect());\n    }, [dispatch]);\n\n    return (\n        <div className={classes.SignupSuccess}>\n            <h2 className={classes.SignupSuccess__Header}>\n                Signup Success!\n            </h2>\n\n            <div className={classes.SignupSuccess__Content}>\n                Press <Link to=\"/auth\">here</Link> to login!\n            </div>\n        </div>\n    )\n}\n\nexport default SignupSuccess;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from './RequestPasswordReset.module.scss';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport formValidation from '../../../utility/formValidation';\n\nconst RequestPasswordReset = (props) => {\n    const [email, setEmail] = useState({\n        elementType: 'input',\n        elementConfig: {\n            type: 'text',\n            placeholder: 'E-mail'\n        },\n        label: \"E-mail\",\n        validation: {\n            required: true,\n            isEmail: true\n        },\n        valid: false,\n        touched: false,\n        value: ''\n    });\n    const [requestSent, setRequestSent] = useState(false);\n\n    const inputChangedHandler = (event) => {\n        const copiedEmailFormControl = { ...email };\n\n        copiedEmailFormControl.value = event.target.value;\n\n        // Also check validity & mark it as touched\n        let isValid = formValidation(event.target.value, copiedEmailFormControl.validation);\n        copiedEmailFormControl.valid = isValid;\n        copiedEmailFormControl.touched = true;\n\n        setEmail(copiedEmailFormControl);\n    }\n\n    const resetFormSubmitted = (event) => {\n        event.preventDefault();\n\n        props.emailFormSubmit(email.value);\n        setRequestSent(true);\n    }\n\n    let pageContent = null;\n    if(props.loading) {\n        pageContent = 'LOADING...';\n    } else {\n        if (props.reqSuccessfull && requestSent) {\n            pageContent = (\n                <>\n                    <h2 className={classes.RequestPasswordReset__Header}>\n                        We sent you an e-mail!\n                    </h2>\n                    <p>Check your e-mail and follow the instructions.</p>\n                    <div className={classes.RequestPasswordReset__Cta}>\n                        <Link to=\"/\" className={classes.RequestPasswordReset__Link}>Home</Link>\n                    </div>\n                </>\n            );\n        } else {\n            pageContent = (\n                <>\n                    <h2 className={classes.RequestPasswordReset__Header}>\n                        Reset Password\n                    </h2>\n\n                    <form onSubmit={resetFormSubmitted} className={classes.RequestPasswordReset__Body}>\n                        <Input\n                            elementType={email.elementType}\n                            elementConfig={email.elementConfig}\n                            label={email.label}\n                            value={email.value}\n                            touched={email.touched}\n                            isValid={email.valid}\n                            changed={inputChangedHandler}\n                        />\n\n                        <Button disabled={!email.valid}>Continue</Button>\n                    </form>\n                </>\n            );\n        }\n    }\n\n    return (\n        <div className={classes.RequestPasswordReset}>\n            {pageContent}\n        </div>\n    )\n}\n\nexport default RequestPasswordReset;","import React, { useState } from 'react';\n\nimport classes from './PasswordReset.module.scss';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport formValidation from '../../../utility/formValidation';\n\nconst PasswordReset = (props) => {\n    const [resetFormControls, setResetFormControls] = useState({\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password'\n            },\n            label: \"Password\",\n            validation: {\n                required: true,\n                minLength: 6\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        passwordRepeat: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Verify Password'\n            },\n            label: \"Verify Password\",\n            validation: {\n                required: true,\n                minLength: 6\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        }\n    });\n    const [formValid, setFormValid] = useState(false);\n\n    let token = props.location.pathname.split('/').slice(-1).join('');\n\n    const inputChangedHandler = (event, inputName) => {\n        const copiedFormControls = { ...resetFormControls };\n\n        const copiedFormControl = { ...copiedFormControls[inputName] };\n\n        copiedFormControl.value = event.target.value;\n\n        // Also check validity & mark it as touched\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\n        copiedFormControl.valid = isValid;\n        copiedFormControl.touched = true;\n\n        copiedFormControls[inputName] = copiedFormControl;\n\n        // Set the validiity of the form\n        let formIsValid = true;\n        Object.keys(copiedFormControls).forEach(formControl => {\n            formIsValid = formIsValid && copiedFormControls[formControl].valid;\n        });\n        formIsValid = formIsValid && copiedFormControls.password.value === copiedFormControls.passwordRepeat.value;\n\n        setFormValid(formIsValid);\n        setResetFormControls(copiedFormControls);\n    }\n\n    const passwordResetFormSubmitted = (event) => {\n        event.preventDefault();\n\n        const passwordResetForm = {\n            password: resetFormControls.password.value,\n            passwordVerify: resetFormControls.passwordRepeat.value,\n            token: token\n        };\n        \n        props.resetFormSubmit(passwordResetForm);\n    }\n\n    let formInputs = Object.keys(resetFormControls).map(formControl => {\n        return <Input \n            key={formControl}\n            elementType={resetFormControls[formControl].elementType}\n            elementConfig={resetFormControls[formControl].elementConfig}\n            label={resetFormControls[formControl].label}\n            value={resetFormControls[formControl].value}\n            touched={resetFormControls[formControl].touched}\n            isValid={resetFormControls[formControl].valid}\n            changed={(event) => inputChangedHandler(event, formControl)}\n        />;\n    });\n\n    let pageContent = null;\n    if(props.loading) {\n        pageContent = 'LOADING...';\n    } else if(props.path === '/') {\n        pageContent = <p className={classes.ResetedPasswordHeader}>Successfully changed your password</p>;\n    } else {\n        pageContent = (\n            <>\n                <h2 className={classes.PasswordReset__Header}>\n                    Enter your new password\n                </h2>\n                \n                <form onSubmit={passwordResetFormSubmitted} className={classes.PasswordReset__Form}>\n                    {formInputs}\n                    <Button disabled={!formValid}>Reset</Button>\n                </form>\n            </>\n        )\n    }\n\n    return (\n        <div className={classes.PasswordReset}>\n            {pageContent}\n        </div>\n    )\n}\n\nexport default PasswordReset;","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../store/actions/index';\n\nimport classes from './Authentication.module.scss';\nimport FeedbackDialogue from '../../components/FeedbackDialogue/FeedbackDialogue';\nimport Login from '../../components/Auth/Login/Login';\nimport Signup from '../../components/Auth/Signup/Signup';\nimport SignupSuccess from '../../components/Auth/SignupSuccess/SignupSuccess';\nimport RequestPasswordReset from '../../components/Auth/RequestPasswordReset/RequestPasswordReset';\nimport PasswordRest from '../../components/Auth/PasswordReset/PasswordReset';\n\nclass Authentication extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showError: false,\n            signupMode: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.redirectPath !== this.props.redirectPath && prevProps.signupSuccess !== this.props.signupSuccess &&\n            this.props.redirectPath === '/auth/signup-success') {\n            this.setState({\n                signupMode: false\n            });\n\n            // SIGNUP SUCCESSFULL\n            this.props.history.push(this.props.redirectPath);\n        }\n\n        // Check if there is an error\n        if(prevProps.error !== this.props.error && this.props.error !== null) {\n            this.setState({\n                showError: true\n            });\n        }\n    }\n\n    onCloseFeedBackDialogueHandler = () => {\n        this.setState({\n            showError: false\n        });\n    }\n\n    onSignupClosedHandler = (event, toggle) => {\n        event.stopPropagation();\n\n        this.setState({\n            signupMode: toggle\n        });\n    }\n\n    onForgotPasswordClickedHandler = () => {\n        this.props.history.push(this.props.match.url + '/password-reset');\n    }\n\n    onLoginFormSubmittedHandler = (formData) => {\n        this.props.login(formData);\n    }\n\n    onSignupFormSubmittedHandler = (formData) => {\n        this.props.signup(formData);\n    }\n\n    onEmailFormSubmitted = (email) => {\n        this.props.requestPasswordReset(email);\n    }\n\n    onPasswordResetFormSubmitHandler = (formData) => {\n        this.props.resetPassword(formData);\n    }\n\n    render() {\n        let content = null;\n\n        if (this.props.isAuthenticated) {\n            // Login successfull\n            content = <Redirect to='/' />;\n        } else {\n            content = (\n                <Switch>\n                    <Route path={this.props.match.url + '/signup-success'} exact render={() => <SignupSuccess />} />\n\n                    <Route path={this.props.match.url + '/password-reset'} exact render={() =>\n                        <RequestPasswordReset\n                            emailFormSubmit={this.onEmailFormSubmitted}\n                            loading={this.props.loading}\n                            reqSuccessfull={!this.state.showError && !this.props.error} />} />\n    \n                    <Route path={this.props.match.url + '/password-reset/:token'} exact render={() =>\n                        <PasswordRest\n                            {...this.props}\n                            resetFormSubmit={this.onPasswordResetFormSubmitHandler}\n                            loading={this.props.loading}\n                            reqSuccessfull={!this.state.showError && !this.props.error}\n                            path={this.props.redirectPath} />} />\n                    \n                    <Route path={this.props.match.url} exact render={() => {\n                        return <div className={classes.Authentication} style={this.state.signupMode ? { height: \"60rem\" } : {}}>\n                            <Login\n                                isSignupMode={this.state.signupMode}\n                                forgotPasswordClicked={this.onForgotPasswordClickedHandler}\n                                loginFormSubmit={this.onLoginFormSubmittedHandler}\n                            />\n    \n                            <Signup\n                                isSignupMode={this.state.signupMode}\n                                openSignupPanel={this.onSignupClosedHandler}\n                                closeSignupPanel={this.onSignupClosedHandler}\n                                signupFormSubmit={this.onSignupFormSubmittedHandler}\n                            />\n                        </div>;\n                    }} />\n                </Switch>\n            );\n        }\n\n        return (\n            <>\n                <FeedbackDialogue\n                    show={this.state.showError}\n                    feedbackMessage={this.props.error}\n                    closed={this.onCloseFeedBackDialogueHandler}\n                    isError={true}\n                />\n\n                {content}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.isLoading,\n        error: state.error,\n        token: state.token,\n        isAuthenticated: state.isAuth,\n        redirectPath: state.redirectPath,\n        signupSuccess: state.successfullSignup\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (formData) => dispatch(actions.login(formData)),\n        signup: (formData) => dispatch(actions.signup(formData)),\n        requestPasswordReset: (email) => dispatch(actions.passwordResetRequest(email)),\n        resetPassword: (formData) => dispatch(actions.resetPassword(formData))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);","import React from 'react';\n\nimport classes from './Loader.module.scss';\n\nconst Loader = (props) => {\n    return (\n        <div className={classes.Spinner}>\n            <svg className={classes.Circular} viewBox=\"25 25 50 50\">\n                <circle className={classes.Stroke} cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth={props.strokeWidth} />\n            </svg>\n        </div>\n    )\n}\n\nexport default Loader;","import axios from 'axios';\nimport { BACKEND_ORIGIN } from '../utility/apiUrl';\n\nconst instance = axios.create({\n    baseURL: BACKEND_ORIGIN + '/api/course'\n});\n\nexport default instance;","import React from 'react';\n\nimport classes from './CourseListElement.module.scss';\nimport svg from '../../../assets/images/sprite.svg';\n\nconst CourseListElement = (props) => {\n    let colors_light = ['rgba(255, 87, 129, 0.15)', 'rgba(255, 185, 0, 0.15)', 'rgba(41, 152, 255, 0.15)'];\n    let colors_dark = ['rgba(186, 38, 93, 0.3)', 'rgba(206, 98, 40, 0.3)', 'rgba(86, 67, 250, 0.3)'];\n\n    let image = require('../../../assets/images/spine.jpg');\n    let style = {\n        backgroundImage: `linear-gradient(to bottom, ${colors_light[props.index % 3]}, ${colors_dark[props.index % 3]}), url(${image})`\n    }\n\n    let courseData = props.data;\n\n    return (\n        <div className={classes.CourseListElement}>\n            <div className={[classes.CourseListElement__Side, classes.CourseListElement__Side__Front].join(' ')}>\n                <div className={classes.CourseListElement__Picture} style={style}>\n                    &nbsp;\n                </div>\n                <div className={classes.CourseListElement__Content}>\n                    <h4 className={[classes.CourseListElement__Heading, classes[`CourseListElement__Heading__${props.index % 3 + 1}`]].join(' ')}>\n                        {courseData.name}\n                    </h4>\n                    <div className={classes.CourseListElement__Description}>\n                        <h2>Faculty</h2>\n                        <ul className={classes.CourseListElement__Description__FacultyList}>\n                            {courseData.landing.faculty.map(faculty => {\n                                return <li key={faculty._id} className={[classes.CourseListElement__Description__FacultyList__Item, classes[`CourseListElement__Description__FacultyList__Item__${props.index % 3 + 1}`]].join(' ')}>\n                                    {`Prof. Dr. ${faculty.firstName + ' ' + faculty.lastName}`}\n                                </li>;\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div className={[classes.CourseListElement__Side, classes.CourseListElement__Side__Back, classes[`CourseListElement__Side__Back__${props.index % 3 + 1}`]].join(' ')}>\n                <div className={classes.CourseListElement__Cta}>\n                    <button className={classes.CourseListElement__Cta__Link} onClick={props.selectCourseListElement}>\n                        <svg className={classes.CourseListElement__Cta__Link__Icon}>\n                            <use xlinkHref={`${svg}#icon-info`}></use>\n                        </svg>\n                        <span className={classes.CourseListElement__Cta__Link__Text} onClick={props.clicked}>\n                            More Info\n                        </span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CourseListElement;","import React, { useState, useEffect } from 'react';\n\nimport classes from './CourseList.module.scss';\nimport Loader from '../../components/Loader/Loader';\nimport axiosCourse from '../../axiosUtility/axios-course';\nimport CourseListElement from './CourseListElement/CourseListElement';\n\nconst CourseList = (props) => {\n    const [courseList, setCourseList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true);\n        axiosCourse.get('').then(response => {\n            setCourseList(response.data.courseList.filter(course => course.isPublished));\n            setIsLoading(false);\n        })\n    }, []);\n\n    const onCourseClickedHandler = (id) => {\n        props.history.push(props.match.url + '/' + id)\n    }\n\n    let pageContent = (\n        <span className={classes.CourseList__Loader}>\n            <Loader strokeWidth={4} />\n        </span>\n    );\n\n    if (!isLoading) {\n        pageContent = (\n            <>\n                <header className={classes.CourseList__Header}>\n                    <h1>OUR COURSES</h1>\n                </header>\n            \n                <div className={classes.CourseList__Content}>\n                    { courseList.map((course, i) => {\n                        return <CourseListElement\n                            key={course._id}\n                            data={course}\n                            index={i}\n                            selectCourseListElement={() => onCourseClickedHandler(course._id)}\n                        />;\n                    }) }\n                </div>\n            </>\n        );\n    }\n\n    return (\n        <section className={classes.CourseList}>\n            {pageContent}\n        </section>\n    )\n}\n\nexport default CourseList;","import axios from 'axios';\nimport { BACKEND_ORIGIN } from '../utility/apiUrl';\n\nconst instance = axios.create({\n    baseURL: BACKEND_ORIGIN + '/api/forum'\n});\n\nexport default instance;","import axios from 'axios';\nimport { BACKEND_ORIGIN } from '../utility/apiUrl';\n\nconst instance = axios.create({\n    baseURL: BACKEND_ORIGIN + '/api/post'\n});\n\nexport default instance;","import React from 'react';\n\nimport svg from '../../../assets/images/sprite.svg';\nimport classes from './CourseNavigationItem.module.scss';\n\nconst CourseNavigationItem = (props) => {\n    let classList = [classes.CourseNavigationItem];\n\n    if (props.active) {\n        classList = [classes.CourseNavigationItem, classes.CourseNavigationItem__Active];\n    } else {\n        classList = [classes.CourseNavigationItem];\n    }\n\n    return (\n        <div className={classList.join(' ')} onClick={props.clicked}>\n            <svg className={classes.CourseNavigationItem__Icon}>\n                <use xlinkHref={`${svg}#icon-${props.iconName}`}></use>\n            </svg>\n\n            <span className={classes.CourseNavigationItem__Text}>\n                {props.children}\n            </span>\n        </div>\n    )\n}\n\nexport default CourseNavigationItem;","import React from 'react';\n\nimport classes from './CourseNavigation.module.scss';\nimport CourseNavigationItem from './CourseNavigationItem/CourseNavigationItem';\n\nconst CourseNavigation = (props) => {\n    let navigationItems = props.navItemList;\n\n    let content = navigationItems.map((item, i) => {\n        return (<CourseNavigationItem\n                key={i}\n                iconName={item.icon}\n                active={item.active}\n                clicked={() => props.navigationItemClicked(i)}\n            >\n            {item.name}\n        </CourseNavigationItem>);\n    });\n\n    return (\n        <div className={classes.CourseNavigation}>\n            {content}\n        </div>\n    )\n}\n\nexport default CourseNavigation;","import React from 'react';\n\nimport classes from './CourseInfo.module.scss';\n\nconst CourseInfo = (props) => {\n    return (\n        <div className={classes.CourseInfo}>\n            <div className={classes.CourseInfo__Image}>\n                <img src={props.landingData.image} alt=\"Landing Page Img\" />\n            </div>\n\n            <div className={classes.CourseInfo__Body}>\n                <div className={classes.CourseInfo__Info}>\n                    <h2>\n                        Course Info\n                    </h2>\n                    {props.landingData.info}\n                </div>\n\n                <div className={classes.CourseInfo__Faculty}>\n                    <h2>\n                        Faculty\n                    </h2>\n\n                    <ul>\n                        {(props.landingData.faculty || []).map((faculty, i) => {\n                            return <li key={i}>{`Prof. Dr. ${faculty.firstName} ${faculty.lastName}`}</li>;\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CourseInfo;","import React, { useState, useEffect, useCallback } from 'react';\n\nimport classes from './CreatePost.module.scss';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport checkValidity from '../../../utility/formValidation';\n\nconst CreatePost = (props) => {\n    const [formControls, setFormControls] = useState({\n        title: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Title'\n            },\n            label: \"Title\",\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        },\n        content: {\n            elementType: 'textarea',\n            elementConfig: {\n                type: 'textarea',\n                placeholder: 'Post Content'\n            },\n            label: \"Post Content\",\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false,\n            value: ''\n        }\n    });\n    const [isFormValid, setIsFormValid] = useState(false);\n\n    const prePopulateFormFields = useCallback(() => {\n        let prePopulatedFormFields = {};\n\n        // Prepopulate the title\n        const copiedTitle = { ...formControls.title };\n\n        copiedTitle.value = props.editFormFields['title'];\n        let isTitleValid = checkValidity(props.editFormFields['title'], copiedTitle.validation);\n        copiedTitle.valid = isTitleValid;\n        copiedTitle.touched = true;\n\n        prePopulatedFormFields['title'] = {...copiedTitle};\n\n        // Prepopulate the content\n        const copiedContent = { ...formControls.content };\n\n        copiedContent.value = props.editFormFields['content'];\n        let isContentValid = checkValidity(props.editFormFields['content'], copiedContent.validation);\n        copiedContent.valid = isContentValid;\n        copiedContent.touched = true;\n\n        prePopulatedFormFields['content'] = {...copiedContent};\n\n        let formIsValid = true;\n        Object.keys(prePopulatedFormFields).forEach(formControl => {\n            formIsValid = formIsValid && prePopulatedFormFields[formControl].valid;\n        });\n\n        setIsFormValid(formIsValid);\n        setFormControls(prePopulatedFormFields);\n    }, [props.editFormFields, formControls.title, formControls.content]);\n\n    useEffect(() => {\n        if (props.isEditMode) {\n            prePopulateFormFields();\n        }\n        // eslint-disable-next-line\n    }, [props.isEditMode]);\n\n    const inputChangedHandler = (event, inputName) => {\n        event.preventDefault();\n\n        const copiedFormControls = { ...formControls };\n\n        const copiedFormControl = { ...copiedFormControls[inputName] };\n\n        copiedFormControl.value = event.target.value;\n\n        // Check validity & mark it as touched\n        let isValid = checkValidity(event.target.value, copiedFormControl.validation);\n        copiedFormControl.valid = isValid;\n        copiedFormControl.touched = true;\n\n        copiedFormControls[inputName] = copiedFormControl;\n\n        let formIsValid = true;\n        Object.keys(copiedFormControls).forEach(formControl => {\n            formIsValid = formIsValid && copiedFormControls[formControl].valid;\n        });\n\n        setIsFormValid(formIsValid);\n        setFormControls(copiedFormControls);\n    }\n\n    const createPostHandler = () => {\n        let formData = {\n            title: formControls.title.value,\n            content: formControls.content.value\n        };\n\n        props.createPost(formData);\n    }\n\n    const updatePostHandler = () => {\n        let formData = {\n            title: formControls.title.value,\n            content: formControls.content.value\n        };\n\n        props.editPost(formData);\n    }\n\n    let formFields = Object.keys(formControls).map((formControl, i) => {\n        return <Input\n            key={i}\n            elementType={formControls[formControl].elementType}\n            elementConfig={formControls[formControl].elementConfig}\n            label={formControls[formControl].label}\n            value={formControls[formControl].value}\n            touched={formControls[formControl].touched}\n            isValid={formControls[formControl].valid}\n            changed={(event) => inputChangedHandler(event, formControl)}\n        />\n    });\n\n    return (\n        <section className={classes.CreatePost}>\n            <header className={classes.CreatePost__Header}>\n                <h2>\n                    {!props.isEditMode ? 'Create a Post' : 'Edit the Post'}\n                </h2>\n            </header>\n\n            <div className={classes.CreatePost__Body}>\n                <div className={classes.CreatePost__Inputs}>\n                    {formFields}\n                </div>\n\n                <div className={classes.CreatePost__Cta}>\n                    {!props.isEditMode ? <Button\n                        btnType=\"BtnPrimary\"\n                        disabled={!isFormValid}\n                        clicked={createPostHandler}>Create</Button> :\n                        <Button\n                        btnType=\"BtnPrimary\"\n                        disabled={!isFormValid}\n                        clicked={updatePostHandler}>Update</Button>}\n                    <Button\n                        btnType=\"BtnDanger\"\n                        clicked={props.createPostCancel}>Cancel</Button>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default CreatePost;","import React from 'react';\n\nimport classes from './Post.module.scss';\n\nconst Post = (props) => {\n    const postData = props.postData;\n\n    const getPostCreateTimeDifference = (time) => {\n        let now = (new Date()).getTime();\n        let updateTime = (new Date(time)).getTime();\n        let difference = parseInt((now - updateTime) / 3600000 * 60);\n        let timeString = '';\n        \n        if(difference >= 60 && difference < 1440) {\n            timeString += parseInt(difference / 60) + 'h';\n        } else if(difference >= 1440) {\n            timeString += parseInt(difference / 1440) + 'd';\n        } else if(difference <= 0) {\n            timeString = '<1m';\n        } else {\n            timeString = difference + 'm';\n        }\n\n        return timeString;\n    }\n\n    return (\n        <tr className={classes.Post} onClick={props.postSelected}>\n            <td className={classes.Post__Title}>\n                {postData.title}\n            </td>\n\n            <td className={classes.Post__Author}>\n                {postData.author.status !== 'admin' ? postData.author.firstName + ' ' + postData.author.lastName : postData.author.firstName}\n            </td>\n\n            <td className={classes.Post__Replies}>\n                {postData.responses.length}\n            </td>\n\n            <td className={classes.Post__Views}>\n                {postData.views}\n            </td>\n\n            <td className={classes.Post__Activity}>\n                {getPostCreateTimeDifference(postData.createdAt)}\n            </td>\n        </tr>\n    );\n}\n\nexport default Post;","import React from 'react';\n\nimport Post from './Post/Post';\nimport classes from './PostList.module.scss';\n\nconst PostList = (props) => {\n    const postList = props.postList;\n\n    if (postList.length === 0) {\n        return <div>There is no forum post yet!</div>\n    }\n\n    let postContent = postList.map((post) => {\n        return <Post\n            key={post._id}\n            postData={post}\n            postSelected={() => props.onPostSelected(post._id)}\n        />\n    });\n\n    return (\n        <table className={classes.PostList}>\n            <thead>\n                <tr className={classes.PostList__Header}>\n                    <th>Topic</th>\n                    <th>Author</th>\n                    <th>Replies</th>\n                    <th>Views</th>\n                    <th>Activity</th>\n                </tr>\n            </thead>\n            <tbody>\n                {postContent}\n            </tbody>\n        </table>\n    )\n}\n\nexport default PostList;","import React from 'react';\n\nimport classes from './AuthorInfo.module.scss';\nimport { BACKEND_ORIGIN } from '../../../../../utility/apiUrl';\n\nconst AuthorInfo = props => {\n\n    let imgUrl = (props.userImg || '').replace(/\\\\/g, '/');\n    let avatarStyle = {};\n\n    if (imgUrl && imgUrl !== '') {\n        avatarStyle['backgroundImage'] = `url(${BACKEND_ORIGIN + '/' + imgUrl})`;\n    }\n\n    return (\n        <div className={classes.AuthorInfo}>\n            <div className={classes.AuthorInfo__Avatar}>\n                <div className={classes.AuthorInfo__Avatar__Picture} style={avatarStyle}></div>\n            </div>\n\n            <div className={classes.AuthorInfo__Name}>{props.userName}</div>\n        </div>\n    )\n}\n\nexport default AuthorInfo;","import React from 'react';\n\nimport classes from './PostComment.module.scss';\nimport AuthorInfo from '../../AuthorInfo/AuthorInfo';\n\nconst PostComment = (props) => {\n    const commentData = props.commentData;\n    const authorData = commentData.author;\n\n    console.log(commentData)\n\n    const getPostCreateTimeDifference = (time) => {\n        let now = (new Date()).getTime();\n        let updateTime = (new Date(time)).getTime();\n        let difference = parseInt((now - updateTime) / 3600000 * 60);\n        let timeString = '';\n        \n        if(difference >= 60 && difference < 1440) {\n            timeString += parseInt(difference / 60) + 'h';\n        } else if(difference >= 1440) {\n            timeString += parseInt(difference / 1440) + 'd';\n        } else if(difference <= 0) {\n            timeString = '<1m';\n        } else {\n            timeString = difference + 'm';\n        }\n\n        return timeString;\n    }\n\n    let name = '';\n    if (authorData.firstName.toLowerCase() === 'admin') {\n        name = authorData.firstName;\n    } else {\n        name = authorData.firstName + ' ' + authorData.lastName;\n    }\n\n    return (\n        <div className={classes.PostComment}>\n            <div className={classes.PostComment__Content}>\n                {commentData.index}\n            </div>\n\n            <div className={classes.PostComment__Footer}>\n                <AuthorInfo\n                    userName={name}\n                    userImg={authorData.avatarUrl}\n                />\n\n                <span>{getPostCreateTimeDifference(commentData.updatedAt)}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default PostComment;","import React from 'react';\n\nimport classes from './PostCommentList.module.scss';\nimport PostComment from './PostComment/PostComment';\n\nconst PostCommentList = ({ commentList }) => {\n    return (\n        <div className={classes.PostCommentList}>\n            {commentList.sort((c1, c2) => (new Date(c2.updatedAt)).getTime() - (new Date(c1.updatedAt).getTime())).map((comment, i) => {\n                return <PostComment\n                    key={i}\n                    commentData={comment}\n                />\n            })}\n        </div>\n    )\n}\n\nexport default PostCommentList;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport classes from './Modal.module.scss';\nimport Backdrop from '../UI/Backdrop/Backdrop';\n\nconst Modal = (props) => {\n    const [modalClasses, setModalClasses] = useState([classes.ModalContainer]); // KEEP IT OR LEAVE IT\n\n    useEffect(() => {\n        setModalClasses([classes.ModalContainer]); // KEEP IT OR LEAVE IT\n    }, [props.show]);\n\n    const closeModalHandler = () => {\n        props.closed();\n\n        setModalClasses([classes.ModalContainer, classes.ModalContainer__Closed]); // KEEP IT OR LEAVE IT\n    }\n\n    return (\n        ReactDOM.createPortal(\n            props.show ? (\n                <div className={modalClasses.join(' ')} style={props.customStyle}>\n                    <Backdrop show={props.show} clicked={closeModalHandler} />\n                    <div className={classes.Modal}>\n                        {props.content ?\n                        <div dangerouslySetInnerHTML={{__html: props.content}}></div> :\n                        props.children}\n                    </div>\n                </div>) : null,\n            document.getElementById('modal-root')\n        )\n    );\n}  \n\nexport default Modal;","import React, { useState } from 'react';\n\nimport classes from './CreatePostComment.module.scss';\nimport Modal from '../../../../../../Modal/Modal';\nimport Input from '../../../../../../UI/Input/Input';\nimport Button from '../../../../../../UI/Button/Button';\nimport checkValidity from '../../../../../../../utility/formValidation';\n\nconst CreatePostComment = (props) => {\n    const [postContent, setPostContent] = useState({\n        elementType: 'textarea',\n        elementConfig: {\n            type: 'textarea',\n            placeholder: 'Comment'\n        },\n        label: \"Comment\",\n        validation: {\n            required: true\n        },\n        valid: false,\n        touched: false,\n        value: ''\n    });\n    const [isFormValid, setIsFormValid] = useState(false);\n\n    const onCreatePostModalClosedHandler = () => {\n        props.cancelPostComment(false);\n    }\n\n    const inputChangedHandler = (event) => {\n        const copiedPostContent = { ...postContent };\n\n        copiedPostContent.value = event.target.value;\n        copiedPostContent.valid = checkValidity(copiedPostContent.value, postContent.validation);\n        copiedPostContent.touched = true;\n\n        setIsFormValid(copiedPostContent.valid);\n        setPostContent(copiedPostContent);\n    }\n\n    const formSubmitHandler = (event) => {\n        event.preventDefault();\n\n        const formData = {\n            index: postContent.value\n        };\n\n        if (isFormValid) {\n            props.formSubmitted(formData);\n        }\n    }\n\n    return (\n        <div>\n            <Modal \n                show={props.postCommentEnabled}\n                customStyle={{width: '60rem', height: '37rem'}}\n                closed={onCreatePostModalClosedHandler}>\n                <section className={classes.CreatePostComment}>\n                    <span className={classes.CreatePostComment__Close} onClick={onCreatePostModalClosedHandler}>\n                        &nbsp;\n                    </span>\n\n                    <header className={classes.CreatePostComment__Header}>\n                        <h2>Post a comment</h2>\n                    </header>\n\n                    <form className={classes.CreatePostComment__Form} onSubmit={formSubmitHandler}>\n                        <Input \n                            elementType={postContent.elementType}\n                            elementConfig={postContent.elementConfig}\n                            label={postContent.label}\n                            value={postContent.value}\n                            touched={postContent.touched}\n                            isValid={postContent.valid}\n                            changed={(event) => inputChangedHandler(event)}\n                        />\n\n                        <div className={classes.CreatePostComment__Form__Cta}>\n                            <Button\n                                disabled={!isFormValid}\n                            >Post</Button>\n                        </div>\n                    </form>\n                </section>\n            </Modal>\n        </div>\n    )\n}\n\nexport default CreatePostComment;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './PostDetail.module.scss';\nimport Button from '../../../UI/Button/Button';\nimport AuthorInfo from './AuthorInfo/AuthorInfo';\nimport PostCommentList from './PostCommentList/PostCommentList';\nimport CreatePostComment from '../PostDetail/PostCommentList/PostComment/CreatePostComment/CreatePostComment';\n\nconst PostDetail = (props) => {\n    const [isPostComment, setIsPostComment] = useState(false);\n\n    let timeout;\n\n    useEffect(() => {\n        return () => {\n            clearTimeout(timeout);\n        }\n    }, [timeout]);\n\n    const getPostCreateTimeDifference = (time) => {\n        let now = (new Date()).getTime();\n        let updateTime = (new Date(time)).getTime();\n        let difference = parseInt((now - updateTime) / 3600000 * 60);\n        let timeString = '';\n        \n        if(difference >= 60 && difference < 1440) {\n            timeString += parseInt(difference / 60) + 'h';\n        } else if(difference >= 1440) {\n            timeString += parseInt(difference / 1440) + 'd';\n        } else if(difference <= 0) {\n            timeString = '<1m';\n        } else {\n            timeString = difference + 'm';\n        }\n\n        return timeString;\n    }\n\n    const formatPostCreatedDate = (time) => {\n        let date = new Date(time);\n        \n        return `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()} | ${date.getHours()}:${date.getMinutes()}`;\n    }\n\n    const togglePostComment = (bool) => {\n        timeout = setTimeout(() => {\n            setIsPostComment(bool);\n        }, 200);\n    }\n\n    const formSubmittedHandler = (data) => {\n        const formData = {\n            postId: props.postData._id,\n            ...data\n        };\n\n        props.postCommentSubmit(formData);\n        togglePostComment(false);\n    }\n\n    let pageContent = null;\n    if (Object.prototype.hasOwnProperty.call(props.postData, '_id')) {\n        pageContent = (\n            <section className={classes.PostDetailContainer}>\n                {isPostComment ? <CreatePostComment\n                    postCommentEnabled={isPostComment}\n                    cancelPostComment={togglePostComment}\n                    formSubmitted={formSubmittedHandler}\n                /> : null}\n\n                <div className={classes.PostDetail}>\n                    <div className={classes.PostDetail__Header}>\n                        <div className={classes.PostDetail__Header__Title}>\n                            <h2>\n                                {props.postData.title}\n                            </h2>\n                        </div>\n\n                        <div className={classes.PostDetail__Header__TimeContainer}>\n                            <span className={classes.PostDetail__Header__TimeContainer__Time}>\n                                {getPostCreateTimeDifference(props.postData.createdAt)}\n                            </span>\n\n                            <span className={classes.PostDetail__Header__TimeContainer__Tooltip}>\n                                {formatPostCreatedDate(props.postData.createdAt)}\n                            </span>\n                        </div>\n                    </div>\n\n                    <div className={classes.PostDetail__Body}>\n                        {props.postData.content}\n                    </div>\n                    \n                    <div className={classes.PostDetail__Cta}>\n                        <AuthorInfo\n                            userName={props.postData.author.status !== 'admin' ? props.postData.author.firstName + ' ' + props.postData.author.lastName : props.postData.author.firstName}\n                            userImg={props.postData.author.avatarUrl}\n                        />\n\n                        {props.isAuth ? \n                        <div className={classes.PostDetail__Cta__Buttons}>\n                            { props.userId === props.postData.author._id || props.status === 'admin' ? <>\n                                <Button\n                                    btnType='BtnDanger'\n                                    btnSize='BtnSmall'\n                                    clicked={() => props.postDeleted(props.postData._id)}>Delete</Button>\n                                <Button\n                                    btnType='BtnSecondary'\n                                    btnSize='BtnSmall'\n                                    clicked={() => props.postEdited(props.postData._id)}>Edit</Button>\n                                </> : null\n                            }\n                        \n                            <Button\n                                btnType='BtnPrimary'\n                                btnSize='BtnSmall'\n                                clicked={() => togglePostComment(true)}>Reply</Button>\n                        </div> : null}\n                    </div>\n                </div>\n\n                <div className={classes.PostComments}>\n                    <h1>Comments</h1>\n\n                    {props.postData.responses.length > 0 ?\n                        <PostCommentList commentList={props.postData.responses} /> :\n                        <span className={classes.PostComments__NoCom}>No comments posted yet!</span>}\n                </div>\n\n                <div className={classes.PostDetailContainer__Cta}>\n                    <Button\n                        btnType='BtnDanger'\n                        btnSize='BtnSmall'\n                        clicked={props.onBackButtonPressed}>Back</Button>\n                </div>\n            </section>\n        );\n    }\n\n    return (\n        <>\n            {pageContent}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.isAuth,\n        userId: state.userId,\n        status: state.userStatus\n    }\n}\n\nexport default connect(mapStateToProps, null)(PostDetail);","import React from 'react';\n\nimport classes from './PaginationRange.module.scss';\n\nconst PaginationRange = (props) => {\n\n    return (\n        <div className={classes.PaginationRange}>\n            {props.itemPerPage * props.currentPage + 1} - {(props.itemPerPage * (props.currentPage + 1)) > props.maxItem ? props.maxItem : props.itemPerPage * (props.currentPage + 1)} of {props.maxItem}\n        </div>\n    )\n}\n\nexport default PaginationRange;","import React from 'react';\n\nimport svg from '../../../assets/images/sprite.svg';\nimport classes from './PrevButton.module.scss';\n\nconst PrevButton = (props) => {\n    return (\n        <button className={classes.PrevButton} disabled={props.disabled} onClick={props.clicked}>\n            <svg className={classes.ArrowIcon}>\n                <use xlinkHref={`${svg}#icon-cheveron-left`}></use>\n            </svg>\n        </button>\n    )\n}\n\nexport default PrevButton;","import React from 'react';\n\nimport svg from '../../../assets/images/sprite.svg';\nimport classes from './NextButton.module.scss';\n\nconst PrevButton = (props) => {\n    return (\n        <button className={classes.NextButton} disabled={props.disabled} onClick={props.clicked}>\n            <svg className={classes.ArrowIcon}>\n                <use xlinkHref={`${svg}#icon-cheveron-right`}></use>\n            </svg>\n        </button>\n    )\n}\n\nexport default PrevButton;","import React, { useState, useEffect } from 'react';\n\nimport classes from './Paginator.module.scss';\nimport SelectInput from '../UI/SelectInput/SelectInput';\nimport PaginationRange from './PaginationRange/PaginationRange';\nimport PrevButton from './PrevButton/PrevButton';\nimport NextButton from './NextButton/NextButton';\n\nconst Paginator = (props) => {\n    const [itemPerPage, setItemPerPage] = useState(props.itemPerPage[0]);\n    const [currentPage, setCurrentPage] = useState(props.currentPage);\n    const [pageCount, setPageCount] = useState(Math.floor((props.maxItemCount / props.itemPerPage[0])) + ((props.maxItemCount % props.itemPerPage[0] === 0) ? 0 : 1));\n    \n    useEffect(() => {\n        setCurrentPage(props.currentPage);\n    }, [props.currentPage]);\n    \n    useEffect(() => {\n        setPageCount(Math.floor((props.maxItemCount / props.itemPerPage[0])) + ((props.maxItemCount % props.itemPerPage[0] === 0) ? 0 : 1));\n    }, [props.maxItemCount, props.itemPerPage]);\n\n    const onValueSelectedHandler = (value) => {\n        setItemPerPage(value);\n        setCurrentPage(0);\n\n        // value => item per page\n        let pageNumber = Math.floor((props.maxItemCount / value) + ((props.maxItemCount % value === 0) ? 0 : 1));\n        setPageCount(pageNumber);\n\n        props.pagination({ perPage: value, currentPage: 0, pageCount: pageNumber });\n    }\n\n    const onPrevPageHandler = () => {\n        setCurrentPage(currentPage => currentPage - 1 < 0 ? 0 : currentPage - 1);\n\n        props.pagination({ perPage: itemPerPage, currentPage: currentPage - 1 < 0 ? 0 : currentPage - 1, pageCount: pageCount });\n    }\n\n    const onNextPageHandler = () => {\n        setCurrentPage(currentPage => currentPage + 1 > pageCount - 1 ? pageCount - 1 : currentPage + 1);\n\n        props.pagination({ perPage: itemPerPage, currentPage: currentPage + 1 > pageCount - 1 ? pageCount - 1 : currentPage + 1, pageCount: pageCount });\n    }\n\n    return (\n        <div className={classes.Paginator}>\n            <SelectInput\n                label={'Items per page: '}\n                itemPerPage={itemPerPage}\n                itemPerPageList={props.itemPerPage}\n                valueSelected={onValueSelectedHandler}\n            />\n            \n            <PaginationRange \n                itemPerPage={itemPerPage}\n                currentPage={currentPage}\n                pageCount={pageCount}\n                maxItem={props.maxItemCount} />\n\n            <div className={classes.PaginatorButtons}>\n                <PrevButton clicked={onPrevPageHandler} disabled={!props.hasPrevPage} />\n                \n                <NextButton clicked={onNextPageHandler} disabled={!props.hasNextPage} />\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Paginator;","import React, { useState, useEffect } from 'react';\n\nimport classes from './CourseForum.module.scss';\nimport CreatePost from './CreatePost/CreatePost';\nimport PostList from './PostList/PostList';\nimport PostDetail from './PostList/PostDetail/PostDetail';\nimport Button from '../UI/Button/Button';\nimport Paginator from '../Paginator/Paginator';\n\nconst CourseForum = (props) => {\n    // const [courseForumData, setCourseForumData] = useState({});\n    const [paginationState, setPaginationState] = useState({\n        perPage: 3,\n        pageCount: 2,\n        currentPage: 0,\n        hasNextPage: true,\n        hasPrevPage: false,\n        startIndex: 0,\n        endIndex: 0\n    });\n    const [showPostDetail, setShowPostDetail] = useState(false);\n    const [selectedPost, setSelectedPost] = useState(null);\n    const [isPostEditMode, setIsPostEditMode] = useState(false);\n    const [postToEdit, setPostToEdit] = useState(null);\n\n    // const forumData = require('../../assets/course_forum_poc.json');\n    // const forumPostList = (forumData || {}).postList || [];\n    const forumPostList = props.forumData.posts || [];\n\n    // console.log(props.forumData)\n\n    useEffect(() => {\n        if (selectedPost !== null)\n            setSelectedPost(props.forumData.posts.find(post => post._id === selectedPost._id))\n    }, [props.forumData.posts, selectedPost]);\n\n    useEffect(() => {\n        // Initial state\n        setPaginationState({\n            perPage: 3,\n            pageCount: Math.floor((forumPostList.length / 3)) + ((forumPostList.length % 3 === 0) ? 0 : 1),\n            currentPage: 0,\n            hasNextPage: 3 * 1 < forumPostList.length,\n            hasPrevPage: false,\n            startIndex: 0,\n            endIndex: 3\n        });\n    }, [forumPostList.length]);\n    \n    const onPaginationChangeHandler = (paginationData) => {\n        // console.log(paginationData); // TODO REMOVE\n        \n        let currentPage = paginationData.currentPage;\n        let hasNextPage = paginationData.perPage * (paginationData.currentPage + 1) < forumPostList.length;\n        let hasPrevPage = paginationData.currentPage > 0;\n        let startIndex = paginationData.currentPage * paginationData.perPage;\n        let endIndex = startIndex + paginationData.perPage >= forumPostList.length ? forumPostList.length : startIndex + paginationData.perPage;\n\n        setPaginationState(prevState => {\n            return {\n                ...prevState,\n                currentPage,\n                hasPrevPage,\n                hasNextPage,\n                startIndex,\n                endIndex\n            }\n        })\n    }\n\n    const onPostSelectedHandler = (postId) => {\n        let selectedPost = forumPostList.find(post => post._id === postId);\n\n        setSelectedPost(selectedPost);\n        setShowPostDetail(true);\n    }\n\n    const onBackButtonPressedHandler = () => {\n        setSelectedPost(null);\n        setShowPostDetail(false);\n    }\n\n    const onCreatePostPressedHandler = () => {\n        setPostToEdit(null);\n        setIsPostEditMode(false);\n        props.toggleCreatePostMode(true);\n    }\n\n    const onCreatePostCancelledHandler = () => {\n        props.toggleCreatePostMode(false);\n    }\n\n    const onCreatePostHandler = (data) => {\n        props.forumPostCreated(data);\n    }\n\n    const onEditPostHandler = (data) => {\n        props.forumPostEdited({ ...data, postId: postToEdit._id });\n    }\n\n    const onPostDeleted = (postId) => {\n        props.onPostDeleted(postId);\n\n        setSelectedPost(null);\n        setShowPostDetail(false);\n    }\n\n    const onPostEdit = (postId) => {\n        let editPost = forumPostList.find(post => post._id === postId);\n\n        // TODO: I may have to change this\n        if (typeof editPost !== 'undefined') {\n            setSelectedPost(null);\n            setShowPostDetail(false);\n            setPostToEdit(editPost);\n            setIsPostEditMode(true);\n            props.toggleCreatePostMode(true);\n        }\n    }\n\n    let pageContent = !showPostDetail ? (<>\n        {!props.createPostMode ? <>\n            <PostList\n                postList={forumPostList.slice(paginationState.startIndex, paginationState.endIndex)}\n                onPostSelected={onPostSelectedHandler}\n            />\n\n            <div className={classes.CourseForum__Cta}>\n                <Button clicked={onCreatePostPressedHandler}>Create a Post</Button>\n\n                <Paginator \n                    itemPerPage={[3, 5, 10]}\n                    maxItemCount={forumPostList.length}\n                    pagination={onPaginationChangeHandler}\n                    currentPage={paginationState.currentPage}\n                    hasNextPage={paginationState.hasNextPage}\n                    hasPrevPage={paginationState.hasPrevPage}\n                />\n            </div>\n        </> : <CreatePost \n            createPost={onCreatePostHandler}\n            createPostCancel={onCreatePostCancelledHandler}\n            isEditMode={isPostEditMode}\n            editFormFields={postToEdit}\n            editPost={onEditPostHandler}\n        />}\n        </>) : \n        <PostDetail\n            postData={selectedPost}\n            onBackButtonPressed={onBackButtonPressedHandler}\n            postDeleted={onPostDeleted}\n            postEdited={onPostEdit}\n            postCommentSubmit={props.postCommentSubmitted}\n        />;\n\n    return (\n        <section className={classes.CourseForum}>\n            {pageContent}\n        </section>\n    )\n}\n\nexport default CourseForum;","import React, { Fragment } from 'react';\n\nimport classes from './CourseMenu.module.scss';\nimport Button from '../UI/Button/Button';\n\nconst CourseMenu = (props) => {\n\n    const onActivityEnabled = (type) => {\n        props.onCourseActivityEnabled(type);\n    }\n\n    console.log(props.courseSections)\n\n    return (\n        <Fragment>\n            <div className={classes.CourseMenu__Intro} dangerouslySetInnerHTML={{__html: props.courseIntro}}></div>\n\n            <div className={classes.CourseMenu__Misc}>\n                {typeof props.courseQuiz !== 'undefined' ?\n                    <Button clicked={() => onActivityEnabled('quiz')}>Quiz</Button> : null}\n                <Button clicked={() => onActivityEnabled('questionnaire')}>Questionnaire</Button>\n            </div>\n\n            <div className={classes.CourseMenu__Cta}>\n                {\n                    props.courseSections.map((courseSection, index) => {\n                        return <Button key={courseSection._id} clicked={() => props.onSectionSelect(index)}>{courseSection.name}</Button>\n                    })\n                }\n\n\n                {/* <Button clicked={() => props.onSectionSelect(0)}>1. Hafta</Button>\n                <Button disabled={true}>2. Hafta</Button>\n                <Button disabled={true}>3. Hafta</Button> */}\n            </div>\n        </Fragment>\n    );\n}\n\nexport default CourseMenu;","import React from 'react';\n\nimport classes from './CourseSectionSidebarItem.module.scss';\nimport svg from '../../../../assets/images/sprite.svg';\n\nconst CourseSectionSidebarItem = props => {\n    let data = props.data;\n    let listContent = data.contentTitleArr.map((subsubsection, index) => {\n        return <li key={subsubsection}>\n            <span onClick={() => {props.onSubSubSectionClicked(index)}}>{subsubsection}</span>\n\n            {props.currentActive === index && props.isSectionActive ?\n                <svg className={classes.CourseSectionSidebarItem__List__Icon}>\n                    <use xlinkHref={`${svg}#icon-arrow-thick-left`}></use>\n                </svg> : null}\n        </li>;\n    });\n\n    return (\n        <div className={classes.CourseSectionSidebarItem}>\n            <div className={classes.CourseSectionSidebarItem__Main} style={props.isSectionActive ? {'fontWeight': '700'} : {}}>\n                {data.name}\n            </div>\n\n            <ul className={classes.CourseSectionSidebarItem__List}>\n                {listContent}\n            </ul>\n        </div>\n    );\n}\n\nexport default CourseSectionSidebarItem;","import React from 'react';\n\nimport classes from './CourseSubSectionSidebar.module.scss';\nimport CourseSectionSidebarItem from './CourseSectionSidebarItem/CourseSectionSidebarItem';\n\nconst CourseSubSectionSidebar = props => {\n    let contentData = props.subSectionNavigationData;\n\n    console.log(contentData)\n\n    const onSubSubSectionClickedHandler = (subsubSectionIndex, activeSubSectionIndex) => {\n        props.newSubSectionSelected([activeSubSectionIndex, subsubSectionIndex]);\n    }\n\n    let content = contentData.subSectionMap.map((section, index) => {\n        return <CourseSectionSidebarItem\n            key={section.id}\n            data={section}\n            isSectionActive={contentData.subSectionIndex === index}\n            currentActive={contentData.subSectionPageIndex}\n            onSubSubSectionClicked={(subsubSectionIndex) => onSubSubSectionClickedHandler(subsubSectionIndex, index)}\n        />;\n    });\n\n    return (\n        <div className={classes.CourseSubSectionSidebar}>\n            {content}\n        </div>\n    );\n}\n\nexport default CourseSubSectionSidebar;","import React from 'react';\n\nimport svg from '../../../assets/images/sprite.svg';\nimport classes from './CourseSubSection.module.scss';\nimport Button from '../../UI/Button/Button';\nimport CourseSubSectionSidebar from '../CourseSubSectionSidebar/CourseSubSectionSidebar';\n\nconst CourseSubSection = (props) => {\n    let subSectionData = props.subSectionData;\n    // console.log(subSectionData)\n    // console.log(((subSectionData || {}).content || [])[props.subSectionPageIndex] || 'END');\n\n    return (\n        <section className={classes.CourseSubSection}>\n            <CourseSubSectionSidebar\n                subSectionNavigationData={props.subSectionSideBarData}\n                newSubSectionSelected={props.onNewSubSectionSelected}\n            />\n\n            <div className={classes.CourseSubSection__Content}>\n                <header className={classes.CourseSubSection__Content__Header}>\n                    <h1>{subSectionData.name}</h1>\n                </header>\n\n                <div dangerouslySetInnerHTML={{__html: ((subSectionData || {}).content || [])[props.subSectionPageIndex].index}}></div>\n\n                <div className={classes.CourseSubSection__Content__Cta}>\n                    <Button clicked={props.onBackClicked}>\n                        <svg className={classes.CourseSubSection__ButtonIcon}>\n                            <use xlinkHref={`${svg}#icon-arrow-thick-left`}></use>\n                        </svg>\n                    </Button>\n                    \n                    {props.showNext ? <Button clicked={props.onNextClicked}>\n                        <svg className={classes.CourseSubSection__ButtonIcon}>\n                            <use xlinkHref={`${svg}#icon-arrow-thick-right`}></use>\n                        </svg>\n                    </Button> : null}\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default CourseSubSection;","import React, { useState } from 'react';\n\nimport svg from '../../assets/images/sprite.svg';\nimport classes from './CourseSection.module.scss';\nimport CourseSubSection from './CourseSubSection/CourseSubSection';\n\nconst CourseSection = (props) => {\n    const [isAtIntro, setIsAtIntro] = useState(true);\n    const [subSectionIndex, setSubSectionIndex] = useState(0);\n    const [subSectionPageIndex, setSubSectionPageIndex] = useState(0); // Signifies where we are in the subsection\n\n    let sectionData = props.sectionData;\n\n    // console.log(sectionData.subsections.map(subsection=> {\n    //     return {\n    //         id: subsection._id,\n    //         name: subsection.name,\n    //         contentTitleArr: subsection.content.map(content => content.title)\n    //     };\n    // }));\n\n    let totalSectionCount = (sectionData.subsections || []).length;\n    let currentSectionLength = (((sectionData.subsections || [])[subSectionIndex] || {}).content || []).length;\n\n    const resetToSectionMenu = () => {\n        setIsAtIntro(true);\n        setSubSectionIndex(0);\n        setSubSectionPageIndex(0);\n    }\n\n    const goToNextSubSection = () => {\n        if (subSectionIndex + 1 >= totalSectionCount) {\n            return;\n        } else {\n            setSubSectionIndex(subSectionIndex + 1);\n            setSubSectionPageIndex(0);\n        }\n    }\n\n    const goToPrevSubSection = () => {\n        if (subSectionIndex - 1 < 0) {\n            resetToSectionMenu();\n        } else {\n            let prevSubSectionLength = (((sectionData.subsections || [])[subSectionIndex - 1] || {}).content || []).length;\n\n            setSubSectionIndex(subSectionIndex - 1);\n            setSubSectionPageIndex(prevSubSectionLength - 1);\n        }\n    }\n\n    const onSubSectionSelectedHandler = (key) => {\n        setIsAtIntro(false);\n        setSubSectionIndex(key);\n        setSubSectionPageIndex(0);\n    }\n\n    // Method to handle when back button in the sub-section is clicked\n    const onBackClickedHandler = () => {\n        if(subSectionPageIndex <= 0) {\n            goToPrevSubSection();\n        } else {\n            setSubSectionPageIndex(subSectionPageIndex - 1);\n        }\n    }\n\n    // Method to handle when next button in the sub-section is clicked\n    const onNextClickedHandler = () => {\n        if(subSectionPageIndex + 1 >= currentSectionLength) {\n            // GO TO NEXT SUB SECTION\n            goToNextSubSection();\n        } else {\n            // GO TO NEXT PAGE IN THE SAME SUB SECTION\n            setSubSectionPageIndex(subSectionPageIndex + 1);\n        }\n    }\n\n    const onNewSubSectionSelectedHandler = (newIndices) => {\n        setSubSectionIndex(newIndices[0]);\n        setSubSectionPageIndex(newIndices[1]);\n    }\n\n    let subSectionNavigationData = {\n        subSectionPageIndex: subSectionPageIndex,\n        subSectionIndex: subSectionIndex,\n        subSectionMap: sectionData.subsections.map(subsection=> {\n            return {\n                id: subsection._id,\n                name: subsection.name,\n                contentTitleArr: subsection.content.map(content => content.title)\n            };\n        })\n    }\n\n    return (\n        <div className={classes.Section}>\n            <button className={classes.BackMenu__Button} onClick={props.onBackToMainMenu}>\n                <svg className={classes.BackMenu__Icon}>\n                    <use xlinkHref={`${svg}#icon-list`}></use>\n                </svg>\n            </button>\n            \n            <div className={classes.Section__Container}>\n                <header className={classes.Section__Title}>\n                    <h1>{sectionData.name}</h1>\n                </header>\n\n                {isAtIntro ? <section className={classes.Section__Content}>\n                    <h3>Konu Dağılımı</h3>\n                    \n                    <ul className={classes.Section__List}>\n                        {sectionData.subsections.map((section, i) => {\n                            return <li key={i} className={classes.Section__ListItem}>\n                                <span>\n                                    {section.name}\n                                </span>\n                                \n                                <button className={classes.Section__ListButton} onClick={() => onSubSectionSelectedHandler(i)}>\n                                    <svg className={classes.Section__ListIcon}>\n                                        <use xlinkHref={`${svg}#icon-play`}></use>\n                                    </svg>\n                                </button>\n                            </li>;\n                        })}\n                    </ul>\n                </section> : <CourseSubSection\n                    onNewSubSectionSelected={onNewSubSectionSelectedHandler}\n                    subSectionSideBarData={subSectionNavigationData}\n                    subSectionData={sectionData.subsections[subSectionIndex] || {}}\n                    subSectionPageIndex={subSectionPageIndex}\n                    onBackClicked={onBackClickedHandler}\n                    onNextClicked={onNextClickedHandler}\n                    showNext={!(subSectionIndex + 1 >= totalSectionCount && subSectionPageIndex + 1 >= currentSectionLength)}\n                />}\n            </div>\n        </div>\n    );\n}\n\nexport default CourseSection;","import React from 'react';\n\nimport classes from './QuizIntro.module.scss';\nimport Button from '../../UI/Button/Button';\n\nconst QuizIntro = (props) => {\n    return (\n        <section className={classes.QuizIntro}>\n            <header className={classes.QuizIntro__Header}>\n                <h1>\n                    {props.quizTitle}\n                </h1>\n\n                <div>\n                    Henüz bu quizi tamamlamadınız.\n                </div>\n            </header>\n            \n            <div className={classes.QuizIntro__Cta}>\n                <Button clicked={props.onQuizStarted}>\n                    BAŞLA!\n                </Button>\n            </div>\n        </section>\n    );\n}\n\nexport default QuizIntro;","import React from 'react';\n\nimport svg from '../../../../assets/images/sprite.svg';\nimport classes from './QuestionResult.module.scss';\n\nconst QuestionResult = (props) => {\n    let iconName = props.isCorrect ? 'checkmark-outline' : 'close-outline';\n    let classColor = props.isCorrect ? classes.QuestionResult__Icon__Correct : classes.QuestionResult__Icon__Incorrect;\n\n    return (\n        <div className={classes.QuestionResult}>\n            <span className={classes.QuestionResult__QuestionNumber}>\n                {props.questionNumber}\n            </span>\n            <svg className={[classes.QuestionResult__Icon, classColor].join(' ')}>\n                <use xlinkHref={`${svg}#icon-${iconName}`}></use>\n            </svg>\n        </div>\n    )\n}\n\nexport default QuestionResult;","import React from 'react';\n\nimport classes from './QuizEnd.module.scss';\nimport QuestionResult from './QuestionResult/QuestionResult';\n\nconst QuizEnd = (props) => {\n    const answers = props.answers || [];\n\n    let visualResult = answers.map((answer, i) => {\n        return (\n            <QuestionResult\n                key={i}\n                isCorrect={answer}\n                questionNumber={i + 1}\n            />\n        )\n    });\n\n    return (\n        <section className={classes.QuizEnd}>\n            <header className={classes.QuizEnd__Header}>\n                <h1>\n                    Quiz Sonucu\n                </h1>\n            </header>\n\n            <div className={classes.QuizEnd__Content}>\n                <div className={classes.QuizEnd__Content__Text}>\n                    Quizi tamamladınız.\n                </div>\n\n                <div className={classes.QuizEnd__Content__Visual}>\n                    {visualResult}\n                </div>\n            </div>\n\n            \n        </section>\n    )\n}\n\nexport default QuizEnd;","import React, { useRef, useEffect } from 'react';\n\nimport classes from './RadioButton.module.scss';\n\nconst RadioButton = (props) => {\n    let radioRef = useRef(null);\n\n    useEffect(() => {\n        radioRef.current.checked = false;\n    }, [props.label]);\n\n    return (\n        <div className={classes.RadioGroup}>\n            <input type=\"radio\" className={classes.RadioButton__Input} id={props.id} name={props.name} ref={radioRef} />\n            <label htmlFor={props.id} className={classes.RadioButton__Label} onClick={props.selected}>\n                <span className={classes.RadioButton}></span>\n                <span>{props.label}</span>\n            </label>\n        </div>\n    )\n}\n\nexport default RadioButton;","import React from 'react';\nimport Lottie from 'react-lottie';\n\nimport classes from './SuccessCheck.module.scss';\n\nconst SuccessCheck = (props) => {\n\n    const animationData = require(`../../../../assets/anim/${ props.isSuccess ? 'success_check.json' : 'failure_cross.json' }`);\n    const defaultOptions = {\n        loop: false,\n        autoplay: true, \n        animationData: animationData,\n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n\n    return (\n        <div className={classes.SuccessCheck}>\n            <Lottie \n                options={defaultOptions}\n                height={window.innerWidth > 800 ? 150 : 100}\n                width={window.innerWidth > 800 ? 150 : 100}\n            />\n        </div>\n    )\n}\n\nexport default SuccessCheck;","import React, { useState, useEffect } from 'react';\n\nimport svg from '../../../../assets/images/sprite.svg';\nimport classes from './Question.module.scss';\nimport RadioButton from '../../../UI/RadioButton/RadioButton';\nimport Button from '../../../UI/Button/Button';\nimport SuccessCheck from '../SuccessCheck/SuccessCheck';\nimport Modal from '../../../Modal/Modal';\n\nconst Question = (props) => {\n    const [selectedChoice, setSelectedChoice] = useState(null);\n    const [showCaseModal, setShowCaseModal] = useState(false);\n\n    let timeout;\n\n    useEffect(() => {\n        return () => {\n            clearTimeout(timeout);\n        }\n    }, [timeout]);\n\n    const onChoiceMarkedHandler = (index) => {\n        setSelectedChoice(index)\n    }\n\n    const answerSelected = () => {\n        props.onAnswerSelected(props.questionNumber, selectedChoice);\n        setSelectedChoice(null);\n    }\n\n    const onCaseModalOpenedHandler = () => {\n        timeout = setTimeout(() => {\n            setShowCaseModal(true);\n        }, 200);\n    }\n\n    const onCaseModalClosedHandler = () => {\n        timeout = setTimeout(() => {\n            setShowCaseModal(false);\n        }, 200);\n    }\n\n    return (\n        <div className={classes.Question}>\n            <span className={classes.Question__Number}>\n                {`Q${props.questionNumber}`}\n            </span>\n\n            <Modal\n                show={showCaseModal}\n                customStyle={{width: '100rem', height: '90rem'}}\n                closed={onCaseModalClosedHandler}\n                content={props.questionCase}\n            />\n\n            <div className={classes.Question__Text}>\n                {props.questionText}\n\n                { props.questionType === 'case study' ?\n                    <button onClick={onCaseModalOpenedHandler}>\n                        Senaryo\n\n                        <svg className={classes.Question__Text__CaseIcon}>\n                            <use xlinkHref={`${svg}#icon-redo2`}></use>\n                        </svg>\n                    </button> : null\n                }\n            </div>\n\n            <div className={classes.Question__Choices}>\n                {props.questionChoices.map((choice, index) => {\n                    return <RadioButton \n                        key={`choice${index}`}\n                        id={`choice${index}`}\n                        label={choice.text}\n                        name={`question${props.questionNumber}`}\n                        selected={() => onChoiceMarkedHandler(index)}\n                    />\n                })}\n            </div>\n\n            <div className={classes.Question__Cta}>\n                {props.answered ? <SuccessCheck isSuccess={props.success} /> : null}\n                <Button btnType=\"BtnDanger\" clicked={answerSelected} disabled={selectedChoice === null}>\n                    <span className={classes.Question__Select}>\n                        <span>\n                            Select\n                        </span>\n                        <svg className={classes.Question__Select__Icon}>\n                            <use xlinkHref={`${svg}#icon-checkmark`}></use>\n                        </svg>\n                    </span>\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Question;","import React from 'react';\n\nimport classes from './ProgressBar.module.scss';\n\nconst ProgressBar = (props) => {\n\n    let progress = {\n        width: `${props.questionNumber * (100 / props.questionAmount)}%`,\n        borderTopRightRadius: props.questionNumber === props.questionAmount ? '5px' : '0px',\n        borderBottomRightRadius: props.questionNumber === props.questionAmount ? '5px' : '0px'\n    };\n\n    return (\n        <div className={classes.ProgressBar}>\n            <div className={classes.ProgressBar__Background}></div>\n            <div className={classes.ProgressBar__Foreground} style={progress}></div>\n        </div>\n    )\n}\n\nexport default ProgressBar;","import React, { useState, useEffect, useRef } from 'react';\n\nimport classes from './QuizContent.module.scss';\nimport Question from './Question/Question';\nimport ProgressBar from '../../ProgressBar/ProgressBar';\n\nconst QuizContent = (props) => {\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [success, setSuccess] = useState(false);\n    const [isQuestionAnswered, setIsQuestionAnswered] = useState(false);\n\n    let timeout;\n    const questionAmount = props.questionAmount;\n    const questionList = props.questions;\n    let questionAnswerList = useRef([]);\n\n    useEffect(() => {\n        return () => {\n            clearTimeout(timeout);\n        }\n    }, [timeout]);\n\n    const onAnswerSelectedHandler = (answeredQuestionNumber, choiceIndex) => {\n        let isCorrect = questionList[answeredQuestionNumber - 1].choices[choiceIndex].isCorrect;\n\n        setSuccess(isCorrect);\n        setIsQuestionAnswered(true);\n        questionAnswerList.current.push(isCorrect);\n\n        if(currentQuestion < questionAmount - 1) {\n            // Next question\n            timeout = setTimeout(() => {\n                setCurrentQuestion(currentQuestion => currentQuestion + 1);\n                setSuccess(false);\n                setIsQuestionAnswered(false);\n            }, 2000);\n        } else {\n            // Quiz is finished\n            timeout = setTimeout(() => {\n                props.onQuizEnd(questionAnswerList.current);\n            }, 2000);\n        }\n    }\n\n    return (\n        <>\n            <ProgressBar questionAmount={questionAmount} questionNumber={currentQuestion+1} />\n            <section className={classes.QuizContent}>\n                <Question\n                    questionNumber={currentQuestion + 1}\n                    questionText={questionList[currentQuestion].text}\n                    questionChoices={questionList[currentQuestion].choices}\n                    questionType={questionList[currentQuestion].type}\n                    questionCase={questionList[currentQuestion].case || ''}\n                    onAnswerSelected={onAnswerSelectedHandler}\n                    success={success}\n                    answered={isQuestionAnswered}\n                />\n            </section>\n        </>\n    )\n}\n\nexport default QuizContent;","import React, { useState } from 'react';\n\nimport classes from './QuizContainer.module.scss';\nimport Button from '../UI/Button/Button';\nimport QuizIntro from './QuizIntro/QuizIntro';\nimport QuizEnd from './QuizEnd/QuizEnd';\nimport QuizContent from './QuizContent/QuizContent';\n\nconst QuizContainer = (props) => {\n    const [isAtQuizIntro, setIsAtQuizIntro] = useState(true);\n    const [isQuizFinished, setIsQuizFinished] = useState(false);\n    const [quizResultData, setQuizResultData] = useState([]);\n\n    // const content = require('../../assets/quiz_poc.json');\n    const quizData = {\n        ...props.quizData,\n        numberOfQuestions: props.quizData.questions.length\n    };\n\n    const onQuizStartedHandler = () => {\n        setIsAtQuizIntro(false);\n    }\n\n    const onQuizFinishedHandler = (quizReport) => {\n        setQuizResultData(quizReport);\n\n        setIsQuizFinished(true);\n    }\n\n    return (\n        <div className={classes.Quiz}>\n            <div className={classes.Quiz__Exit}>\n                <Button btnType=\"BtnDanger\" clicked={props.onQuizExited}>\n                    <span>\n                        &nbsp;\n                    </span>\n                </Button>\n            </div>\n\n            {isAtQuizIntro ?\n                <QuizIntro\n                    onQuizStarted={onQuizStartedHandler}\n                    quizTitle={(quizData || {}).name || ''}\n                /> :\n                !isQuizFinished ? <QuizContent\n                    questionAmount={(quizData || {}).numberOfQuestions || 0}\n                    questions={(quizData || {}).questions || []}\n                    onQuizEnd={onQuizFinishedHandler}\n                /> : <QuizEnd answers={quizResultData} />\n            }\n        </div>\n    )\n}\n\nexport default QuizContainer;","import React from 'react';\n\nimport classes from './Intro.module.scss';\nimport Button from '../../UI/Button/Button';\n\nconst Intro = (props) => {\n    return (\n        <section className={classes.Intro}>\n            <header className={classes.Intro__Header}>\n                <h1>\n                    Temel Pediyatrik Deformite Eğitim Gereksinimleri Anketi\n                </h1>\n\n                <div>\n                    Henüz bu anketi tamamlamadınız.\n                </div>\n            </header>\n            \n            <div className={classes.Intro__Cta}>\n                <Button clicked={props.onQuestionnaireStarted}>\n                    BAŞLA!\n                </Button>\n            </div>\n        </section>\n    )\n}\n\nexport default Intro;","import React from 'react';\nimport Lottie from 'react-lottie';\n\nimport classes from './Finish.module.scss';\n\nconst Finish = () => {\n    const animationData = require('../../../assets/anim/success_check.json');\n    const defaultOptions = {\n        loop: false,\n        autoplay: true, \n        animationData: animationData,\n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n\n    return (\n        <section className={classes.Finish}>\n            <header>\n                <h2>Thank you!</h2>\n            </header>\n\n            <Lottie \n                options={defaultOptions}\n                height={window.innerWidth > 800 ? 150 : 100}\n                width={window.innerWidth > 800 ? 150 : 100}\n            />\n        </section>\n    );\n}\n\nexport default Finish;","import React from 'react';\n\nimport classes from './MultipleChoiceQuestion.module.scss';\nimport RadioButton from '../../../UI/RadioButton/RadioButton';\n\nconst MultipleChoiceQuestion = (props) => {\n    const { questionData } = props;\n\n    return (\n        <div className={classes.MultipleChoiceQuestion}>\n            <div className={classes.MultipleChoiceQuestion__Text}>\n                {questionData.text}\n            </div>\n\n            <div className={classes.MultipleChoiceQuestion__Choices}>\n                {questionData.choices.map((choice, index) => {\n                    return <RadioButton\n                        id={'question' + questionData.questionNumber + '' + index}\n                        key={'question' + questionData.questionNumber + '' + index}\n                        name={'question' + questionData.questionNumber}\n                        label={choice}\n                        selected={() => props.answerSelected(index)}\n                    />;\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default MultipleChoiceQuestion;","import React from 'react';\n\nimport classes from './SliderQuestion.module.scss';\n\nconst SliderQuestion = props => {\n    return (\n        <div className={classes.SliderQuestion}>\n            <div className={classes.SliderQuestion__Text}>\n                {props.sliderLabel}\n            </div>\n\n            <div className={classes.SliderQuestion__Slider}>\n                <input\n                    className={classes.SliderQuestion__Slider__Input}\n                    type=\"range\"\n                    min={props.sliderRange[0] || 0}\n                    max={props.sliderRange[1] || 100}\n                    step={props.sliderStep || 5}\n                    value={props.value}\n                    onMouseUp={props.focusLost}\n                    onChange={props.sliderChanged}\n                />\n                <span className={classes.SliderQuestion__Slider__Input__Value}>{props.value}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default SliderQuestion;","import React from 'react';\n\nimport classes from './SliderCombinationQuestion.module.scss';\nimport SliderQuestion from '../SliderQuestion/SliderQuestion';\n\nconst SliderCombinationQuestion = props => {\n    const data = props.questionData;\n\n    const subSliderChanged = (event, qNumber, i) => {\n        // console.log('SLIDER COMBINATION');\n        // console.log(`The question number: ${qNumber}, slider number: ${i}, slider value: ${event.target.value}`);\n        props.sliderCombinationValueChanged({\n            questionNumber: qNumber,\n            sliderIndex: i,\n            value: event.target.value\n        });\n    }\n\n    let content = data.subSliders.map((subSlider, index) => {\n        return <SliderQuestion\n            key={'question' + data.questionNumber + '' + index}\n            sliderLabel={subSlider.text}\n            sliderRange={props.sliderConfig.range}\n            sliderStep={props.sliderConfig.step}\n            value={subSlider.value}\n            sliderChanged={(event) => subSliderChanged(event, data.questionNumber, index)}\n        />;\n    });\n\n    return (\n        <div className={classes.SliderCombinationQuestion}>\n            <div className={classes.SliderCombinationQuestion__Text}>\n                {data.text}\n            </div>\n\n            <div className={classes.SliderCombinationQuestion__SubSliders}>\n                {content}\n            </div>\n        </div>\n    );\n}\n\nexport default SliderCombinationQuestion;","const updateQuestionaireState = (data) => {\n    let questionConfig = {\n        commonConfig: {\n            questionNumber: data.questionNumber || 0,\n            text: data.text || '',\n            type: data.type || '',\n            elementType: data.elementType || '',\n            validation: data.validation || {}\n        },\n        specificConfig: {\n            value: '',\n            choices: [],\n            sliderRange: [],\n            sliderStep: 10,\n            subText: []\n        }\n    };\n\n    switch(data.type || '') {\n        case 'text':\n        case 'number':\n            questionConfig.specificConfig['value'] = data.value || '';\n            break;\n        case 'multiple-choice':\n            questionConfig.specificConfig['choices'] = data.choices || [];\n            break;\n        case 'slider':\n            questionConfig.specificConfig['value'] = data.value || 0;\n            questionConfig.specificConfig['sliderRange'] = data.sliderRange || [0, 100];\n            questionConfig.specificConfig['sliderStep'] = data.sliderStep || 5;\n            break;\n        case 'slider-combination':\n            questionConfig.specificConfig['value'] = data.subSliders || [];\n            questionConfig.specificConfig['subSliders'] = data.subSliders || [];\n            questionConfig.specificConfig['sliderRange'] = data.sliderRange || [0, 100];\n            questionConfig.specificConfig['sliderStep'] = data.sliderStep || 5;\n            break;\n        default:\n            break;\n    }\n    \n    return questionConfig;\n}\n\nexport default updateQuestionaireState;","import React, { useState, useEffect } from 'react';\n\nimport classes from './Question.module.scss';\nimport Input from '../../UI/Input/Input';\nimport MultipleChoiceQuestion from './MultipleChoiceQuestion/MultipleChoiceQuestion';\nimport SliderQuestion from './SliderQuestion/SliderQuestion';\nimport SliderCombinationQuestion from './SliderCombinationQuestion/SliderCombinationQuestion';\nimport updateQuestionaireState from '../../../utility/updateQuestionaireState';\nimport checkValidity from '../../../utility/formValidation';\n\nconst Question = (props) => {\n    const [questionConfig, setQuestionConfig] = useState({\n        commonConfig: {\n            questionNumber: 0,\n            text: '',\n            type: '',\n            elementType: '',\n            validation: {}\n        },\n        specificConfig: {\n            value: '',\n            choices: [],\n            sliderRange: [],\n            sliderStep: 10,\n            subText: []\n        }\n    });\n    const [isTouched, setIsTouched] = useState(false);\n    const [isValid, setIsValid] = useState(false);\n\n    useEffect(() => {\n        setQuestionConfig({...updateQuestionaireState(props.data)});\n    }, [props.data]);\n\n    const onInputChanged = (event) => {\n        let inputValue = event.target.value;\n        let validationRules = ((questionConfig || {}).commonConfig ||{}).validation || {};\n        let validity = checkValidity(inputValue, validationRules);\n        let copiedQuestionState = { ...questionConfig };\n        let copiedQuestionSpecificConfig = { ...copiedQuestionState.specificConfig };\n\n        copiedQuestionSpecificConfig.value = inputValue;\n\n        copiedQuestionState.specificConfig = copiedQuestionSpecificConfig;\n\n        setIsValid(validity);\n        setIsTouched(true);\n        setQuestionConfig({...copiedQuestionState});\n    }\n\n    const onInputFocusLostHandler = () => {\n        props.questionAnswerFinish({\n            answer: ((questionConfig || {}).specificConfig ||{}).value || '',\n            valid: isValid\n        });\n    }\n\n    const onMultipleChoiceSelectedHandler = (index) => {\n        let copiedQuestionState = { ...questionConfig };\n        let copiedQuestionSpecificConfig = { ...copiedQuestionState.specificConfig };\n        let copiedChoices = [...copiedQuestionSpecificConfig.choices];\n        let selectedChoice = copiedChoices[index];\n\n        if (copiedQuestionSpecificConfig.value === selectedChoice) {\n            return;\n        }\n\n        let validationRules = ((questionConfig || {}).commonConfig ||{}).validation || {};\n        let validity = checkValidity(selectedChoice, validationRules);\n\n        copiedQuestionSpecificConfig.value = selectedChoice;\n\n        copiedQuestionState.specificConfig = copiedQuestionSpecificConfig;\n\n        setIsValid(validity);\n        setIsTouched(true);\n        setQuestionConfig({...copiedQuestionState});\n        \n        props.questionAnswerFinish({\n            answer: selectedChoice,\n            valid: validity\n        });\n    }\n\n    const onSliderCombinationValueChangedHandler = (sliderCombData) => {\n        let copiedQuestionState = { ...questionConfig };\n        let copiedQuestionSpecificConfig = { ...copiedQuestionState.specificConfig };\n\n        let newSubSliderValues = copiedQuestionSpecificConfig.value.map((subSliderValue, index) => {\n            if (sliderCombData.sliderIndex === index) {\n                subSliderValue.value = sliderCombData.value;\n            }\n\n            return subSliderValue;\n        });\n\n        copiedQuestionSpecificConfig.value = newSubSliderValues;\n        copiedQuestionState.specificConfig = copiedQuestionSpecificConfig;\n\n        setQuestionConfig({...copiedQuestionState});\n\n        props.questionAnswerFinish({\n            newSubSliderData: newSubSliderValues\n        });\n    }\n\n    let content = null;\n    let questionData = {};\n\n    switch(questionConfig.commonConfig.type || '') {\n        case 'text':\n        case 'number':\n            content = <Input\n                elementType={questionConfig.commonConfig.elementType}\n                elementConfig={{\n                    type: 'text',\n                    placeholder: questionConfig.commonConfig.text\n                }}\n                label={questionConfig.commonConfig.text}\n                value={questionConfig.specificConfig.value}\n                touched={isTouched}\n                isValid={isValid}\n                changed={(event) => onInputChanged(event)}\n                focusLost={onInputFocusLostHandler}\n            />;\n            break;\n        case 'multiple-choice':\n            questionData = {\n                questionNumber: questionConfig.commonConfig.questionNumber,\n                text: questionConfig.commonConfig.text,\n                choices: questionConfig.specificConfig.choices\n            };\n            content = <MultipleChoiceQuestion\n                questionData={questionData}\n                answerSelected={(answerIndex) => onMultipleChoiceSelectedHandler(answerIndex, questionData.questionNumber)}\n            />;\n            break;\n        case 'slider':\n            content = <SliderQuestion\n                sliderLabel={questionConfig.commonConfig.text}\n                sliderRange={questionConfig.specificConfig.sliderRange}\n                sliderStep={questionConfig.specificConfig.sliderStep}\n                value={questionConfig.specificConfig.value}\n                focusLost={onInputFocusLostHandler}\n                sliderChanged={(event) => onInputChanged(event)}\n            />;\n            break;\n        case 'slider-combination':\n            questionData = {\n                questionNumber: questionConfig.commonConfig.questionNumber,\n                text: questionConfig.commonConfig.text,\n                subSliders: questionConfig.specificConfig.subSliders\n            };\n\n            content = <SliderCombinationQuestion\n                questionData={questionData}\n                sliderConfig={{\n                    range: questionConfig.specificConfig.sliderRange,\n                    step: questionConfig.specificConfig.sliderStep\n                }}\n                sliderCombinationValueChanged={onSliderCombinationValueChangedHandler}\n            />;\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <div className={classes.QuestionWrapper}>\n            {content}\n        </div>\n    );\n}\n\nexport default Question;","import React, { useState, useEffect } from 'react';\n\nimport classes from './Content.module.scss';\nimport Button from '../../UI/Button/Button';\nimport Question from '../Question/Question';\n\nconst Content = (props) => {\n    const [questionnaireQuestions, setQuestionnaireQuestions] = useState([]);\n    const [isFormValid, setIsFormValid] = useState(false);\n\n    useEffect(() => {\n        setQuestionnaireQuestions(props.questions);\n    }, [props.questions]);\n\n    // TODO: fix\n    const onQuestionFinishedHandler = (index, answerData) => {\n        // console.log(`Question #${index}: ${answerData.answer} and its validity status: ${answerData.valid}`);\n\n        // console.log(questionnaireQuestions[index])\n\n        let copiedQuestionArr = [...questionnaireQuestions];\n        let copiedQuestionData = { ...copiedQuestionArr[index] };\n        let questionElementType = copiedQuestionData.type || '';\n\n        switch (questionElementType) {\n            case 'text':\n            case 'multiple-choice':\n            case 'slider':\n                copiedQuestionData.value = answerData.answer;\n                copiedQuestionData.valid = answerData.valid;\n                break;\n            case 'slider-combination':\n                copiedQuestionData.value = answerData.newSubSliderData;\n                break;\n            default:\n                throw new Error('There is no such type of an element!');\n        }\n\n        copiedQuestionArr[index] = copiedQuestionData;\n\n        setQuestionnaireQuestions(copiedQuestionArr);\n\n        let isValid = true;\n\n        copiedQuestionArr.forEach(answeredQuestion => {\n            isValid = isValid && answeredQuestion.valid;\n        });\n\n        setIsFormValid(isValid);\n    }\n\n    const onQuestionnaireSubmitted = () => {\n        let questionnaireData = {\n            userId: '',\n            questionnaireId: '',\n            data: questionnaireQuestions.map(question => {\n                return {\n                    questionNo: question.questionNumber,\n                    type: question.type,\n                    answer: question.value\n                }\n            })\n        }\n        props.questionnaireSubmitted(questionnaireData)\n    }\n\n    let pageContent = questionnaireQuestions.map((question, i) => {\n        return <Question\n            key={i}\n            data={question}\n            questionAnswerFinish={(answer) => onQuestionFinishedHandler(i, answer)}\n        />;\n    });\n\n    return (\n        <>\n            <section className={classes.ContentWrapper}>\n                <div className={classes.Content}>\n                    {pageContent}\n                </div>\n            </section>\n\n            <div className={classes.Content__Cta}>\n                <Button\n                    disabled={!isFormValid}\n                    clicked={onQuestionnaireSubmitted}\n                >Submit</Button>\n            </div>\n        </>\n    )\n}\n\nexport default Content;","import React, { useState } from 'react';\n\nimport classes from './Questionnaire.module.scss';\nimport Intro from './Intro/Intro';\nimport Finish from './Finish/Finish';\nimport Content from './Content/Content';\nimport Button from '../UI/Button/Button';\n\nconst Questionnaire = (props) => {\n    const [isAtQuestionnaireIntro, setIsAtQuestionnaireIntro] = useState(true);\n    const [questionnaireFinished, setQuestionnaireFinished]  = useState(false);\n\n    // TODO: CHANGE\n    const content = require('../../assets/questionnaire_poc.json');\n    const questionnaireQuestions = ((((content || {}).questionnaires || [])[0] || {}).questions || []).map(question => {\n        return {\n            valid: question.type === 'text' || question.type === 'multiple-choice' ? false : true,\n            ...question\n        };\n    });\n    // ~\n\n    const onQuestionnaireStartedHandler = () => {\n        setIsAtQuestionnaireIntro(false);\n    }\n\n    const onQuestionnaireSubmittedHandler = (data) => {\n        console.log(data)\n\n        setQuestionnaireFinished(true);\n    }\n\n    let pageContent = <Intro onQuestionnaireStarted={onQuestionnaireStartedHandler} />;\n\n    if (!isAtQuestionnaireIntro) {\n        pageContent = <Content\n            questions={questionnaireQuestions}\n            questionnaireSubmitted={onQuestionnaireSubmittedHandler} />;\n    }\n\n    if (questionnaireFinished) {\n        pageContent = <Finish />;\n    }\n\n    return (\n        <div className={classes.Questionnaire}>\n            <div className={classes.Questionnaire__Exit}>\n                <Button btnType=\"BtnDanger\" clicked={props.onQuestionnaireExited}>\n                    <span>\n                        &nbsp;\n                    </span>\n                </Button>\n            </div>\n\n            {pageContent}\n        </div>\n    );\n}\n\nexport default Questionnaire;","import React, { Component, Fragment } from 'react';\n\nimport classes from './Course.module.scss';\nimport Loader from '../../components/Loader/Loader';\nimport axiosCourse from '../../axiosUtility/axios-course';\nimport axiosForum from '../../axiosUtility/axios-forum';\nimport axiosPost from '../../axiosUtility/axios-post';\nimport CourseNavigation from '../../components/CourseNavigation/CourseNavigation';\nimport CourseInfo from '../../components/CourseInfo/CourseInfo';\nimport CourseForum from '../../components/CourseForum/CourseForum';\nimport CourseMenu from '../../components/CourseMenu/CourseMenu';\nimport CourseSection from '../../components/CourseSection/CourseSection';\nimport Quiz from '../../components/Quiz/QuizContainer';\nimport Questionnaire from '../../components/Questionnaire/Questionnaire';\n\nclass Course extends Component {\n    state = {\n        courseNavItems: [{\n            name: 'Info',\n            icon: 'library',\n            active: true\n        },\n        {\n            name: 'Course',\n            icon: 'education',\n            active: false\n        },\n        {\n            name: 'Forums',\n            icon: 'bubbles2',\n            active: false\n        }],\n        isLoading: false,\n        courseData: {},\n        courseForum: {},\n        currentWeek: 0,\n        sectionIndex: 0,\n        currentPage: 0,\n        isOnMainMenu: true,\n        isOnQuizMode: false,\n        isOnCreatePostMode: false,\n        isOnQuestionnaireMode: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            isLoading: true\n        });\n        axiosCourse.get('/' + this.props.match.params.id).then(response => {\n            this.setState({\n                isLoading: false\n            });\n            return response.data.course;\n        }).then(fetchedCourse => {\n            this.setState({\n                courseData: fetchedCourse\n            });\n\n            return axiosForum.get('/course/' + fetchedCourse._id);\n        }).then(forumResp => {\n            this.setState({\n                courseForum: forumResp.data.forum\n            });\n        }).catch(error => {\n            console.log(error);\n\n            this.props.history.push('/courses');\n        });\n    }\n\n    onNavigationItemClickedHandler = (index) => {\n        let copiedCourseNavItems = [...this.state.courseNavItems];\n\n        let modifiedCourseNavItems = copiedCourseNavItems.map((item, i) => {\n            return {\n                ...item,\n                active: i === index\n            };\n        });\n\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                courseNavItems: modifiedCourseNavItems\n            }\n        });\n    }\n\n    onCourseActivityEnabledHandler = (type) => {\n        switch(type) {\n            case 'quiz':\n                this.setState({\n                    isOnMainMenu: false,\n                    isOnQuizMode: true\n                });\n                break;\n            case 'questionnaire':\n                this.setState({\n                    isOnMainMenu: false,\n                    isOnQuestionnaireMode: true\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    onCourseActivityExitedHandler = () => {\n        this.setState({\n            isOnMainMenu: true,\n            isOnQuizMode: false,\n            isOnQuestionnaireMode: false\n        });\n    }\n\n    onSectionSelectedHandler = (index) => {\n        this.setState({\n            isOnMainMenu: false,\n            sectionIndex: index\n        });\n    }\n\n    onBackToMainMenuHandler = () => {\n        this.setState({\n            isOnMainMenu: true\n        });\n    }\n\n    onCreatePostModeToggledHandler = (bool) => {\n        this.setState({\n            isOnCreatePostMode: bool\n        });\n    }\n\n    onForumPostCreatedHandler = (data) => {\n        let formData = {\n            ...data,\n            forumId: this.state.courseForum._id\n        };\n\n        let config = {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        };\n\n        axiosPost.post('', formData, config).then(result => {\n            console.log(result); // TODO: remove\n\n            return axiosForum.get('/course/' + this.state.courseData._id);\n        }).then(newForumResponse => {\n            this.setState({\n                courseForum: newForumResponse.data.forum,\n                isOnCreatePostMode: false\n            });\n        });\n    }\n\n    onForumPostEditedHandler = (data) => {\n        const formData = {\n            title: data.title,\n            content: data.content\n        };\n\n        let config = {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        };\n\n        axiosPost.put(`/${data.postId}`, formData, config).then(result => {\n            console.log(result); // TODO: remove\n\n            return axiosForum.get('/course/' + this.state.courseData._id);\n        }).then(newForumResponse => {\n            this.setState({\n                courseForum: newForumResponse.data.forum,\n                isOnCreatePostMode: false\n            });\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    onForumPostDeletedHandler = (postId) => {\n        let config = {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        };\n\n        axiosPost.delete(`/${postId}`, config).then(result => {\n            console.log(result);\n\n            const copiedCourseForum = { ...this.state.courseForum };\n\n            let copiedCourseForumPosts = copiedCourseForum.posts.filter(post => post._id !== postId);\n\n            copiedCourseForum.posts = [...copiedCourseForumPosts];\n\n            this.setState(prevState => {\n                return {\n                    ...prevState,\n                    courseForum: copiedCourseForum\n                }\n            });\n        }).catch(error => {\n            console.log(error.response.data.message);\n        });        \n    }\n\n    onForumPostRespondedHandler = (formData) => {\n        let config = {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        };\n\n        axiosPost.put(`/respond/${formData.postId}`, { index: formData.index }, config).then(response => {\n            return axiosForum.get('/course/' + this.state.courseData._id);\n        }).then(newForumResponse => {\n            this.setState({\n                courseForum: newForumResponse.data.forum\n            });\n        }).catch(error => {\n            // TODO:: A Better error feedback should be implemented\n            console.log(error.response.data.message);\n        })\n    }\n\n    render() {\n        let sections = (this.state.courseData || {}).sections || [];\n        let courseLandingData = (this.state.courseData || {}).landing || {};\n        let activeNavigation = (this.state.courseNavItems.find(item => item.active) || {}).name;\n        let section = sections[this.state.sectionIndex] || {};\n        let courseName = (this.state.courseData || {}).name;\n        let courseQuiz = (this.state.courseData || {}).quiz;\n        let courseIntro = (this.state.courseData || {}).introduction;\n        let pageContent = null;\n        \n        switch(activeNavigation) {\n            case 'Info':\n                pageContent = <CourseInfo landingData={courseLandingData} />;\n                break;\n            case 'Course':\n                pageContent = (\n                    <div className={classes.Course}>\n                        {this.state.isOnMainMenu ?\n                            <CourseMenu\n                                courseIntro={courseIntro}\n                                courseSections={sections}\n                                onSectionSelect={this.onSectionSelectedHandler}\n                                courseQuiz={courseQuiz._id}\n                                onCourseActivityEnabled={this.onCourseActivityEnabledHandler}\n                            />\n                        : !this.state.isOnQuizMode ?\n                            !this.state.isOnQuestionnaireMode ?\n                                <CourseSection\n                                    onBackToMainMenu={this.onBackToMainMenuHandler}\n                                    sectionData={section}\n                                /> :\n                                <Questionnaire\n                                    onQuestionnaireExited={this.onCourseActivityExitedHandler}\n                                    />\n                            :\n                            <Quiz\n                                quizData={courseQuiz}\n                                onQuizExited={this.onCourseActivityExitedHandler} />\n                        }\n                    </div>\n                );\n                break;\n            case 'Forums':\n                pageContent = <CourseForum \n                    createPostMode={this.state.isOnCreatePostMode}\n                    toggleCreatePostMode={this.onCreatePostModeToggledHandler}\n                    forumData={this.state.courseForum}\n                    forumPostCreated={this.onForumPostCreatedHandler}\n                    forumPostEdited={this.onForumPostEditedHandler}\n                    onPostDeleted={this.onForumPostDeletedHandler}\n                    postCommentSubmitted={this.onForumPostRespondedHandler}\n                />;\n                break;\n            default:\n                break;\n        }\n\n        let coursePageContent = (\n            <span className={classes.Course__Loader}>\n                <Loader strokeWidth={4} />\n            </span>\n        );\n\n        if (!this.state.isLoading) {\n            coursePageContent = (\n                <Fragment>\n                    <h1 className={classes.Course__Title}>\n                        {courseName}\n                    </h1>\n\n                    <CourseNavigation\n                        navItemList={this.state.courseNavItems}\n                        navigationItemClicked={this.onNavigationItemClickedHandler}\n                    />\n\n                    {pageContent}\n                </Fragment>\n            );\n        }\n\n        return (\n            <>\n                {coursePageContent}\n            </>\n        );\n    }\n}\n\nexport default Course;","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport CourseList from '../CourseList/CourseList';\nimport Course from '../Course/Course';\n\nclass CourseContainer extends Component {\n    render() {\n        return (\n            <Switch>\n                <Route path={this.props.match.url + '/:id'} component={Course} />\n                <Route path={this.props.match.url + '/'} component={CourseList} />\n                <Redirect to={this.props.match.url + '/'} />\n            </Switch>\n        )\n    }\n}\n\nexport default CourseContainer;","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport * as actions from '../../../store/actions/index';\n\nconst Logout = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(actions.logout());\n    }, [dispatch]);\n\n    return (\n        <Redirect to=\"/\" />\n    );\n}\n\nexport default Logout","import React, { useEffect } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { connect, useDispatch } from 'react-redux';\n\nimport Administration from './components/Admin/Administration';\nimport Account from './components/Account/Account';\nimport Chat from './components/Chat/Chat';\nimport Layout from './hoc/Layout/Layout';\nimport Home from './components/Home/Home';\nimport Authentication from './containers/Authentication/Authentication';\nimport CourseContainer from './containers/CourseContainer/CourseContainer';\nimport Logout from './components/Auth/Logout/Logout';\n\nimport * as actions from './store/actions/index';\n\nconst App = (props) => {\n\tlet dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(actions.authCheckState());\n\t}, [dispatch]);\n\n    useEffect(() => {\n        props.userSocket && props.userSocket.on('private message', messageData => {\n            let messages = [...props.userMessages];\n\n            messages.push(messageData.data);\n\n            props.updateMessages(messages);\n        });\n        // eslint-disable-next-line\n    }, [props.userSocket, props.userMessages, props.updateMessages]);\n\n\tlet routes = (\n\t\t<Switch>\n\t\t\t<Route path='/logout' component={Logout} />\n            {props.isAuthenticated ? <Route path='/my-inbox' component={Chat} /> : null}\n            {props.isAuthenticated ? <Route path='/my-account' component={Account} /> : null}\n\t\t\t<Route path='/auth' component={Authentication} />\n\t\t\t<Route path='/contact' render={() => <div>CONTACT COMPONENT</div>} />\n\t\t\t<Route path='/about' render={() => <div>ABOUT COMPONENT</div>} />\n\t\t\t<Route path='/courses' component={CourseContainer} />\n            {props.userStatus === 'admin' ? <Route path='/administration' component={Administration} /> : null}\n\t\t\t<Route path='/' exact component={Home} />\n\t\t\t<Redirect to='/' />\n\t\t</Switch>\n\t)\n\n\treturn (\n\t\t<Layout>\n\t\t\t{routes}\n\t\t</Layout>\n\t);\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tisAuthenticated: state.isAuth,\n        userStatus: state.userStatus,\n        userSocket: state.userSocket,\n        userMessages: state.userMessages\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateMessages: (messages) => dispatch(actions.updateMessages(messages))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport io from 'socket.io-client';\n\nconst initialState = {\n    isLoading: false,\n    error: null,\n    token: null,\n    isAuth: false,\n    userId: null,\n    userImage: null,\n    userStatus: null,\n    redirectPath: null,\n    successfullSignup: false,\n    userMessages: [],\n    userSocket: null\n};\n\n// Utility function for state management\nconst updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type) {\n        case actionTypes.LOGIN_START:\n            return updateObject(state, {\n                isLoading: true,\n                error: null,\n                token: null,\n                isAuth: false,\n                userId: null,\n                username: null,\n                redirectPath: null,\n                userStatus: null,\n                userImage: null,\n                userMessages: [],\n                userSocket: null\n            });\n        case actionTypes.LOGIN_SUCCESS:\n            let socket = io('http://localhost:8000', { auth: { userId: action.userId } });\n            return updateObject(state, {\n                isLoading: false,\n                error: null,\n                token: action.token,\n                isAuth: true,\n                userId: action.userId,\n                username: action.username,\n                redirectPath: action.path,\n                userStatus: action.status,\n                userImage: action.userImage,\n                userMessages: action.userMessages,\n                userSocket: socket\n            });\n        case actionTypes.LOGIN_FAIL:\n            return updateObject(state, {\n                isLoading: false,\n                error: action.error,\n                token: null,\n                isAuth: false,\n                userId: null,\n                username: null,\n                redirectPath: null,\n                userStatus: null,\n                userImage: null,\n                userMessages: [],\n                userSocket: null\n            });\n        case actionTypes.LOGOUT:\n            typeof (state.userSocket || {}).disconnect === 'function' && state.userSocket.disconnect();\n\n            return updateObject(state, {\n                isLoading: false,\n                error: null,\n                token: null,\n                isAuth: false,\n                userId: null,\n                username: null,\n                redirectPath: null,\n                userStatus: null,\n                userImage: null,\n                userMessages: [],\n                userSocket: null\n            });\n        case actionTypes.SIGNUP_START:\n            return updateObject(state, {\n                isLoading: true,\n                error: null,\n                redirectPath: null\n            });\n        case actionTypes.SIGNUP_SUCCESS:\n            return updateObject(state, {\n                isLoading: false,\n                error: null,\n                redirectPath: action.path,\n                successfullSignup: true\n            });\n        case actionTypes.SIGNUP_FAIL:\n            return updateObject(state, {\n                isLoading: false,\n                error: action.error,\n                redirectPath: null,\n                successfullSignup: false\n            });\n        case actionTypes.SIGNUP_REDIRECT:\n            return updateObject(state, {\n                isLoading: false,\n                error: null,\n                redirectPath: null,\n                successfullSignup: false\n            });\n        case actionTypes.PASSWORD_RESET_REQUEST_START:\n            return updateObject(state, {\n                isLoading: true,\n                error: null,\n                token: null,\n                isAuth: false,\n                userId: null,\n                redirectPath: null\n            });\n        case actionTypes.PASSWORD_RESET_REQUEST_SUCCESS:\n            return updateObject(state, {\n                isLoading: false,\n                error: null,\n                token: null,\n                isAuth: false,\n                userId: null,\n                redirectPath: action.path\n            });\n        case actionTypes.PASSWORD_RESET_REQUEST_FAIL:\n            return updateObject(state, {\n                isLoading: false,\n                error: action.error,\n                token: null,\n                isAuth: false,\n                userId: null,\n                redirectPath: action.path\n            });\n        case actionTypes.PASSWORD_RESET_START:\n            return updateObject(state, {\n                isLoading: true,\n                error: null,\n                token: null,\n                isAuth: false,\n                userId: null,\n                redirectPath: null\n            });\n        case actionTypes.PASSWORD_RESET_SUCCESS:\n            return updateObject(state, {\n                isLoading: false,\n                error: null,\n                token: null,\n                isAuth: false,\n                userId: null,\n                redirectPath: action.path\n            });\n        case actionTypes.PASSWORD_RESET_FAIL:\n            return updateObject(state, {\n                isLoading: false,\n                error: action.error,\n                token: null,\n                isAuth: false,\n                userId: null,\n                redirectPath: action.path\n            });\n        case actionTypes.AVATAR_CHANGE:\n            return updateObject(state, {\n                userImage: action.newUrl\n            });\n        // case actionTypes.MESSAGE_FETCH_SUCCESS:\n        //     return updateObject(state, {\n        //         error: null,\n        //         userMessages: action.messages\n        //     });\n        // case actionTypes.MESSAGE_FETCH_FAIL:\n        //     return updateObject(state, {\n        //         userMessages: [],\n        //         error: action.error\n        //     });\n        case actionTypes.UPDATE_MESSAGES:\n            return updateObject(state, {\n                userMessages: action.messages\n            });\n        default:\n            break;\n    }\n\n    return state;\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { /*HashRouter,*/ BrowserRouter } from 'react-router-dom';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(authReducer, composeEnhancer(applyMiddleware(thunk)));\n\n/*\n<Provider store={store}>\n    <HashRouter basename=\"elearning-app\">\n        <App />\n    </HashRouter>\n</Provider>\n\n<Provider store={store}>\n    <BrowserRouter basename=\"/\">\n        <App />\n    </BrowserRouter>\n</Provider>\n*/\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename=\"/\">\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signup\":\"Signup_Signup__1BG1n\",\"Signup__Close\":\"Signup_Signup__Close__3pM3a\",\"Signup__Active\":\"Signup_Signup__Active__2M9Zp\",\"Signup__Form__Header\":\"Signup_Signup__Form__Header__1gj4d\",\"Signup__Form__Cta\":\"Signup_Signup__Form__Cta__khlKj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Question\":\"Question_Question__3_BDr\",\"Question__Number\":\"Question_Question__Number__3msfV\",\"Question__Text\":\"Question_Question__Text__2ZmGj\",\"Question__Text__CaseIcon\":\"Question_Question__Text__CaseIcon__3hlZH\",\"Question__Choices\":\"Question_Question__Choices__2pynl\",\"Question__Cta\":\"Question_Question__Cta__3wxcr\",\"Question__Select\":\"Question_Question__Select__EfvkZ\",\"Question__Select__Icon\":\"Question_Question__Select__Icon__1K78X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackDialogueContainer\":\"FeedbackDialogue_FeedbackDialogueContainer__1K6tC\",\"FeedbackDialogue\":\"FeedbackDialogue_FeedbackDialogue__JWSh0\",\"FeedbackDialogue__Button\":\"FeedbackDialogue_FeedbackDialogue__Button__1f8bu\",\"FeedbackDialogue__Button__Success\":\"FeedbackDialogue_FeedbackDialogue__Button__Success__2YLoP\",\"FeedbackDialogue__Button__Error\":\"FeedbackDialogue_FeedbackDialogue__Button__Error__2-eAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserItem\":\"UserItem_UserItem__3t-o0\",\"UserItem__PictureContainer\":\"UserItem_UserItem__PictureContainer__3k2BD\",\"UserItem__Info\":\"UserItem_UserItem__Info__1Swl_\",\"UserItem__Time\":\"UserItem_UserItem__Time__1C0Y4\",\"UserItem__UnreadCount\":\"UserItem_UserItem__UnreadCount__14zwQ\",\"UserItem__Selected\":\"UserItem_UserItem__Selected__LL37Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateSection\":\"CreateSubSection_CreateSection__2prTM\",\"CreateSection__Header\":\"CreateSubSection_CreateSection__Header__25LTx\",\"CreateSection__Body\":\"CreateSubSection_CreateSection__Body__umyhd\",\"CreateSection__Body__FormField\":\"CreateSubSection_CreateSection__Body__FormField__1-YXX\",\"CreateSection__Body__Menu\":\"CreateSubSection_CreateSection__Body__Menu__2DErp\",\"CreateSection__Cta\":\"CreateSubSection_CreateSection__Cta__3veIv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Counter_Counter__JuLUT\",\"Counter__Label\":\"Counter_Counter__Label__3dcvm\",\"Counter__Body\":\"Counter_Counter__Body__2oAOR\",\"Counter__Amount\":\"Counter_Counter__Amount__1ogHE\",\"Counter__Button\":\"Counter_Counter__Button__133mU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseCard\":\"CourseCard_CourseCard__3W63U\",\"CourseCard__ImgSection\":\"CourseCard_CourseCard__ImgSection__1_hY_\",\"CourseCard__Name\":\"CourseCard_CourseCard__Name__1fqGN\",\"CourseCard__Body\":\"CourseCard_CourseCard__Body__sVP1R\",\"CourseCard__Body__Icon\":\"CourseCard_CourseCard__Body__Icon__1eeJN\",\"CourseCard__Cta\":\"CourseCard_CourseCard__Cta__37Z8A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Account__Header\":\"Account_Account__Header__2t4mM\",\"Account__Content\":\"Account_Account__Content__3SWS5\",\"Account__Content__ImageContainer\":\"Account_Account__Content__ImageContainer__1Q5j4\",\"Account__Content__FormContainer\":\"Account_Account__Content__FormContainer__3nXjP\",\"Account__Content__ImageContainer__Image\":\"Account_Account__Content__ImageContainer__Image__15Hkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RequestPasswordReset\":\"RequestPasswordReset_RequestPasswordReset__3fkcr\",\"RequestPasswordReset__Header\":\"RequestPasswordReset_RequestPasswordReset__Header__IXEyI\",\"RequestPasswordReset__Cta\":\"RequestPasswordReset_RequestPasswordReset__Cta__zvBM2\",\"RequestPasswordReset__Link\":\"RequestPasswordReset_RequestPasswordReset__Link__DXAKj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseNavigationItem\":\"CourseNavigationItem_CourseNavigationItem__3Tefo\",\"CourseNavigationItem__Icon\":\"CourseNavigationItem_CourseNavigationItem__Icon__2C9n7\",\"CourseNavigationItem__Text\":\"CourseNavigationItem_CourseNavigationItem__Text__sZB7d\",\"CourseNavigationItem__Active\":\"CourseNavigationItem_CourseNavigationItem__Active__2cVJW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__WQp--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseSubSection\":\"CourseSubSection_CourseSubSection__3GLOs\",\"CourseSubSection__Content\":\"CourseSubSection_CourseSubSection__Content__mNljk\",\"CourseSubSection__Content__Header\":\"CourseSubSection_CourseSubSection__Content__Header__2OEhj\",\"CourseSubSection__Content__Cta\":\"CourseSubSection_CourseSubSection__Content__Cta__qDpSN\",\"CourseSubSection__ButtonIcon\":\"CourseSubSection_CourseSubSection__ButtonIcon__3cRpR\"};"],"sourceRoot":""}