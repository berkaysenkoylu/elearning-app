{"version":3,"sources":["components/Admin/CourseManagement/CourseEnrollment/CourseEnrollment.module.scss","components/Account/PasswordChange/PasswordChange.module.scss","components/Account/AccountDataChange/AccountDataChange.module.scss","components/CourseInfo/CourseInfo.module.scss","components/CourseForum/CreatePost/CreatePost.module.scss","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/CreatePostComment/CreatePostComment.module.scss","components/Modal/Modal.module.scss","components/Quiz/QuizEnd/QuizEnd.module.scss","components/Quiz/QuizEnd/QuestionResult/QuestionResult.module.scss","components/Questionnaire/Question/SliderQuestion/SliderQuestion.module.scss","containers/DragAndDrop/DragAndDrop.module.scss","components/Admin/AdminNavigation/AdminAccordionMenu/AdminAccordionMenu.module.scss","components/UI/Table/Table.module.scss","components/Admin/CourseManagement/Course/CourseActivities/CreateQuiz/CreateQuiz.module.scss","components/Navigation/AccountItem/AccountItem.module.scss","components/Auth/PasswordReset/PasswordReset.module.scss","containers/CourseList/CourseList.module.scss","components/CourseSection/CourseSubSectionSidebar/CourseSectionSidebarItem/CourseSectionSidebarItem.module.scss","components/UI/RadioButton/RadioButton.module.scss","assets/images/sprite.svg","components/UI/InfoBox/InfoBox.module.scss","components/UI/MiniButton/MiniButton.module.scss","components/Admin/CourseManagement/Course/CourseHome/SectionItem/SubSectionItem/SubSectionItem.module.scss","components/FileUpload/FileUpload.module.scss","components/Admin/CourseManagement/CourseList/AdminCourseList.module.scss","components/Admin/CourseManagement/CourseEnrollment/UserPool/UserItem/UserItem.module.scss","components/Admin/UserManagement/AdminUserList/AdminUserCard/AdminUserCard.module.scss","components/Admin/UserManagement/CreateUser/CreateUser.module.scss","components/Navigation/Toolbar/Toolbar.module.scss","components/Navigation/NavigationItems/NavigationItems.module.scss","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.scss","components/Auth/SignupSuccess/SignupSuccess.module.scss","components/Loader/Loader.module.scss","containers/Course/Course.module.scss","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/PostComment.module.scss","components/CourseMenu/CourseMenu.module.scss","components/Quiz/QuizIntro/QuizIntro.module.scss","components/ProgressBar/ProgressBar.module.scss","components/Questionnaire/Intro/Intro.module.scss","components/Questionnaire/Content/Content.module.scss","components/Questionnaire/Question/MultipleChoiceQuestion/MultipleChoiceQuestion.module.scss","components/Questionnaire/Question/SliderCombinationQuestion/SliderCombinationQuestion.module.scss","components/Graph/Graph.module.scss","components/Admin/CourseManagement/Course/CourseStats/CourseStats.module.scss","components/PasswordFeedback/FeedbackCondition/FeedbackCondition.module.scss","components/Admin/CourseManagement/Course/CreateSubSection/SectionFormControl/SectionFormControl.module.scss","components/UI/SelectInput/SelectInput.module.scss","components/Admin/CourseManagement/CourseEnrollment/UserPool/UserPool.module.scss","containers/CourseList/CourseListElement/CourseListElement.module.scss","components/Admin/UserManagement/AdminUserList/AdminUserList.module.scss","components/CourseForum/CourseForum.module.scss","components/CourseForum/PostList/PostList.module.scss","components/Paginator/Paginator.module.scss","components/Paginator/PrevButton/PrevButton.module.scss","components/Paginator/NextButton/NextButton.module.scss","components/Quiz/QuizContainer.module.scss","components/Questionnaire/Questionnaire.module.scss","components/Admin/AdminHome/AdminHome.module.scss","components/Admin/AdminNavigation/AdminNavigation.module.scss","components/PasswordFeedback/PasswordFeedback.module.scss","components/UI/Select/Select.module.scss","components/UI/Menu/MenuItem/MenuItem.module.scss","components/UI/PageBreak/PageBreak.module.scss","components/UI/File/File.module.scss","components/UI/SelectInput/Options/Options.module.scss","components/CourseForum/PostList/PostDetail/PostDetail.module.scss","components/UI/SelectInput/Options/Option/Option.module.scss","components/UI/ListElement/ListElement.module.scss","components/Admin/Administration.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/UI/Logo/Logo.module.scss","containers/Authentication/Authentication.module.scss","components/CourseNavigation/CourseNavigation.module.scss","components/CourseForum/PostList/PostDetail/PostCommentList/PostCommentList.module.scss","components/Paginator/PaginationRange/PaginationRange.module.scss","components/CourseSection/CourseSubSectionSidebar/CourseSubSectionSidebar.module.scss","components/Quiz/QuizContent/QuizContent.module.scss","components/Quiz/QuizContent/SuccessCheck/SuccessCheck.module.scss","components/Questionnaire/Finish/Finish.module.scss","components/Questionnaire/Question/Question.module.scss","components/CourseSection/CourseSection.module.scss","components/Admin/AdminHome/FeaturedInfo/FeaturedInfo.module.scss","components/Admin/CourseManagement/Course/CourseHome/CourseHome.module.scss","components/UI/Input/Input.module.scss","components/Auth/Login/Login.module.scss","components/UI/Button/Button.module.scss","assets/images/spine.jpg","components/Auth/Signup/Signup.module.scss","components/Quiz/QuizContent/Question/Question.module.scss","assets/anim sync /^/.*$","assets/exampleData.js","utility/firstLetterUpper.js","components/UI/InfoBox/InfoBox.js","components/Admin/AdminHome/FeaturedInfo/FeaturedInfo.js","components/Graph/Graph.js","components/Admin/AdminHome/AdminHome.js","components/Admin/AdminNavigation/AdminAccordionMenu/AdminAccordionMenuItem/AdminAccordionMenuItem.js","components/Admin/AdminNavigation/AdminAccordionMenu/AdminAccordionMenu.js","assets/admin_dashborad_data.js","components/Admin/AdminNavigation/AdminNavigation.js","axiosUtility/axios-admin.js","utility/formValidation.js","components/UI/MiniButton/MiniButton.js","components/UI/Table/Table.js","components/Admin/CourseManagement/Course/CourseStats/QuizStats/QuizStats.js","components/Admin/CourseManagement/Course/CourseStats/CourseStats.js","components/Admin/CourseManagement/Course/CourseHome/SectionItem/SubSectionItem/SubSectionItem.js","components/Admin/CourseManagement/Course/CourseHome/SectionItem/SectionItem.js","components/PasswordFeedback/FeedbackCondition/FeedbackCondition.js","components/PasswordFeedback/PasswordFeedback.js","components/UI/Input/Input.js","components/UI/Button/Button.js","components/UI/Accordion/Accordion.js","components/UI/Select/Select.js","components/Admin/CourseManagement/Course/CourseHome/CourseHome.js","utility/addInputField.js","components/UI/Menu/MenuItem/MenuItem.js","components/UI/Menu/Menu.js","components/UI/PageBreak/PageBreak.js","components/Admin/CourseManagement/Course/CreateSubSection/SectionFormControl/SectionFormControl.js","components/Admin/CourseManagement/Course/CreateSubSection/CreateSubSection.js","components/UI/File/File.js","containers/DragAndDrop/DragAndDrop.js","components/FileUpload/FileUpload.js","components/Admin/CourseManagement/Course/CourseActivities/CreateQuiz/CreateQuiz.js","components/Admin/CourseManagement/Course/Course.js","components/UI/Counter/Counter.js","components/UI/SelectInput/Options/Option/Option.js","components/UI/SelectInput/Options/Options.js","components/UI/SelectInput/SelectInput.js","components/Admin/CourseManagement/CreateCourse/CreateCourse.js","components/UI/ListElement/ListElement.js","components/Admin/CourseManagement/CourseList/CourseCard/CourseCard.js","components/Admin/CourseManagement/CourseList/AdminCourseList.js","components/Admin/CourseManagement/CourseEnrollment/UserPool/UserItem/UserItem.js","components/Admin/CourseManagement/CourseEnrollment/UserPool/UserPool.js","components/Admin/CourseManagement/CourseEnrollment/CourseEnrollment.js","components/Admin/CourseManagement/CourseManagement.js","components/Admin/UserManagement/AdminUserList/AdminUserCard/AdminUserCard.js","components/Admin/UserManagement/AdminUserList/AdminUserList.js","hooks/usePasswordValidation.js","components/Admin/UserManagement/CreateUser/CreateUser.js","components/Admin/UserManagement/UserManagement.js","components/Admin/Administration.js","axiosUtility/axios-auth.js","store/actions/auth.js","store/actions/actionTypes.js","components/UI/Backdrop/Backdrop.js","components/FeedbackDialogue/FeedbackDialogue.js","utility/changeInputObjectValue.js","components/Account/PasswordChange/PasswordChange.js","components/Account/AccountDataChange/AccountDataChange.js","components/Account/Account.js","components/UI/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","hooks/useComponentVisible.js","components/Navigation/AccountItem/AccountItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","components/Home/Home.js","components/Auth/Login/Login.js","components/Auth/Signup/Signup.js","components/Auth/SignupSuccess/SignupSuccess.js","components/Auth/RequestPasswordReset/RequestPasswordReset.js","components/Auth/PasswordReset/PasswordReset.js","containers/Authentication/Authentication.js","components/Loader/Loader.js","axiosUtility/axios-course.js","containers/CourseList/CourseListElement/CourseListElement.js","containers/CourseList/CourseList.js","axiosUtility/axios-forum.js","axiosUtility/axios-post.js","components/CourseNavigation/CourseNavigationItem/CourseNavigationItem.js","components/CourseNavigation/CourseNavigation.js","components/CourseInfo/CourseInfo.js","components/CourseForum/CreatePost/CreatePost.js","components/CourseForum/PostList/Post/Post.js","components/CourseForum/PostList/PostList.js","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/PostComment.js","components/CourseForum/PostList/PostDetail/PostCommentList/PostCommentList.js","components/Modal/Modal.js","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/CreatePostComment/CreatePostComment.js","components/CourseForum/PostList/PostDetail/PostDetail.js","components/Paginator/PaginationRange/PaginationRange.js","components/Paginator/PrevButton/PrevButton.js","components/Paginator/NextButton/NextButton.js","components/Paginator/Paginator.js","components/CourseForum/CourseForum.js","components/CourseMenu/CourseMenu.js","components/CourseSection/CourseSubSectionSidebar/CourseSectionSidebarItem/CourseSectionSidebarItem.js","components/CourseSection/CourseSubSectionSidebar/CourseSubSectionSidebar.js","components/CourseSection/CourseSubSection/CourseSubSection.js","components/CourseSection/CourseSection.js","components/Quiz/QuizIntro/QuizIntro.js","components/Quiz/QuizEnd/QuestionResult/QuestionResult.js","components/Quiz/QuizEnd/QuizEnd.js","components/UI/RadioButton/RadioButton.js","components/Quiz/QuizContent/SuccessCheck/SuccessCheck.js","components/Quiz/QuizContent/Question/Question.js","components/ProgressBar/ProgressBar.js","components/Quiz/QuizContent/QuizContent.js","components/Quiz/QuizContainer.js","components/Questionnaire/Intro/Intro.js","components/Questionnaire/Finish/Finish.js","components/Questionnaire/Question/MultipleChoiceQuestion/MultipleChoiceQuestion.js","components/Questionnaire/Question/SliderQuestion/SliderQuestion.js","components/Questionnaire/Question/SliderCombinationQuestion/SliderCombinationQuestion.js","utility/updateQuestionaireState.js","components/Questionnaire/Question/Question.js","components/Questionnaire/Content/Content.js","components/Questionnaire/Questionnaire.js","containers/Course/Course.js","containers/CourseContainer/CourseContainer.js","components/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/auth.js","index.js","components/FeedbackDialogue/FeedbackDialogue.module.scss","components/Admin/CourseManagement/Course/CreateSubSection/CreateSubSection.module.scss","components/UI/Counter/Counter.module.scss","components/Admin/CourseManagement/CourseList/CourseCard/CourseCard.module.scss","components/Account/Account.module.scss","components/Auth/RequestPasswordReset/RequestPasswordReset.module.scss","components/CourseNavigation/CourseNavigationItem/CourseNavigationItem.module.scss","components/CourseForum/PostList/Post/Post.module.scss","components/CourseSection/CourseSubSection/CourseSubSection.module.scss","components/Admin/AdminNavigation/AdminAccordionMenu/AdminAccordionMenuItem/AdminAccordionMenuItem.module.scss","components/Admin/CourseManagement/Course/CourseHome/SectionItem/SectionItem.module.scss","components/UI/Accordion/Accordion.module.scss","components/Admin/CourseManagement/CreateCourse/CreateCourse.module.scss"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","featuredData","revenue","amount","percentage","sales","cost","userData","quizData","_id","firstName","lastName","answers","questionNumber","selectedIndex","correctIndex","isCorrect","firstLettersUpper","string","replace","split","word","toUpperCase","slice","trim","join","InfoBox","props","className","classes","InfoBox__Header","title","InfoBox__Body","children","FeaturedInfo","data","item","key","firstLetterUpper","FeaturedInfo__Body","FeaturedInfo__Body__Amount","FeaturedInfo__Body__Percentage","FeaturedInfo__Body__Icon","FeaturedInfo__Body__Icon__Increase","FeaturedInfo__Body__Icon__Decrease","xlinkHref","svg","FeaturedInfo__Footer","Graph","graphType","pageContent","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","dataKeyxAxis","Label","value","offset","position","YAxis","dataKeyyAxis","angle","textAnchor","Tooltip","Line","type","dataKeyName","stroke","BarChart","Legend","bars","bar","Bar","name","fill","color","Graph__Header","graphTitle","AdminHome","AdminAccordionMenuItem","AdminAccordionMenuItem__Icon","icon","AdminAccordionMenuItem__Label","to","path","AdminAccordionMenuItem__Link","activeClassName","AdminAccordionMenuItem__ActiveLink","exact","isExact","AdminAccordionMenu","isActive","setIsActive","useState","setHeight","innerElementRef","useRef","timeout","useEffect","current","setTimeout","scrollHeight","clearTimeout","innerStyle","aria-expanded","AdminAccordionMenu__label","role","onClick","prevState","label","AdminAccordionMenu__inner","style","aria-hidden","ref","AdminAccordionMenu__content","subItems","index","dashboardData","subMenuItems","AdminNavigation","dashboardItem","instance","axios","create","baseURL","checkValidity","rules","isValid","required","maxLength","length","minLength","isEmail","test","isURL","isNumeric","containsNumeric","containsSpecial","isEnglishOnly","MiniButton","classList","MiniButton__Active","clicked","Table","TableWrapper","headers","header","rows","row","rowData","Table__Row","showIcon","Table__Row__Icon","changeColor","QuizStats","headerData","questionToUserAnswersData","forEach","question","push","correct","incorrect","i","answer","copiedQuestionData","correctAnswers","filter","parseFloat","toFixed","CourseStats","statPaginationData","setStatPaginationData","CourseStats__Header","button","prevButtonData","onPaginationClickedHandler","SubSectionItem","SubSectionItem__Name","SubSectionItem__Cta","subsectionEdited","subsectionDeleted","SectionItem","sectionData","SectionItem__Name","SectionItem__Add","subsectionAdded","sectionDeleted","SectionItem__List","subsections","subsection","onSubSectionEdited","subsectionId","section","FeedbackCondition","FeedbackCondition__Icon","isTrue","PasswordFeedback","validationMap","setValidationMap","validLength","upperCase","hasNumber","specialChar","visible","setVisible","setWidth","timerRef","scrollWidth","copiedValidationMap","copiedValidationCondition","validation","condition","visibility","Input","passwordFeebackVisible","setPasswordFeedbackVisible","inputElement","inputClasses","InputElement","validationError","touched","Invalid","onInputFocused","event","target","onInputFocusLost","focusLost","elementType","elementConfig","onChange","changed","onBlur","onFocus","TextArea","SelectElement","options","option","displayValue","labelClassList","InputElement__Label","labelColor","InputElement__Label__White","ValidationError","isPassword","passwordValidationMap","Button","btnType","ButtonPrimary","ButtonDanger","ButtonSecondary","btnSize","ButtonSmall","disabled","Accordion","Accordion__label","Accordion__label__border","Accordion__inner","Accordion__content","Select","selectRef","content","alreadyExists","selectChanged","CourseHome","sectionNameFormCtrl","setSectionNameFormCtrl","placeholder","valid","courseActivities","setCourseActivities","courseData","quiz","questionnaire","copiedCourseActivities","copiedQuizData","copiedQuestionnaireData","onSubSectionAddedHandler","sectionId","history","match","url","courseActivityContent","CourseHome__Activities__List","onCourseActivityEdit","activityName","activityId","onCourseActivityDelete","courseActivityDeleted","CourseHome__Header","CourseHome__SectionList__List","sections","deletedSubsection","editedSubsection","deletedSection","CourseHome__SectionList__Cta","copiedFormControl","formValidation","inputChangedHandler","sectionAdded","CourseHome__Activities","CourseHome__Activities__Cta","copiedActivity","selected","link","values","find","createLink","CourseHome__UserEnrollment","enrolledUsers","CourseHome__UserEnrollment__Cta","INPUT_TEMPLATE","addInputField","inputObj","newInputObj","copiedInputObj","inputKey","newFormControl","copiedConfig","MenuItem","Menu","items","menuItemClicked","PageBreak","SectionFormControl","isPageBreak","formControl","inputChanged","showRemove","SectionFormControl__Remove","removed","SECTION_ELEMENTS","withRouter","params","useParams","isEditMode","setIsEditMode","formValid","setFormValid","sectionFormControls","setSectionFormControls","populateFormFields","useCallback","subsectionToEdit","savedSubSectionData","subsectionContent","copiedFormControls","copiedNameFormCtrl","pageBreakCount","currPageBreakIndex","contentKeyArr","j","formControlKeyArr","agent","formControlValue","agentIndex","frmCtrller","toLowerCase","indexOf","formKeyName","checkFormValidity","wholeForm","formCtrl","onFormInputChangedHandler","copiedSectionFormControls","obj","frmCtrl","frmCtrlArr","dupIndex","onFormControlRemovedHandler","nameField","CreateSection","CreateSection__Header","CreateSection__Body","CreateSection__Body__FormField","CreateSection__Body__Menu","formControlArr","formControllerNumbers","ctrller","parseInt","pop","CreateSection__Cta","sectionCount","activeIndex","subSections","Array","currentFormCtrl","formCtrlValue","copiedSubSection","editedSubSection","createdSubSection","File","fileInput","droppedFile","files","selectedFile","preventDefault","click","MIME_TYPE_MAP","DragAndDrop","Component","constructor","super","dropRef","createRef","checkMimeType","file","resetState","this","setState","DropContainer","contentClassList","ContentText","dataTransferFiles","undefined","selectedFileName","dragInHandler","stopPropagation","dragCounter","concat","DropContainerEnter","dataTransfer","newList","ValidFileType","InvalidFileType","dragOutHandler","c","state","dragOverHandler","dropHandler","dropHandle","fileName","fileSelectHandler","fileSelect","preSelectedFileName","componentDidMount","div","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","render","pageContentTemplate","FileSelect","FileUpload","setFile","onSelectFile","input_file","fileSelected","FileUploadHeader","Form","preSelectedFile","CreateQuiz","editMode","setEditMode","quizToEditData","setQuizToEditData","quizNameFormControl","setquizNameFormControl","currentQuizData","copiedQuizNameFormCtrl","CreateQuiz__Header","CreateQuiz__Body","onInputFieldChanged","questionDataUrl","Date","now","toString","CreateQuiz__Cta","formData","FormData","append","onQuizEdited","onQuizCreated","subSectionToEdit","setSubSectionToEdit","config","token","useHistory","onSectionAddedHandler","sectionName","axiosAdmin","post","courseId","then","response","responseData","isSectionAdded","courseListUpdated","newCourseData","onSectionDeletedHandler","delete","isSectionDeleted","copiedCourseData","deletedSectionId","result","newSections","courseSectionDataChangedHandler","newSectionData","onSubsectionDeletedHandler","isSubSectionDeleted","onSubsectionEdit","onSubSectionEditedHandler","put","isSubSectionEdited","onSubSectionCreatedHandler","isSubSectionAdded","onCourseActivityDeletedHandler","activityType","requestUrl","isDeleted","catch","error","console","log","get","isEdited","courseActivityEdited","onCourseActivityEditedHandler","isAdded","courseActivityAdded","onCourseActivityCreatedHandler","sectionList","Counter","counter","setCounter","initialValue","counterChanged","isIncrement","newCounter","counterAmountChanged","Counter__Label","Counter__Body","Counter__Button","Counter__Amount","Option","onOptionSelected","Options","optionSelectedHandler","selectedOption","show","SelectOptions","optionsRef","SelectInput","showOptions","setShowOptions","setSelected","buttonRef","itemPerPageList","document","handleClickOutside","contains","SelectInputWrapper","valueSelected","QUIZ_LIST","CreateCourse","courseDataFormControls","setCourseDataFormControls","image","description","facultyFormControls","setFacultyFormControls","selectedQuiz","setSelectedQuiz","savedCourseData","copiedImageFormCtrl","landing","copiedDescFormCtrl","info","copiedFacultyFormControls","faculty","facultyMember","facultyArr","createFormContent","formControls","formType","operationType","inputtedValue","copiedFacultyFormCtrl","copiedCourseDataFormControls","copiedFormCtrl","onInputChangedHandler","CreateCourse__Header","CreateCourse__Body","CreateCourse__Faculty","operation","keyArr","formCtrlCount","onCounterAmountChangedHandler","CreateCourse__Cta","facultyFrmCtrl","courseEdited","courseCreated","ListElement","CourseCard","landingData","courseName","backgroundImage","CourseCard__ImgSection","CourseCard__Name","courseNameClicked","CourseCard__Body","CourseCard__Body__Icon","person","CourseCard__Cta","coursePublish","isPublished","courseEdit","courseDelete","AdminCourseList","AdminCourseList__Header","AdminCourseList__Body","courseList","course","onCourseEdited","onCourseDeleted","onCoursePublished","onCourseNameClicked","UserItem","isSelected","UserItem__Active","userSelect","UserPool","UserPool__Body","userList","user","userSelected","CourseEnrollment","setEnrolledUsers","nonEnrolledUsers","setNonEnrolledUsers","idArr","modifiedUserList","status","onUserSelectedHandler","action","userId","copiedList","onUserEnrollmentChangedHandler","copiedEnrolledUsers","copiedNonEnrolledUsers","CourseEnrollment__Header","CourseEnrollment__Body","CourseEnrollment__Body__Cta","CourseEnrollment__Cta","onUserEnrollmentSubmitted","enrolledUser","CourseManagement","selectedCourse","setSelectedCourse","courseToEdit","setCourseToEdit","setCourseList","setUserList","onCourseNameClickedHandler","onCourseCreatedHandler","newCourseList","addedProduct","onCourseEditHandler","onCourseEditedHandler","copiedCourseList","newCourse","onCourseDeletedHandler","removedItemId","onCoursePublishedHandler","success","onCourseListUpdatedHandler","onUserEnrollmentSubmittedHandler","submittedUsers","areUsersEnrolled","routes","AdminUserCard","AdminUserCard__Body","email","AdminUserCard__Cta","userEdit","userDelete","AdminUserList","AdminUserList__Header","userEdited","userDeleted","usePasswordValidation","password","setValidLength","setHasNumber","setUpperCase","setSpecialChar","CreateUser","React","memo","userDataFormControls","setUserDataFormControls","autoComplete","formIsValid","setFormIsValid","savedUserData","resetFormFields","formContent","copiedUserDataFormControls","CreateUser__Header","CreateUser__Form","newPass","userCreated","UserManagement","userToEdit","setUserToEdit","onUserCreatedHandler","isCreated","newUserList","onUserEditedHandler","editedUserData","copiedUserList","newUserData","onUserDeletedHandler","removedUserId","onUserEdit","connect","Administration","authTimeout","expirationTime","dispatch","logout","loginSuccess","userImage","localStorage","removeItem","Backdrop","ReactDOM","createPortal","getElementById","FeedbackDialogue","FeedbackDialogue__Button","isError","FeedbackDialogue__Button__Error","FeedbackDialogue__Button__Success","FeedbackDialogueContainer","feedbackMessage","closed","changeInputObjectValue","actualObject","keyName","newData","copiedObject","copiedObjectElement","PasswordChange","passwordChangeFormControls","setPasswordChangeFormControls","oldPassword","newPassword","newPasswordAgain","_validLength","_hasNumber","_upperCase","_specialChar","passwordsMatch","setPasswordsMatch","copiedPasswordChangeFormControls","showMatchWarning","PasswordChange__Header","PasswordChange__Form","PasswordChange__Form__Warning","PasswordChange__Cta","passwordData","passwordChange","AccountDataChange","accountDataFormControls","setAccountDataFormControls","dateOfBirth","gender","copiedAccountDataFormControls","AccountDataChange__Header","AccountDataChange__Form","AccountDataChange__Form__Warning","AccountDataChange__Cta","accountData","accountDataChange","changeAvatar","newImgUrl","newUrl","setUserData","imageFile","setImageFile","feedbackDialogue","setFeedbackDialogue","message","axiosAuth","err","URL","createObjectURL","avatarUrl","imageUrl","Account","Account__Header","Account__Content","Account__Content__ImageContainer","Account__Content__ImageContainer__Image","Account__Content__FormContainer","Logo","NavigationItem","Link","ActiveLink","useComponentVisible","initialVisibilityState","isComponentVisible","setIsComponentVisible","handleHideDropdown","parentElement","menuRef","menuHeight","setMenuHeight","profilePictureStyle","AccountItem","AccountItem__Profile","AccountItem__Profile__Picture","AccountItem__Menu","NavigationItems","navList","Navigation","Navigation__Items","Navigation__Auth","isAuth","Toolbar","ToolbarWrapper","Toolbar__Main","userStatus","isAuthenticated","Home","Login","setFormControls","overlayClassList","Login__Overlay","isSignupMode","Login__Overlay__Active","Login__Form","Login__Form__Header","Login__Form__Fields","Login__Form__Cta","forgotPasswordClicked","loginForm","loginFormSubmit","Signup","Signup__Active","onSignupOpened","resetForm","closeSignupPanel","openSignupPanel","Signup__Close","Signup__Form","Signup__Form__Header","Signup__Form__Fields","Signup__Form__Cta","signupForm","signupFormSubmit","SignupSuccess","useDispatch","SignupSuccess__Header","SignupSuccess__Content","RequestPasswordReset","setEmail","requestSent","setRequestSent","copiedEmailFormControl","resetFormSubmitted","emailFormSubmit","loading","reqSuccessfull","RequestPasswordReset__Header","RequestPasswordReset__Cta","RequestPasswordReset__Link","onSubmit","RequestPasswordReset__Body","PasswordReset","resetFormControls","setResetFormControls","passwordRepeat","location","pathname","passwordResetFormSubmitted","passwordResetForm","passwordVerify","resetFormSubmit","formInputs","inputName","ResetedPasswordHeader","PasswordReset__Header","PasswordReset__Form","Authentication","onCloseFeedBackDialogueHandler","showError","onSignupClosedHandler","toggle","signupMode","onForgotPasswordClickedHandler","onLoginFormSubmittedHandler","login","onSignupFormSubmittedHandler","signup","onEmailFormSubmitted","requestPasswordReset","onPasswordResetFormSubmitHandler","resetPassword","redirectPath","signupSuccess","isLoading","successfullSignup","getTime","expiresIn","setItem","loginFail","signupFail","passwordResetRequestFail","actions","resetPasswordFail","Loader","Spinner","Circular","viewBox","Stroke","cx","cy","r","strokeWidth","CourseListElement","require","CourseListElement__Side","CourseListElement__Side__Front","CourseListElement__Picture","CourseListElement__Content","CourseListElement__Heading","CourseListElement__Description","CourseListElement__Description__FacultyList","CourseListElement__Description__FacultyList__Item","CourseListElement__Side__Back","CourseListElement__Cta","CourseListElement__Cta__Link","selectCourseListElement","CourseListElement__Cta__Link__Icon","CourseListElement__Cta__Link__Text","CourseList","setIsLoading","axiosCourse","CourseList__Loader","CourseList__Header","CourseList__Content","onCourseClickedHandler","CourseNavigationItem","active","CourseNavigationItem__Active","CourseNavigationItem__Icon","iconName","CourseNavigationItem__Text","CourseNavigation","navItemList","navigationItemClicked","CourseInfo","CourseInfo__Image","src","alt","CourseInfo__Body","CourseInfo__Info","CourseInfo__Faculty","CreatePost","isFormValid","setIsFormValid","prePopulateFormFields","prePopulatedFormFields","copiedTitle","editFormFields","isTitleValid","copiedContent","isContentValid","formFields","CreatePost__Header","CreatePost__Body","CreatePost__Inputs","CreatePost__Cta","editPost","createPost","createPostCancel","Post","postData","postSelected","Post__Title","Post__Author","author","Post__Replies","responses","Post__Views","views","Post__Activity","time","updateTime","difference","timeString","getPostCreateTimeDifference","createdAt","PostList","postContent","postList","onPostSelected","PostList__Header","PostComment","commentData","PostComment__Header","updatedAt","PostComment__Content","PostCommentList","commentList","sort","c1","c2","comment","Modal","modalClasses","setModalClasses","ModalContainer","customStyle","ModalContainer__Closed","dangerouslySetInnerHTML","__html","CreatePostComment","setPostContent","onCreatePostModalClosedHandler","cancelPostComment","postCommentEnabled","CreatePostComment__Close","CreatePostComment__Header","CreatePostComment__Form","formSubmitted","copiedPostContent","CreatePostComment__Form__Cta","isPostComment","setIsPostComment","setPostData","togglePostComment","bool","formSubmittedHandler","postId","postCommentSubmit","prototype","hasOwnProperty","call","PostDetailContainer","PostDetail","PostDetail__Header","PostDetail__Header__Title","PostDetail__Header__TimeContainer","PostDetail__Header__TimeContainer__Time","PostDetail__Header__TimeContainer__Tooltip","date","getDate","getMonth","getFullYear","getHours","getMinutes","formatPostCreatedDate","PostDetail__Body","PostDetail__Cta","postDeleted","postEdited","PostComments","PostComments__NoCom","PostDetailContainer__Cta","onBackButtonPressed","PaginationRange","itemPerPage","currentPage","maxItem","PrevButton","ArrowIcon","NextButton","Paginator","setItemPerPage","setCurrentPage","pageCount","setPageCount","Math","floor","maxItemCount","pageNumber","pagination","perPage","PaginatorButtons","hasPrevPage","hasNextPage","CourseForum","paginationState","setPaginationState","startIndex","endIndex","showPostDetail","setShowPostDetail","selectedPost","setSelectedPost","isPostEditMode","setIsPostEditMode","postToEdit","setPostToEdit","forumPostList","forumData","posts","onPostDeleted","toggleCreatePostMode","postCommentSubmitted","createPostMode","forumPostCreated","forumPostEdited","CourseForum__Cta","paginationData","CourseMenu","onActivityEnabled","onCourseActivityEnabled","CourseMenu__Intro","courseIntro","CourseMenu__Misc","courseQuiz","CourseMenu__Cta","onSectionSelect","CourseSectionSidebarItem","listContent","contentTitleArr","subsubsection","onSubSubSectionClicked","currentActive","isSectionActive","CourseSectionSidebarItem__List__Icon","CourseSectionSidebarItem__Main","CourseSectionSidebarItem__List","CourseSubSectionSidebar","contentData","subSectionNavigationData","subSectionMap","subSectionIndex","subSectionPageIndex","subsubSectionIndex","activeSubSectionIndex","newSubSectionSelected","onSubSubSectionClickedHandler","CourseSubSection","subSectionData","subSectionSideBarData","onNewSubSectionSelected","CourseSubSection__Content","CourseSubSection__Content__Header","CourseSubSection__Content__Cta","onBackClicked","CourseSubSection__ButtonIcon","showNext","onNextClicked","CourseSection","isAtIntro","setIsAtIntro","setSubSectionIndex","setSubSectionPageIndex","totalSectionCount","currentSectionLength","goToPrevSubSection","prevSubSectionLength","Section","BackMenu__Button","onBackToMainMenu","BackMenu__Icon","Section__Container","Section__Title","Section__Content","Section__List","Section__ListItem","Section__ListButton","onSubSectionSelectedHandler","Section__ListIcon","newIndices","QuizIntro","QuizIntro__Header","quizTitle","QuizIntro__Cta","onQuizStarted","QuestionResult","classColor","QuestionResult__Icon__Correct","QuestionResult__Icon__Incorrect","QuestionResult__QuestionNumber","QuestionResult__Icon","QuizEnd","visualResult","QuizEnd__Header","QuizEnd__Content","QuizEnd__Content__Text","QuizEnd__Content__Visual","RadioButton","radioRef","checked","RadioGroup","RadioButton__Input","htmlFor","RadioButton__Label","SuccessCheck","defaultOptions","loop","autoplay","animationData","isSuccess","rendererSettings","preserveAspectRatio","window","innerWidth","Question","selectedChoice","setSelectedChoice","showCaseModal","setShowCaseModal","Question__Number","questionCase","Question__Text","questionText","questionType","Question__Text__CaseIcon","Question__Choices","questionChoices","choice","text","onChoiceMarkedHandler","Question__Cta","answered","onAnswerSelected","Question__Select","Question__Select__Icon","ProgressBar","progress","questionAmount","borderTopRightRadius","borderBottomRightRadius","ProgressBar__Background","ProgressBar__Foreground","QuizContent","currentQuestion","setCurrentQuestion","setSuccess","isQuestionAnswered","setIsQuestionAnswered","questionList","questions","questionAnswerList","choices","case","answeredQuestionNumber","choiceIndex","onQuizEnd","QuizContainer","isAtQuizIntro","setIsAtQuizIntro","isQuizFinished","setIsQuizFinished","quizResultData","setQuizResultData","numberOfQuestions","Quiz","Quiz__Exit","onQuizExited","quizReport","Intro","Intro__Header","Intro__Cta","onQuestionnaireStarted","Finish","MultipleChoiceQuestion","questionData","MultipleChoiceQuestion__Text","MultipleChoiceQuestion__Choices","answerSelected","SliderQuestion","SliderQuestion__Text","sliderLabel","SliderQuestion__Slider","SliderQuestion__Slider__Input","min","sliderRange","max","step","sliderStep","onMouseUp","sliderChanged","SliderQuestion__Slider__Input__Value","SliderCombinationQuestion","subSliders","subSlider","sliderConfig","range","qNumber","sliderCombinationValueChanged","sliderIndex","subSliderChanged","SliderCombinationQuestion__Text","SliderCombinationQuestion__SubSliders","updateQuestionaireState","questionConfig","commonConfig","specificConfig","subText","setQuestionConfig","isTouched","setIsTouched","setIsValid","onInputChanged","inputValue","validationRules","validity","copiedQuestionState","copiedQuestionSpecificConfig","onInputFocusLostHandler","questionAnswerFinish","onSliderCombinationValueChangedHandler","sliderCombData","newSubSliderValues","subSliderValue","newSubSliderData","answerIndex","onMultipleChoiceSelectedHandler","QuestionWrapper","Content","questionnaireQuestions","setQuestionnaireQuestions","answerData","copiedQuestionArr","answeredQuestion","onQuestionFinishedHandler","ContentWrapper","Content__Cta","questionnaireData","questionnaireId","questionNo","questionnaireSubmitted","Questionnaire","isAtQuestionnaireIntro","setIsAtQuestionnaireIntro","questionnaireFinished","setQuestionnaireFinished","questionnaires","onQuestionnaireSubmittedHandler","Questionnaire__Exit","onQuestionnaireExited","Course","courseNavItems","courseForum","currentWeek","sectionIndex","isOnMainMenu","isOnQuizMode","isOnCreatePostMode","isOnQuestionnaireMode","onNavigationItemClickedHandler","modifiedCourseNavItems","onCourseActivityEnabledHandler","onCourseActivityExitedHandler","onSectionSelectedHandler","onBackToMainMenuHandler","onCreatePostModeToggledHandler","onForumPostCreatedHandler","forumId","Authorization","getItem","axiosPost","axiosForum","newForumResponse","forum","onForumPostEditedHandler","onForumPostDeletedHandler","copiedCourseForum","copiedCourseForumPosts","onForumPostRespondedHandler","fetchedCourse","forumResp","courseLandingData","activeNavigation","introduction","coursePageContent","Course__Loader","Course__Title","CourseContainer","component","Logout","async","expirationDate","Boolean","hostname","initialState","updateObject","oldObject","updatedProperties","reducer","username","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","authReducer","applyMiddleware","thunk","app","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a8915be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseEnrollment\":\"CourseEnrollment_CourseEnrollment__15_VV\",\"CourseEnrollment__Header\":\"CourseEnrollment_CourseEnrollment__Header__KpOHF\",\"CourseEnrollment__Body\":\"CourseEnrollment_CourseEnrollment__Body__25Nh5\",\"CourseEnrollment__Body__Enrolled\":\"CourseEnrollment_CourseEnrollment__Body__Enrolled__3WHah\",\"CourseEnrollment__Body__NonEnrolled\":\"CourseEnrollment_CourseEnrollment__Body__NonEnrolled__3xXSQ\",\"CourseEnrollment__Body__Cta\":\"CourseEnrollment_CourseEnrollment__Body__Cta__3_kRN\",\"CourseEnrollment__Cta\":\"CourseEnrollment_CourseEnrollment__Cta__C9lhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PasswordChange\":\"PasswordChange_PasswordChange__2zeyq\",\"PasswordChange__Header\":\"PasswordChange_PasswordChange__Header__2CQ2J\",\"PasswordChange__Form__Warning\":\"PasswordChange_PasswordChange__Form__Warning__16n4Z\",\"PasswordChange__Cta\":\"PasswordChange_PasswordChange__Cta__2Pedy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountDataChange\":\"AccountDataChange_AccountDataChange__32kgd\",\"AccountDataChange__Header\":\"AccountDataChange_AccountDataChange__Header__1aUYd\",\"AccountDataChange__Form__Warning\":\"AccountDataChange_AccountDataChange__Form__Warning__EsTTC\",\"AccountDataChange__Cta\":\"AccountDataChange_AccountDataChange__Cta__DBdE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseInfo\":\"CourseInfo_CourseInfo__ujP5h\",\"CourseInfo__Image\":\"CourseInfo_CourseInfo__Image__4K8s5\",\"CourseInfo__Body\":\"CourseInfo_CourseInfo__Body__qtYpK\",\"CourseInfo__Faculty\":\"CourseInfo_CourseInfo__Faculty__1lRMk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreatePost\":\"CreatePost_CreatePost__1DhVY\",\"CreatePost__Header\":\"CreatePost_CreatePost__Header__3CqVZ\",\"CreatePost__Body\":\"CreatePost_CreatePost__Body__3G4d3\",\"CreatePost__Cta\":\"CreatePost_CreatePost__Cta__2-Ki7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreatePostComment\":\"CreatePostComment_CreatePostComment__39Pl3\",\"CreatePostComment__Close\":\"CreatePostComment_CreatePostComment__Close__1bcI-\",\"CreatePostComment__Header\":\"CreatePostComment_CreatePostComment__Header__1EXDy\",\"CreatePostComment__Form\":\"CreatePostComment_CreatePostComment__Form__17SYI\",\"CreatePostComment__Form__Cta\":\"CreatePostComment_CreatePostComment__Form__Cta__24x6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContainer\":\"Modal_ModalContainer__3gJ51\",\"scaleUp\":\"Modal_scaleUp__1mF6v\",\"ModalContainer__Closed\":\"Modal_ModalContainer__Closed__PNIRq\",\"scaleDown\":\"Modal_scaleDown__NnwbL\",\"Modal\":\"Modal_Modal__-cgHh\",\"ModalContent\":\"Modal_ModalContent__3Fjgn\",\"ModalContent__Header\":\"Modal_ModalContent__Header__3ka4E\",\"ModalContent__Text\":\"Modal_ModalContent__Text__3v3gY\",\"ModalContent__Text__Icon\":\"Modal_ModalContent__Text__Icon__TorxQ\",\"ModalClose\":\"Modal_ModalClose__2UkjW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizEnd\":\"QuizEnd_QuizEnd__3lBYZ\",\"QuizEnd__Header\":\"QuizEnd_QuizEnd__Header__1YyU9\",\"QuizEnd__Content\":\"QuizEnd_QuizEnd__Content__jyN5S\",\"QuizEnd__Content__Text\":\"QuizEnd_QuizEnd__Content__Text__1gQPw\",\"QuizEnd__Content__Visual\":\"QuizEnd_QuizEnd__Content__Visual__35RDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuestionResult\":\"QuestionResult_QuestionResult__1Uwdw\",\"QuestionResult__QuestionNumber\":\"QuestionResult_QuestionResult__QuestionNumber__2NM5_\",\"QuestionResult__Icon\":\"QuestionResult_QuestionResult__Icon__208JS\",\"QuestionResult__Icon__Correct\":\"QuestionResult_QuestionResult__Icon__Correct__3vbEq\",\"QuestionResult__Icon__Incorrect\":\"QuestionResult_QuestionResult__Icon__Incorrect__1-Cw6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SliderQuestion\":\"SliderQuestion_SliderQuestion__1Gzi1\",\"SliderQuestion__Slider__Input\":\"SliderQuestion_SliderQuestion__Slider__Input__3KoHh\",\"SliderQuestion__Slider__Input__Value\":\"SliderQuestion_SliderQuestion__Slider__Input__Value__VvtgX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropContainer\":\"DragAndDrop_DropContainer__2KLQr\",\"DropContainerEnter\":\"DragAndDrop_DropContainerEnter__E2RfR\",\"FileSelect\":\"DragAndDrop_FileSelect__3XUfe\",\"ContentText\":\"DragAndDrop_ContentText__SxNDj\",\"InvalidFileType\":\"DragAndDrop_InvalidFileType__3Tgfe\",\"ValidFileType\":\"DragAndDrop_ValidFileType__IaUB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminAccordionMenu__label\":\"AdminAccordionMenu_AdminAccordionMenu__label__-wwp3\",\"AdminAccordionMenu__inner\":\"AdminAccordionMenu_AdminAccordionMenu__inner__BF3bQ\",\"AdminAccordionMenu__content\":\"AdminAccordionMenu_AdminAccordionMenu__content__2HY-x\",\"AdminAccordionMenu\":\"AdminAccordionMenu_AdminAccordionMenu__1ud5n\",\"AdminAccordionMenu__label__border\":\"AdminAccordionMenu_AdminAccordionMenu__label__border__ie9iH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableWrapper\":\"Table_TableWrapper__1EYYt\",\"Table\":\"Table_Table__2OL5o\",\"Table__Row\":\"Table_Table__Row__2C1ES\",\"Table__Row__Icon\":\"Table_Table__Row__Icon__Xl14o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateQuiz\":\"CreateQuiz_CreateQuiz__3oE9V\",\"CreateQuiz__Header\":\"CreateQuiz_CreateQuiz__Header__1X_I1\",\"CreateQuiz__Body\":\"CreateQuiz_CreateQuiz__Body__igFh4\",\"CreateQuiz__Cta\":\"CreateQuiz_CreateQuiz__Cta__1vGSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountItem\":\"AccountItem_AccountItem__1eXyK\",\"AccountItem__Profile\":\"AccountItem_AccountItem__Profile__2Vr-X\",\"AccountItem__Profile__Picture\":\"AccountItem_AccountItem__Profile__Picture__296t_\",\"AccountItem__Menu\":\"AccountItem_AccountItem__Menu__cvtKG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PasswordReset\":\"PasswordReset_PasswordReset__dcqX4\",\"PasswordReset__Header\":\"PasswordReset_PasswordReset__Header__1NBN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseList\":\"CourseList_CourseList__VZ7sF\",\"CourseList__Header\":\"CourseList_CourseList__Header__1zf4j\",\"CourseList__Content\":\"CourseList_CourseList__Content__1luCZ\",\"CourseList__Loader\":\"CourseList_CourseList__Loader__6mIWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseSectionSidebarItem\":\"CourseSectionSidebarItem_CourseSectionSidebarItem__1zI6d\",\"CourseSectionSidebarItem__Main\":\"CourseSectionSidebarItem_CourseSectionSidebarItem__Main__2yZwz\",\"CourseSectionSidebarItem__List\":\"CourseSectionSidebarItem_CourseSectionSidebarItem__List__nkeSH\",\"CourseSectionSidebarItem__List__Icon\":\"CourseSectionSidebarItem_CourseSectionSidebarItem__List__Icon__2sBgv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RadioGroup\":\"RadioButton_RadioGroup__1yKfD\",\"RadioButton\":\"RadioButton_RadioButton__14Wqs\",\"RadioButton__Input\":\"RadioButton_RadioButton__Input__-XdWC\",\"RadioButton__Label\":\"RadioButton_RadioButton__Label__2Rcxj\"};","module.exports = __webpack_public_path__ + \"static/media/sprite.01cf7e2a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InfoBox\":\"InfoBox_InfoBox__cMskB\",\"InfoBox__Header\":\"InfoBox_InfoBox__Header__3R4Ge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MiniButton\":\"MiniButton_MiniButton__2xGDu\",\"MiniButton__Active\":\"MiniButton_MiniButton__Active__3DY3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubSectionItem\":\"SubSectionItem_SubSectionItem__2QvMW\",\"SubSectionItem__Cta\":\"SubSectionItem_SubSectionItem__Cta__3lGhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FileUpload\":\"FileUpload_FileUpload__1pVwy\",\"FileUploadHeader\":\"FileUpload_FileUploadHeader__Vdmpc\",\"Form\":\"FileUpload_Form__3Xeu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminCourseList\":\"AdminCourseList_AdminCourseList__gaMlf\",\"AdminCourseList__Header\":\"AdminCourseList_AdminCourseList__Header__2rhdp\",\"AdminCourseList__Body\":\"AdminCourseList_AdminCourseList__Body__3qLdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserItem\":\"UserItem_UserItem__36Tvs\",\"UserItem__Active\":\"UserItem_UserItem__Active__3Mtdg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminUserCard\":\"AdminUserCard_AdminUserCard__2IgLx\",\"AdminUserCard__Cta\":\"AdminUserCard_AdminUserCard__Cta__2MD2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateUser\":\"CreateUser_CreateUser__A46Ne\",\"CreateUser__Header\":\"CreateUser_CreateUser__Header__2LRi4\",\"CreateUser__Form\":\"CreateUser_CreateUser__Form__1Cyx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolbarWrapper\":\"Toolbar_ToolbarWrapper__3im4k\",\"Toolbar\":\"Toolbar_Toolbar__2SxNU\",\"Toolbar__Main\":\"Toolbar_Toolbar__Main__2MYNm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"NavigationItems_Navigation__11upe\",\"Navigation__Items\":\"NavigationItems_Navigation__Items__1WDyp\",\"Navigation__Auth\":\"NavigationItems_Navigation__Auth__1Lmc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1AORq\",\"Link\":\"NavigationItem_Link__Fqtjy\",\"ActiveLink\":\"NavigationItem_ActiveLink__34Hsc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignupSuccess\":\"SignupSuccess_SignupSuccess__14-sH\",\"SignupSuccess__Header\":\"SignupSuccess_SignupSuccess__Header__k6BX3\",\"SignupSuccess__Content\":\"SignupSuccess_SignupSuccess__Content__2nzg2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loader_Spinner__PLvjF\",\"Circular\":\"Loader_Circular__15Vpv\",\"rotate\":\"Loader_rotate__3JVOZ\",\"Stroke\":\"Loader_Stroke__Imdbe\",\"dash\":\"Loader_dash__1IREe\",\"color\":\"Loader_color__KRuSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Course\":\"Course_Course__HnlM1\",\"Course__Title\":\"Course_Course__Title__pzPsL\",\"Course__Loader\":\"Course_Course__Loader__1H602\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostComment\":\"PostComment_PostComment__30mpU\",\"PostComment__Header\":\"PostComment_PostComment__Header__1fD7U\",\"PostComment__Content\":\"PostComment_PostComment__Content__3kHG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseMenu__Intro\":\"CourseMenu_CourseMenu__Intro__3_AIt\",\"CourseMenu__Misc\":\"CourseMenu_CourseMenu__Misc__3GNwh\",\"CourseMenu__Cta\":\"CourseMenu_CourseMenu__Cta__2FC67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizIntro\":\"QuizIntro_QuizIntro__2czEU\",\"QuizIntro__Header\":\"QuizIntro_QuizIntro__Header__1-iBI\",\"QuizIntro__Cta\":\"QuizIntro_QuizIntro__Cta__3MkIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProgressBar\":\"ProgressBar_ProgressBar__14eCC\",\"ProgressBar__Background\":\"ProgressBar_ProgressBar__Background__3Pi-Z\",\"ProgressBar__Foreground\":\"ProgressBar_ProgressBar__Foreground__3RBPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Intro\":\"Intro_Intro__17oV9\",\"Intro__Header\":\"Intro_Intro__Header__3NhCk\",\"Intro__Cta\":\"Intro_Intro__Cta__1V3_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContentWrapper\":\"Content_ContentWrapper__RtvPD\",\"Content\":\"Content_Content__2aLwy\",\"Content__Cta\":\"Content_Content__Cta__ptult\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MultipleChoiceQuestion\":\"MultipleChoiceQuestion_MultipleChoiceQuestion__1s67V\",\"MultipleChoiceQuestion__Text\":\"MultipleChoiceQuestion_MultipleChoiceQuestion__Text__2zsOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SliderCombinationQuestion__Text\":\"SliderCombinationQuestion_SliderCombinationQuestion__Text__2j8Ss\",\"SliderCombinationQuestion__SubSliders\":\"SliderCombinationQuestion_SliderCombinationQuestion__SubSliders__1tBvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Graph\":\"Graph_Graph__3GXKP\",\"Graph__Header\":\"Graph_Graph__Header__2cr-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseStats\":\"CourseStats_CourseStats__3aNa7\",\"CourseStats__Header\":\"CourseStats_CourseStats__Header__2aRdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackCondition\":\"FeedbackCondition_FeedbackCondition__1Bbfa\",\"FeedbackCondition__Icon\":\"FeedbackCondition_FeedbackCondition__Icon__1KqZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SectionFormControl\":\"SectionFormControl_SectionFormControl__3rFeJ\",\"SectionFormControl__Remove\":\"SectionFormControl_SectionFormControl__Remove__2f1Dv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectInputWrapper\":\"SelectInput_SelectInputWrapper__30dvY\",\"SelectInput\":\"SelectInput_SelectInput__3s0_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserPool\":\"UserPool_UserPool__3nxrA\",\"UserPool__Body\":\"UserPool_UserPool__Body__3HML3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseListElement\":\"CourseListElement_CourseListElement__1nCNs\",\"CourseListElement__Content\":\"CourseListElement_CourseListElement__Content__Vggmd\",\"CourseListElement__Side\":\"CourseListElement_CourseListElement__Side__1MmW3\",\"CourseListElement__Side__Front\":\"CourseListElement_CourseListElement__Side__Front__3KoNo\",\"CourseListElement__Side__Back\":\"CourseListElement_CourseListElement__Side__Back__1s3vY\",\"CourseListElement__Side__Back__1\":\"CourseListElement_CourseListElement__Side__Back__1__1Kbww\",\"CourseListElement__Side__Back__2\":\"CourseListElement_CourseListElement__Side__Back__2__1nsnV\",\"CourseListElement__Side__Back__3\":\"CourseListElement_CourseListElement__Side__Back__3__1uvO3\",\"CourseListElement__Picture\":\"CourseListElement_CourseListElement__Picture__2G2I0\",\"CourseListElement__Heading\":\"CourseListElement_CourseListElement__Heading__12iNG\",\"CourseListElement__Heading__1\":\"CourseListElement_CourseListElement__Heading__1__2ngem\",\"CourseListElement__Heading__2\":\"CourseListElement_CourseListElement__Heading__2__1fyaj\",\"CourseListElement__Heading__3\":\"CourseListElement_CourseListElement__Heading__3__3DP64\",\"CourseListElement__Description\":\"CourseListElement_CourseListElement__Description__2NKpr\",\"CourseListElement__Description__FacultyList\":\"CourseListElement_CourseListElement__Description__FacultyList__1QL34\",\"CourseListElement__Description__FacultyList__Item\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__1173o\",\"CourseListElement__Description__FacultyList__Item__1\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__1__2OILi\",\"CourseListElement__Description__FacultyList__Item__2\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__2__1WYQq\",\"CourseListElement__Description__FacultyList__Item__3\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__3__35hPJ\",\"CourseListElement__Cta\":\"CourseListElement_CourseListElement__Cta__1KcQy\",\"CourseListElement__Cta__Link\":\"CourseListElement_CourseListElement__Cta__Link__7GXFU\",\"CourseListElement__Cta__Link__Icon\":\"CourseListElement_CourseListElement__Cta__Link__Icon__3pJpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminUserList\":\"AdminUserList_AdminUserList__2Esl7\",\"AdminUserList__Header\":\"AdminUserList_AdminUserList__Header__2e6ao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseForum\":\"CourseForum_CourseForum__1SptO\",\"CourseForum__Cta\":\"CourseForum_CourseForum__Cta__1_lkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostList\":\"PostList_PostList__1WtTj\",\"PostList__Header\":\"PostList_PostList__Header__1UgNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paginator\":\"Paginator_Paginator__2pUpa\",\"ItemPerPage\":\"Paginator_ItemPerPage__1QDE0\",\"PaginatorButtons\":\"Paginator_PaginatorButtons__2R5-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PrevButton\":\"PrevButton_PrevButton__1oNTJ\",\"ArrowIcon\":\"PrevButton_ArrowIcon__3X2eq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NextButton\":\"NextButton_NextButton__2TYZd\",\"ArrowIcon\":\"NextButton_ArrowIcon__9-Dwn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"QuizContainer_Quiz__2R0RO\",\"Quiz__Exit\":\"QuizContainer_Quiz__Exit__7LieL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Questionnaire\":\"Questionnaire_Questionnaire__2fUlC\",\"Questionnaire__Exit\":\"Questionnaire_Questionnaire__Exit__26ve9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminHome\":\"AdminHome_AdminHome__1qbgX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminNavigation\":\"AdminNavigation_AdminNavigation__13d_9\",\"AdminNavigation__Item\":\"AdminNavigation_AdminNavigation__Item__2ybbL\",\"AdminNavigation__Item__Menu\":\"AdminNavigation_AdminNavigation__Item__Menu__3QyHF\",\"AdminNavigation__Item__Menu__Opened\":\"AdminNavigation_AdminNavigation__Item__Menu__Opened__3fOMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PasswordFeedback\":\"PasswordFeedback_PasswordFeedback__OECxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__1UWE0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuItem\":\"MenuItem_MenuItem__1RMuE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageBreak\":\"PageBreak_PageBreak__1oiDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"File_Input__1fQwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectOptions\":\"Options_SelectOptions__12sD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostDetailContainer\":\"PostDetail_PostDetailContainer__38zm7\",\"PostDetailContainer__Cta\":\"PostDetail_PostDetailContainer__Cta__2q8yk\",\"PostDetail\":\"PostDetail_PostDetail__29DFb\",\"PostDetail__Header\":\"PostDetail_PostDetail__Header__2vco9\",\"PostDetail__Header__Title\":\"PostDetail_PostDetail__Header__Title__3l1sn\",\"PostDetail__Header__TimeContainer\":\"PostDetail_PostDetail__Header__TimeContainer__3HN_M\",\"PostDetail__Header__TimeContainer__Time\":\"PostDetail_PostDetail__Header__TimeContainer__Time__1WME5\",\"PostDetail__Header__TimeContainer__Tooltip\":\"PostDetail_PostDetail__Header__TimeContainer__Tooltip___Imon\",\"PostDetail__Body\":\"PostDetail_PostDetail__Body__3nICe\",\"PostDetail__Cta\":\"PostDetail_PostDetail__Cta__2Gd8E\",\"PostComments\":\"PostDetail_PostComments__31Xo1\",\"PostComments__Overflow\":\"PostDetail_PostComments__Overflow__3B-74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Option\":\"Option_Option__3VuPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListElement\":\"ListElement_ListElement__2lzqu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Administration\":\"Administration_Administration__2H3p8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2GijV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1sj81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Authentication\":\"Authentication_Authentication__1w6vB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseNavigation\":\"CourseNavigation_CourseNavigation__3Osuh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostCommentList\":\"PostCommentList_PostCommentList__25SPV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaginationRange\":\"PaginationRange_PaginationRange__3g2z3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseSubSectionSidebar\":\"CourseSubSectionSidebar_CourseSubSectionSidebar__2sPer\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizContent\":\"QuizContent_QuizContent__1_Wdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuccessCheck\":\"SuccessCheck_SuccessCheck__k1GAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Finish\":\"Finish_Finish__lYL_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuestionWrapper\":\"Question_QuestionWrapper__1DkAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"CourseSection_Section__3p9dm\",\"Section__Content\":\"CourseSection_Section__Content__3MWkg\",\"Section__Container\":\"CourseSection_Section__Container__WdGY0\",\"Section__Title\":\"CourseSection_Section__Title__1fQk1\",\"Section__List\":\"CourseSection_Section__List__1SYNB\",\"Section__ListItem\":\"CourseSection_Section__ListItem__2qjj8\",\"Section__ListButton\":\"CourseSection_Section__ListButton__IEQLN\",\"Section__ListIcon\":\"CourseSection_Section__ListIcon__1yMQz\",\"BackMenu__Button\":\"CourseSection_BackMenu__Button__wcsrK\",\"BackMenu__Icon\":\"CourseSection_BackMenu__Icon__i0p3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeaturedInfo\":\"FeaturedInfo_FeaturedInfo__1A6OS\",\"FeaturedInfo__Body\":\"FeaturedInfo_FeaturedInfo__Body__1fXsY\",\"FeaturedInfo__Body__Amount\":\"FeaturedInfo_FeaturedInfo__Body__Amount__2ddRL\",\"FeaturedInfo__Body__Percentage\":\"FeaturedInfo_FeaturedInfo__Body__Percentage__1pKim\",\"FeaturedInfo__Body__Icon\":\"FeaturedInfo_FeaturedInfo__Body__Icon__3p3Yt\",\"FeaturedInfo__Body__Icon__Increase\":\"FeaturedInfo_FeaturedInfo__Body__Icon__Increase__1vL0N\",\"FeaturedInfo__Body__Icon__Decrease\":\"FeaturedInfo_FeaturedInfo__Body__Icon__Decrease__1DvTt\",\"FeaturedInfo__Footer\":\"FeaturedInfo_FeaturedInfo__Footer__Je87N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseHome\":\"CourseHome_CourseHome__HqeK2\",\"CourseHome__Header\":\"CourseHome_CourseHome__Header__2cfyq\",\"CourseHome__SectionList\":\"CourseHome_CourseHome__SectionList__1MmWy\",\"CourseHome__SectionList__List\":\"CourseHome_CourseHome__SectionList__List__fq98m\",\"CourseHome__SectionList__Cta\":\"CourseHome_CourseHome__SectionList__Cta__3whW3\",\"CourseHome__Activities\":\"CourseHome_CourseHome__Activities__1WEZd\",\"CourseHome__Activities__List\":\"CourseHome_CourseHome__Activities__List__2t-Rs\",\"CourseHome__Activities__Cta\":\"CourseHome_CourseHome__Activities__Cta__3acfQ\",\"CourseHome__UserEnrollment\":\"CourseHome_CourseHome__UserEnrollment__rg9iR\",\"CourseHome__UserEnrollment__Cta\":\"CourseHome_CourseHome__UserEnrollment__Cta__3rNfv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3-BUU\",\"ValidationError\":\"Input_ValidationError__1bHwl\",\"InputElement\":\"Input_InputElement__2ZNLz\",\"InputElement__Label\":\"Input_InputElement__Label__13D2c\",\"InputElement__Label__White\":\"Input_InputElement__Label__White__AFfay\",\"Invalid\":\"Input_Invalid__3oLC1\",\"SelectElement\":\"Input_SelectElement__4tB1P\",\"TextArea\":\"Input_TextArea__343bn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3rE_2\",\"Login__Overlay\":\"Login_Login__Overlay__1qL9t\",\"Login__Overlay__Active\":\"Login_Login__Overlay__Active__3cQ7j\",\"Login__Form__Header\":\"Login_Login__Form__Header__3D2Fd\",\"Login__Form__Cta\":\"Login_Login__Form__Cta__HvIKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__33OkN\",\"ButtonDanger\":\"Button_ButtonDanger__wiXM0\",\"ButtonSecondary\":\"Button_ButtonSecondary__3n5zi\",\"ButtonSmall\":\"Button_ButtonSmall__1RuLB\"};","module.exports = __webpack_public_path__ + \"static/media/spine.303de4cf.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signup\":\"Signup_Signup__1BG1n\",\"Signup__Close\":\"Signup_Signup__Close__3pM3a\",\"Signup__Active\":\"Signup_Signup__Active__2M9Zp\",\"Signup__Form__Header\":\"Signup_Signup__Form__Header__1gj4d\",\"Signup__Form__Cta\":\"Signup_Signup__Form__Cta__khlKj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Question\":\"Question_Question__3_BDr\",\"Question__Number\":\"Question_Question__Number__3msfV\",\"Question__Text\":\"Question_Question__Text__2ZmGj\",\"Question__Text__CaseIcon\":\"Question_Question__Text__CaseIcon__3hlZH\",\"Question__Choices\":\"Question_Question__Choices__2pynl\",\"Question__Cta\":\"Question_Question__Cta__3wxcr\",\"Question__Select\":\"Question_Question__Select__EfvkZ\",\"Question__Select__Icon\":\"Question_Question__Select__Icon__1K78X\"};","var map = {\n\t\"./failure_cross\": 286,\n\t\"./failure_cross.json\": 286,\n\t\"./success_check\": 206,\n\t\"./success_check.json\": 206\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 541;","export const featuredData = {\r\n    revenue: {\r\n        amount: 2454,\r\n        percentage: -11.4\r\n    },\r\n    sales: {\r\n        amount: 4454,\r\n        percentage: -1.4\r\n    },\r\n    cost: {\r\n        amount: 1923,\r\n        percentage: +3.1\r\n    }\r\n};\r\n\r\nexport const userData = [\r\n    {\r\n      \"Month\": \"Jan\",\r\n      \"Active User\": 4000,\r\n    },\r\n    {\r\n      \"Month\": \"Feb\",\r\n      \"Active User\": 3000,\r\n    },\r\n    {\r\n      \"Month\": \"Mar\",\r\n      \"Active User\": 5000,\r\n    },\r\n    {\r\n      \"Month\": \"Apr\",\r\n      \"Active User\": 4000,\r\n    },\r\n    {\r\n      \"Month\": \"May\",\r\n      \"Active User\": 3000,\r\n    },\r\n    {\r\n      \"Month\": \"Jun\",\r\n      \"Active User\": 2000,\r\n    },\r\n    {\r\n      \"Month\": \"Jul\",\r\n      \"Active User\": 4000,\r\n    },\r\n    {\r\n      \"Month\": \"Agu\",\r\n      \"Active User\": 3000,\r\n    },\r\n    {\r\n      \"Month\": \"Sep\",\r\n      \"Active User\": 4000,\r\n    },\r\n    {\r\n      \"Month\": \"Oct\",\r\n      \"Active User\": 1000,\r\n    },\r\n    {\r\n      \"Month\": \"Nov\",\r\n      \"Active User\": 4000,\r\n    },\r\n    {\r\n      \"Month\": \"Dec\",\r\n      \"Active User\": 3000,\r\n    },\r\n];\r\n\r\nexport const quizData = [\r\n    {\r\n        _id: 'abcd1',\r\n        firstName: 'John',\r\n        lastName: 'Doe',\r\n        answers: [\r\n            { questionNumber: 1, selectedIndex: 2, correctIndex: 1, isCorrect: false },\r\n            { questionNumber: 2, selectedIndex: 0, correctIndex: 0, isCorrect: true },\r\n            { questionNumber: 3, selectedIndex: 3, correctIndex: 3, isCorrect: true },\r\n            { questionNumber: 4, selectedIndex: 1, correctIndex: 0, isCorrect: false },\r\n            { questionNumber: 5, selectedIndex: 3, correctIndex: 3, isCorrect: true },\r\n            { questionNumber: 6, selectedIndex: 2, correctIndex: 1, isCorrect: false },\r\n            { questionNumber: 7, selectedIndex: 0, correctIndex: 0, isCorrect: true }\r\n        ]\r\n    }, {\r\n        _id: 'abcd2',\r\n        firstName: 'Jane',\r\n        lastName: 'Doedoe',\r\n        answers: [\r\n            { questionNumber: 1, selectedIndex: 1, correctIndex: 1, isCorrect: true },\r\n            { questionNumber: 2, selectedIndex: 0, correctIndex: 0, isCorrect: true },\r\n            { questionNumber: 3, selectedIndex: 3, correctIndex: 3, isCorrect: true },\r\n            { questionNumber: 4, selectedIndex: 2, correctIndex: 0, isCorrect: false },\r\n            { questionNumber: 5, selectedIndex: 2, correctIndex: 3, isCorrect: false },\r\n            { questionNumber: 6, selectedIndex: 1, correctIndex: 1, isCorrect: true },\r\n            { questionNumber: 7, selectedIndex: 0, correctIndex: 0, isCorrect: true }\r\n        ]\r\n    }, {\r\n        _id: 'abcd3',\r\n        firstName: 'Jordan',\r\n        lastName: 'Do',\r\n        answers: [\r\n            { questionNumber: 1, selectedIndex: 1, correctIndex: 1, isCorrect: true },\r\n            { questionNumber: 2, selectedIndex: 0, correctIndex: 0, isCorrect: true },\r\n            { questionNumber: 3, selectedIndex: 2, correctIndex: 3, isCorrect: false },\r\n            { questionNumber: 4, selectedIndex: 1, correctIndex: 0, isCorrect: false },\r\n            { questionNumber: 5, selectedIndex: 2, correctIndex: 3, isCorrect: false },\r\n            { questionNumber: 6, selectedIndex: 1, correctIndex: 1, isCorrect: true },\r\n            { questionNumber: 7, selectedIndex: 3, correctIndex: 0, isCorrect: false }\r\n        ]\r\n    }\r\n]","const firstLettersUpper = (string) => {\r\n    return ((string || '').replace(/-/g, ' ').split(' ').map(function (word) {\r\n        return (((word[0] || '').toUpperCase() + word.slice(1))).trim();\r\n    }).join(' ')).trim();\r\n}\r\n\r\nexport default firstLettersUpper;","import React from 'react';\r\n\r\nimport classes from './InfoBox.module.scss';\r\n\r\nconst InfoBox = props => {\r\n    return (\r\n        <article className={classes.InfoBox}>\r\n            <header className={classes.InfoBox__Header}>\r\n                <h2>\r\n                    {props.title}\r\n                </h2>\r\n            </header>\r\n\r\n            <div className={classes.InfoBox__Body}>\r\n                {props.children}\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default InfoBox;","import React from 'react';\r\n\r\nimport svg from '../../../../assets/images/sprite.svg';\r\nimport classes from './FeaturedInfo.module.scss';\r\nimport { featuredData } from '../../../../assets/exampleData';\r\nimport firstLetterUpper from '../../../../utility/firstLetterUpper';\r\nimport InfoBox from '../../../UI/InfoBox/InfoBox';\r\n\r\nconst FeaturedInfo = () => {\r\n    const data = featuredData;\r\n\r\n    return (\r\n        <div className={classes.FeaturedInfo}>\r\n            {Object.keys(data).map(item => {\r\n                let percentage = data[item].percentage;\r\n\r\n                return <InfoBox key={item} title={firstLetterUpper(item)}>\r\n                    <div className={classes.FeaturedInfo__Body}>\r\n                        <span className={classes.FeaturedInfo__Body__Amount}>{`$${data[item].amount}`}</span>\r\n\r\n                        <span className={classes.FeaturedInfo__Body__Percentage}>{`${percentage > 0 ? '+' : ''}${percentage}`}</span>\r\n\r\n                        <svg className={percentage > 0 ?\r\n                            [classes.FeaturedInfo__Body__Icon, classes.FeaturedInfo__Body__Icon__Increase].join(' ') :\r\n                            [classes.FeaturedInfo__Body__Icon, classes.FeaturedInfo__Body__Icon__Decrease].join(' ')}>\r\n                            <use xlinkHref={`${svg}#icon-arrow-${percentage > 0 ? 'up' : 'down'}`}></use>\r\n                        </svg>\r\n                    </div>\r\n\r\n                    <footer className={classes.FeaturedInfo__Footer}>\r\n                        Compared to last month\r\n                    </footer>\r\n                </InfoBox>;\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeaturedInfo;","import React from 'react';\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    BarChart,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    ResponsiveContainer,\r\n    Label,\r\n    Legend\r\n} from 'recharts';\r\n\r\nimport classes from './Graph.module.scss';\r\n\r\n// TODO: Add additional properties to increase variety\r\nconst Graph = props => {\r\n    let graphType = props.graphType || 'line';\r\n\r\n    let pageContent = (\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart\r\n                width={500}\r\n                height={300}\r\n                data={props.data}\r\n                margin={{\r\n                    top: 5,\r\n                    right: 5,\r\n                    left: 5,\r\n                    bottom: 5,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey={props.dataKeyxAxis}>\r\n                    <Label value={props.dataKeyxAxis} offset={0} position=\"insideBottom\" />\r\n                </XAxis>\r\n                \r\n                <YAxis dataKey={props.dataKeyyAxis}>\r\n                    <Label value={props.dataKeyyAxis} angle=\"-90\" position=\"insideLeft\" textAnchor=\"middle\" />\r\n                </YAxis>\r\n                <Tooltip />\r\n                <Line type=\"monotone\" dataKey={props.dataKeyName} stroke=\"#000000\" />\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    );\r\n\r\n    if (graphType === 'bar') {\r\n        pageContent = (\r\n            <BarChart width={600} height={250} data={props.data}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey='name' />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                {props.bars.map(bar => {\r\n                    return <Bar key={bar.name} dataKey={bar.name} fill={bar.color} />\r\n                })}\r\n            </BarChart>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Graph}>\r\n            <header className={classes.Graph__Header}>\r\n                <h2>{props.graphTitle}</h2>\r\n            </header>\r\n\r\n            {pageContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph;","import React from 'react';\r\n\r\nimport classes from './AdminHome.module.scss';\r\nimport FeaturedInfo from './FeaturedInfo/FeaturedInfo';\r\nimport Graph from '../../Graph/Graph';\r\nimport { userData } from '../../../assets/exampleData';\r\n\r\nconst AdminHome = () => {\r\n    return (\r\n        <div className={classes.AdminHome}>\r\n            <FeaturedInfo />\r\n\r\n            <Graph\r\n                data={userData}\r\n                graphTitle='Active User Details'\r\n                dataKeyxAxis='Month'\r\n                dataKeyyAxis='Active User'\r\n                dataKeyName='Active User'\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminHome;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './AdminAccordionMenuItem.module.scss';\r\nimport svg from '../../../../../assets/images/sprite.svg';\r\n\r\nconst AdminAccordionMenuItem = props => {\r\n    let data = props.data;\r\n\r\n    // TODO: Include the react router\r\n\r\n    return (\r\n        <li className={classes.AdminAccordionMenuItem}>\r\n            <svg className={classes.AdminAccordionMenuItem__Icon}>\r\n                <use xlinkHref={`${svg}#icon-${data.icon}`}></use>\r\n            </svg>\r\n\r\n            <span className={classes.AdminAccordionMenuItem__Label}>\r\n                <NavLink\r\n                    to={data.path}\r\n                    className={classes.AdminAccordionMenuItem__Link}\r\n                    activeClassName={classes.AdminAccordionMenuItem__ActiveLink}\r\n                    exact={data.isExact}\r\n                >{data.name}</NavLink>\r\n            </span>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default AdminAccordionMenuItem;","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport classes from './AdminAccordionMenu.module.scss';\r\nimport AdminAccordionMenuItem from './AdminAccordionMenuItem/AdminAccordionMenuItem';\r\n\r\nconst AdminAccordionMenu = props => {\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [height, setHeight] = useState(0);\r\n\r\n    const innerElementRef = useRef(null);\r\n    let timeout = useRef(null);\r\n\r\n    useEffect(() => {\r\n        timeout.current = setTimeout(() => {\r\n            setHeight(innerElementRef.current.scrollHeight);\r\n        }, 333);\r\n\r\n        return () => {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }, []);\r\n\r\n    const toggleMenu = () => {\r\n        setIsActive(prevState => !prevState);\r\n    }\r\n\r\n    const innerStyle = {\r\n        height: `${isActive ? height : 0}px`\r\n    };\r\n\r\n    return (\r\n        <div className={classes.AdminAccordionMenu} aria-expanded={isActive}>\r\n            <button className={classes.AdminAccordionMenu__label} role='tab' onClick={toggleMenu}>\r\n                {props.label}\r\n            </button>\r\n\r\n            <div className={classes.AdminAccordionMenu__inner}\r\n                style={innerStyle}\r\n                aria-hidden={!isActive}\r\n                ref={innerElementRef}>\r\n                <div className={classes.AdminAccordionMenu__content}>\r\n                    <ul>\r\n                        {props.subItems.map((item, index) => {\r\n                            return <AdminAccordionMenuItem key={index} data={item} />\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminAccordionMenu;","export const dashboardData = [\r\n    {\r\n        name: 'Dashboard',\r\n        subMenuItems: [\r\n            {\r\n                name: 'Administration',\r\n                icon: 'home',\r\n                path: '/administration',\r\n                isExact: true\r\n            }, {\r\n                name: 'Analytics',\r\n                icon: 'stats-dots',\r\n                path: '/analytics',\r\n                isExact: true\r\n            }, {\r\n                name: 'Sales',\r\n                icon: 'stats-bars',\r\n                path: '/sales',\r\n                isExact: true\r\n            }\r\n        ]\r\n    }, {\r\n        name: 'Courses',\r\n        subMenuItems: [\r\n            {\r\n                name: 'Management',\r\n                icon: 'folder-open',\r\n                path: '/administration/course-management',\r\n                isExact: true\r\n            }, {\r\n                name: 'Create',\r\n                icon: 'folder-plus',\r\n                path: '/administration/course-management/create-course',\r\n                isExact: true\r\n            }\r\n        ]\r\n    }, {\r\n        name: 'Users',\r\n        subMenuItems: [\r\n            {\r\n                name: 'Management',\r\n                icon: 'users',\r\n                path: '/administration/user-management',\r\n                isExact: true\r\n            }, {\r\n                name: 'Create',\r\n                icon: 'user-plus',\r\n                path: '/administration/user-management/create-user',\r\n                isExact: true\r\n            }\r\n        ]\r\n    }\r\n]","import React from 'react';\r\n\r\nimport classes from './AdminNavigation.module.scss';\r\nimport AdminAccordionMenu from './AdminAccordionMenu/AdminAccordionMenu';\r\nimport { dashboardData } from '../../../assets/admin_dashborad_data';\r\n\r\nconst AdminNavigation = () => {\r\n    return (\r\n        <nav className={classes.AdminNavigation}>\r\n            {dashboardData.map((dashboardItem, index) => {\r\n                return <AdminAccordionMenu\r\n                    key={index}\r\n                    label={dashboardItem.name}\r\n                    subItems={dashboardItem.subMenuItems}\r\n                />;\r\n            })}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default AdminNavigation;","import axios from 'axios';\r\n\r\n// https://glacial-garden-54072.herokuapp.com/api/admin\r\n// http://localhost:8000/api/admin\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://glacial-garden-54072.herokuapp.com/api/admin'\r\n});\r\n\r\nexport default instance;","const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isURL) {\r\n        const pattern = /^(https?|chrome):\\/\\/[^\\s$.?#].[^\\s]*$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.containsNumeric) {\r\n        const pattern = /\\d/g;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.containsSpecial) {\r\n        const pattern = /[!@#$%^&*]/g;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isEnglishOnly) {\r\n        const pattern = /^[a-zA-Z]+$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nexport default checkValidity;","import React from 'react';\r\n\r\nimport classes from './MiniButton.module.scss';\r\n\r\nconst MiniButton = props => {\r\n    let classList = [classes.MiniButton];\r\n\r\n    if (props.isActive) {\r\n        classList = [classes.MiniButton, classes.MiniButton__Active];\r\n    }\r\n\r\n    return (\r\n        <span className={classList.join(' ')} onClick={props.clicked}>\r\n            {props.children}\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default MiniButton;","import React from 'react';\r\n\r\nimport classes from './Table.module.scss';\r\nimport svg from '../../../assets/images/sprite.svg';\r\n\r\nconst Table = props => {\r\n    return (\r\n        <div className={classes.TableWrapper}>\r\n            <table className={classes.Table}>\r\n                <thead>\r\n                    <tr>\r\n                        {props.headers.map(header => {\r\n                            return <th key={header}>{header}</th>\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {props.rows.map((row, index) => {\r\n                        return (\r\n                            <tr key={'AnswerRow' + index}>\r\n                                {row.map((rowData, index) => {\r\n                                    return (\r\n                                        <td key={rowData.value + '_' + index} className={classes.Table__Row}>\r\n                                            {rowData.value}\r\n\r\n                                            {rowData.showIcon || false ?\r\n                                                <svg className={classes.Table__Row__Icon} style={rowData.changeColor ? {fill: '#5B0200'} : {}}>\r\n                                                    <use xlinkHref={`${svg}#icon-${rowData.icon}`}></use>\r\n                                                </svg> : null}\r\n                                        </td>\r\n                                    )\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nimport Table from '../../../../../UI/Table/Table';\r\nimport { quizData } from '../../../../../../assets/exampleData';\r\nimport Graph from '../../../../../Graph/Graph';\r\n\r\nconst QuizStats = props => {\r\n    let headerData = ['Name'];\r\n    let rows = [];\r\n    let questionToUserAnswersData = [];\r\n\r\n    quizData[0].answers.forEach(question => {\r\n        headerData.push('Q' + question.questionNumber);\r\n        questionToUserAnswersData.push({\r\n            name: 'Q' + question.questionNumber,\r\n            correct: 0,\r\n            incorrect: 0\r\n        });\r\n    });\r\n    headerData.push('Correct answers');\r\n    headerData.push('Points');\r\n\r\n    for (let i = 0; i < quizData.length; i++) {\r\n        let data = quizData[i];\r\n        let row = [];\r\n\r\n        row.push({\r\n            value: data.firstName + ' ' + data.lastName\r\n        });\r\n\r\n        data.answers.forEach((answer, index) => {\r\n            row.push({\r\n                value: answer.selectedIndex,\r\n                showIcon: true,\r\n                icon: answer.isCorrect ? 'checkmark' : 'cross',\r\n                changeColor: !answer.isCorrect\r\n            });\r\n\r\n            let copiedQuestionData = {...questionToUserAnswersData[index]};\r\n\r\n            if (answer.isCorrect) {\r\n                copiedQuestionData.correct += 1;\r\n            } else {\r\n                copiedQuestionData.incorrect += 1;\r\n            }\r\n\r\n            questionToUserAnswersData[index] = {...copiedQuestionData}\r\n        });\r\n\r\n        let correctAnswers = data.answers.filter(answer => answer.isCorrect).length;\r\n\r\n        row.push({\r\n            value: correctAnswers\r\n        });\r\n        row.push({\r\n            value: parseFloat(((correctAnswers / data.answers.length) * 100).toFixed(2))\r\n        });\r\n\r\n        rows.push(row);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table headers={headerData} rows={rows} />\r\n\r\n            <Graph\r\n                graphType='bar'\r\n                data={questionToUserAnswersData}\r\n                graphTitle='Users answers'\r\n                dataKeyxAxis='Questions'\r\n                bars={[{ name: 'correct', color: '#6BA006' }, { name: 'incorrect', color: '#AC0B06' }]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuizStats;","import React, { useState } from 'react';\r\n\r\nimport classes from './CourseStats.module.scss';\r\nimport MiniButton from '../../../../UI/MiniButton/MiniButton';\r\nimport QuizStats from './QuizStats/QuizStats';\r\n\r\nconst CourseStats = () => {\r\n    const [statPaginationData, setStatPaginationData] = useState([{\r\n            isActive: true,\r\n            label: 'Quiz'\r\n        }, {\r\n            isActive: false,\r\n            label: 'Questionnaire'\r\n        }]\r\n    );\r\n\r\n    const onPaginationClickedHandler = (index) => {\r\n        setStatPaginationData(prevState => {\r\n            return prevState.map((prevButtonData, i) => {\r\n                if (index === i) {\r\n                    prevButtonData.isActive = true;\r\n                } else {\r\n                    prevButtonData.isActive = false;\r\n                }\r\n\r\n                return prevButtonData;\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <section className={classes.CourseStats}>\r\n            <header className={classes.CourseStats__Header}>\r\n                {statPaginationData.map((button, index) => {\r\n                    return (\r\n                        <MiniButton key={button.label} isActive={button.isActive} clicked={() => onPaginationClickedHandler(index)}>\r\n                            {button.label}\r\n                        </MiniButton>\r\n                    );\r\n                })}\r\n            </header>\r\n\r\n            <div>\r\n                <QuizStats />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CourseStats;","import React from 'react';\r\n\r\nimport classes from './SubSectionItem.module.scss';\r\n\r\nconst SubSectionItem = props => {\r\n    return (\r\n        <li className={classes.SubSectionItem}>\r\n            <span className={classes.SubSectionItem__Name}>{props.name}</span>\r\n\r\n            <span className={classes.SubSectionItem__Cta}>\r\n                <button onClick={props.subsectionEdited}>Edit</button>\r\n\r\n                <button onClick={props.subsectionDeleted}>Delete</button>\r\n            </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default SubSectionItem;","import React from 'react';\r\n\r\nimport classes from './SectionItem.module.scss';\r\nimport SubSectionItem from './SubSectionItem/SubSectionItem';\r\n\r\nconst SectionItem = props => {\r\n    const sectionData = props.sectionData || {};\r\n\r\n    const onSubSectionAdd = () => {\r\n        props.subsectionAdded(sectionData._id);\r\n    }\r\n\r\n    const onSectionDelete = () => {\r\n        props.sectionDeleted(sectionData._id);\r\n    }\r\n\r\n    const onSubSectionEdited = (subsectionId) => {\r\n        props.subsectionEdited({\r\n            section: sectionData._id,\r\n            subsection: subsectionId\r\n        });\r\n    }\r\n\r\n    return (\r\n        <li className={classes.SectionItem}>\r\n            <div className={classes.SectionItem__Name}>\r\n                {sectionData.name}\r\n                \r\n                <button className={classes.SectionItem__Add} onClick={onSubSectionAdd}>Add</button>\r\n\r\n                <button className={classes.SectionItem__Add} onClick={onSectionDelete}>Delete</button>\r\n            </div>\r\n\r\n            <ul className={classes.SectionItem__List}>\r\n                {sectionData.subsections.map(subsection => {\r\n                    return <SubSectionItem\r\n                        key={subsection._id}\r\n                        name={subsection.name}\r\n                        subsectionEdited={() => onSubSectionEdited(subsection._id)}\r\n                        subsectionDeleted={() => props.subsectionDeleted(subsection._id)}\r\n                    />;\r\n                })}\r\n            </ul>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default SectionItem;","import React from 'react';\r\n\r\nimport svg from '../../../assets/images/sprite.svg';\r\nimport classes from './FeedbackCondition.module.scss';\r\n\r\nconst FeedbackCondition = (props) => {\r\n    return (\r\n        <div className={classes.FeedbackCondition}>\r\n            <svg className={classes.FeedbackCondition__Icon} style={{fill: props.isTrue ? 'green' : 'red'}}>\r\n                <use xlinkHref={`${svg}#icon-${props.isTrue ? 'checkmark1' : 'cross'}`}></use>\r\n            </svg>\r\n            <span>{props.children}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedbackCondition;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport classes from './PasswordFeedback.module.scss';\r\nimport FeedbackCondition from './FeedbackCondition/FeedbackCondition';\r\n\r\n/*\r\n    A valid password should include the following:\r\n    - at least 8 characters, at most 16 characters long\r\n    - at least 1 uppercase character\r\n    - at least 1 numeric character\r\n    - at least 1 non-alpha numeric character like: `! @ # $ % ^ &`\r\n*/\r\n\r\nconst PasswordFeedback = (props) => {\r\n    const [validationMap, setValidationMap] = useState({\r\n        validLength: {\r\n            label: 'at least 8 characters, at most 16 characters long',\r\n            value: false\r\n        }, upperCase: {\r\n            label: 'at least 1 uppercase character',\r\n            value: false\r\n        }, hasNumber: {\r\n            label: 'at least 1 numeric character',\r\n            value: false\r\n        }, specialChar: {\r\n            label: 'at least 1 of the following: ! @ # $ % ^ & *',\r\n            value: false\r\n        }\r\n    });\r\n    const [visible, setVisible] = useState('hidden');\r\n    const [width, setWidth] = useState(0);\r\n    const [height, setHeight] = useState(0);\r\n    const ref = useRef(null);\r\n    const timerRef = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        setHeight(ref.current.scrollHeight);\r\n        setWidth(ref.current.scrollWidth);\r\n\r\n        timerRef.current = setTimeout(() => {\r\n            setVisible('visible')\r\n        }, 200);\r\n\r\n        return () => {\r\n            clearTimeout(timerRef.current);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const copiedValidationMap = {...validationMap};\r\n        let copiedValidationCondition;\r\n\r\n        Object.keys(props.validation || {}).forEach(condition => {\r\n            copiedValidationCondition = { ...copiedValidationMap[condition] };\r\n\r\n            copiedValidationCondition.value = (props.validation || {})[condition] || false;\r\n            copiedValidationMap[condition] = copiedValidationCondition;\r\n        });\r\n\r\n        setValidationMap(copiedValidationMap);\r\n        // eslint-disable-next-line\r\n    }, [props.validation]);\r\n\r\n    const innerStyle = {\r\n        visibility: `${visible}`,\r\n        top: `-${height}px`,\r\n        right: `-${width / 3}px`\r\n    };\r\n\r\n    return (\r\n        <div className={classes.PasswordFeedback} ref={ref} style={innerStyle} id='PasswordFeedback'>\r\n            {Object.keys(validationMap).map(condition => {\r\n                return <FeedbackCondition\r\n                    key={condition}\r\n                    isTrue={validationMap[condition].value || false}\r\n                >{validationMap[condition].label || ''}</FeedbackCondition>;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordFeedback;","import React, { useState } from 'react';\r\n\r\nimport PasswordFeedback from '../../PasswordFeedback/PasswordFeedback';\r\nimport classes from './Input.module.scss';\r\n\r\nconst Input = (props) => {\r\n    const [passwordFeebackVisible, setPasswordFeedbackVisible] = useState(false);\r\n\r\n    let inputElement = null;\r\n    let inputClasses = [classes.InputElement];\r\n    let validationError = '';\r\n\r\n    if (!props.isValid && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n        if(props.value !== ''){\r\n            validationError = 'Please enter a valid value';\r\n        }\r\n        else {\r\n            validationError = 'This field is required';\r\n        }\r\n    }\r\n\r\n    const onInputFocused = (event) => {\r\n        if (event.target.type === 'password') {\r\n            setPasswordFeedbackVisible(true)\r\n        }\r\n    }\r\n\r\n    const onInputFocusLost = (event) => {\r\n        if (event.target.type === 'password') {\r\n            setPasswordFeedbackVisible(false)\r\n        }\r\n\r\n        typeof props.focusLost === 'function' && props.focusLost();\r\n    }\r\n\r\n    switch(props.elementType) {\r\n        case 'input':\r\n            inputElement = (<input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}\r\n                onBlur={onInputFocusLost}\r\n                onFocus={onInputFocused}\r\n            />);\r\n            break;\r\n        case 'textarea':\r\n            inputClasses.push(classes.TextArea)\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}\r\n            />;\r\n            break;\r\n        case 'select':\r\n            inputElement = <select \r\n                className={classes.SelectElement} \r\n                value={props.value} \r\n                onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    ))}\r\n            </select>\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    let labelClassList = [classes.InputElement__Label];\r\n\r\n    if (props.labelColor === 'white') {\r\n        labelClassList = [classes.InputElement__Label, classes.InputElement__Label__White];\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.Input}>\r\n            <p className={classes.ValidationError}>{validationError}</p>\r\n            {inputElement}\r\n            <label className={labelClassList.join(' ')}>{props.label}</label>\r\n            {props.isPassword && passwordFeebackVisible ? <PasswordFeedback validation={props.passwordValidationMap} /> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nimport classes from './Button.module.scss';\r\n\r\nconst Button = (props) => {\r\n    let classList = [classes.Button];\r\n\r\n    switch(props.btnType) {\r\n        case 'BtnPrimary':\r\n            classList = [classes.Button, classes.ButtonPrimary];\r\n            break;\r\n        case 'BtnDanger':\r\n            classList = [classes.Button, classes.ButtonDanger];\r\n            break;\r\n        case 'BtnSecondary':\r\n            classList = [classes.Button, classes.ButtonSecondary];\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if (props.btnSize && props.btnSize === 'BtnSmall') {\r\n        classList.push(classes.ButtonSmall);\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className={classList.join(' ')}\r\n            onClick={props.clicked}\r\n            disabled={props.disabled}>{props.children}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport classes from './Accordion.module.scss';\r\n\r\nconst Accordion = (props) => {\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [height, setHeight] = useState(0);\r\n\r\n    const innerElementRef = useRef(null);\r\n    let timeout = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        timeout.current = setTimeout(() => {\r\n            setHeight(innerElementRef.current.scrollHeight);\r\n        }, 333);\r\n\r\n        return () => {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }, []);\r\n\r\n    const toggleAccordion = () => {\r\n        setIsActive(prevState => !prevState);\r\n    }\r\n\r\n    const innerStyle = {\r\n        height: `${isActive ? height : 0}px`\r\n    };\r\n\r\n    return (\r\n        <div className={classes.Accordion} role='tabpanel' aria-expanded={isActive}>\r\n            <button className={classes.Accordion__label} role='tab' onClick={toggleAccordion}>\r\n                {props.label}\r\n\r\n                <span className={classes.Accordion__label__border}></span>\r\n            </button>\r\n\r\n            <div className={classes.Accordion__inner}\r\n                style={innerStyle}\r\n                aria-hidden={!isActive}\r\n                ref={innerElementRef}>\r\n                <div className={classes.Accordion__content}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accordion;","import React, { useRef } from 'react';\r\n\r\nimport classes from './Select.module.scss';\r\n\r\nconst Select = props => {\r\n    let data = props.data;\r\n    let selectRef = useRef(null);\r\n\r\n    const onSelectOptionChanged = () => {\r\n        props.selectChanged(selectRef.current.value)\r\n    }\r\n\r\n    let content = Object.keys(data).map(option => {\r\n        return !data[option].alreadyExists ? <option key={option} value={data[option].label}>{data[option].label}</option> : null\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Select}>\r\n            <select onChange={onSelectOptionChanged} ref={selectRef}>\r\n                {content}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select;","import React, { useState, useEffect } from 'react';\r\n\r\nimport formValidation from '../../../../../utility/formValidation';\r\nimport classes from './CourseHome.module.scss';\r\nimport CourseStats from '../CourseStats/CourseStats';\r\nimport SectionItem from './SectionItem/SectionItem';\r\nimport Input from '../../../../UI/Input/Input';\r\nimport Button from '../../../../UI/Button/Button';\r\nimport Accordion from '../../../../UI/Accordion/Accordion';\r\nimport Select from '../../../../UI/Select/Select';\r\n\r\nconst CourseHome = props => {\r\n    const [sectionNameFormCtrl, setSectionNameFormCtrl] = useState({\r\n        elementType: 'input',\r\n        elementConfig: {\r\n            type: 'text',\r\n            placeholder: 'Section Name'\r\n        },\r\n        label: \"Section Name\",\r\n        validation: {\r\n            required: true\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        value: ''\r\n    });\r\n    const [courseActivities, setCourseActivities] = useState({\r\n        'quiz': {\r\n            'label': 'Quiz',\r\n            'createLink': '/create-quiz',\r\n            'selected': true,\r\n            'alreadyExists': typeof props.courseData.quiz !== 'undefined'\r\n        },\r\n        'questionnaire': {\r\n            'label': 'Questionnaire',\r\n            'createLink': '/create-questionnaire',\r\n            'selected': false,\r\n            'alreadyExists': typeof props.courseData.questionnaire !== 'undefined'\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        let copiedCourseActivities = { ...courseActivities };\r\n        let copiedQuizData = copiedCourseActivities.quiz;\r\n        let copiedQuestionnaireData = copiedCourseActivities.questionnaire;\r\n\r\n        copiedQuizData.alreadyExists = typeof props.courseData.quiz !== 'undefined';\r\n        copiedQuestionnaireData.alreadyExists = typeof props.courseData.questionnaire !== 'undefined';\r\n\r\n        copiedCourseActivities.quiz = { ...copiedQuizData };\r\n        copiedCourseActivities.questionnaire = { ...copiedQuestionnaireData };\r\n\r\n        setCourseActivities(copiedCourseActivities);\r\n        // eslint-disable-next-line\r\n    }, [props.courseData])\r\n\r\n    const courseData = props.courseData || {};\r\n    \r\n    const onSubSectionAddedHandler = (sectionId) => {\r\n        props.history.push(props.match.url + `/${sectionId}/create-subsection`);\r\n    }\r\n\r\n    const inputChangedHandler = (event) => {\r\n        const copiedFormControl = { ...sectionNameFormCtrl };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        setSectionNameFormCtrl(copiedFormControl);\r\n    }\r\n\r\n    const onSectionAddHandler = () => {\r\n        props.sectionAdded(sectionNameFormCtrl.value);\r\n    }\r\n\r\n    const onSelectChangedHandler = (label) => {\r\n        const copiedCourseActivities = {...courseActivities};\r\n        const keys = Object.keys(copiedCourseActivities);\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n            let copiedActivity = {...copiedCourseActivities[keys[i]]};\r\n\r\n            copiedActivity.selected = copiedActivity.label === label;\r\n\r\n            copiedCourseActivities[keys[i]] = {...copiedActivity};\r\n        }\r\n\r\n        setCourseActivities(copiedCourseActivities);\r\n    }\r\n\r\n    const onActivityAdd = () => {\r\n        let link = (Object.values(courseActivities).find(item => item.selected) || {}).createLink || '';\r\n\r\n        props.history.push(props.match.url + link);\r\n    }\r\n\r\n    const onCourseActivityEdit = (activityName, activityId) => {\r\n        // console.log(`The activity: ${activityName} with the id: ${activityId} is gonna be edited.`)\r\n\r\n        props.history.push(props.match.url + `/edit-${activityName}/${activityId}`);\r\n    }\r\n\r\n    const onCourseActivityDelete = (activityName, activityId) => {\r\n        props.courseActivityDeleted(activityName, activityId);\r\n    }\r\n\r\n    const onUserEnroll = () => {\r\n        props.history.push(props.match.url + '/user-enrollment');\r\n    }\r\n\r\n    let courseActivityContent = (\r\n        <span>No course activity has been added yet!</span>\r\n    );\r\n\r\n    if (typeof courseData.quiz !== 'undefined' || typeof courseData.questionnaire !== 'undefined') {\r\n        courseActivityContent = (\r\n            <ul className={classes.CourseHome__Activities__List}>\r\n                { typeof courseData.quiz !== 'undefined' ?\r\n                    <li>\r\n                        {courseData.quiz.name}\r\n\r\n                        <button onClick={() => onCourseActivityEdit('quiz', courseData.quiz._id)}>Edit</button>\r\n                        <button onClick={() => onCourseActivityDelete('quiz', courseData.quiz._id)}>Delete</button>\r\n                    </li> : null }\r\n                \r\n                { typeof courseData.questionnaire !== 'undefined' ?\r\n                    <li>\r\n                        {courseData.questionnaire.name}\r\n\r\n                        <button>Edit</button>\r\n                        <button>Delete</button>\r\n                    </li> : null }\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className={classes.CourseHome}>\r\n            <header className={classes.CourseHome__Header}>\r\n                <h1>{courseData.name || ''}</h1>\r\n            </header>\r\n\r\n            <CourseStats />\r\n\r\n            <Accordion label=\"Sections\">\r\n                <ul className={classes.CourseHome__SectionList__List}>\r\n                    {courseData.sections.map(section => {\r\n                        return <SectionItem\r\n                            key={section._id}\r\n                            sectionData={section}\r\n                            subsectionAdded={onSubSectionAddedHandler}\r\n                            subsectionDeleted={props.deletedSubsection}\r\n                            subsectionEdited={props.editedSubsection}\r\n                            sectionDeleted={props.deletedSection}\r\n                        />;\r\n                    })}\r\n                </ul>\r\n\r\n                <div className={classes.CourseHome__SectionList__Cta}>\r\n                    <Input\r\n                        elementType={sectionNameFormCtrl.elementType}\r\n                        elementConfig={sectionNameFormCtrl.elementConfig}\r\n                        label={sectionNameFormCtrl.label}\r\n                        value={sectionNameFormCtrl.value}\r\n                        touched={sectionNameFormCtrl.touched}\r\n                        isValid={sectionNameFormCtrl.valid}\r\n                        changed={(event) => inputChangedHandler(event)}\r\n                    />\r\n\r\n                    <Button\r\n                        btnType='BtnPrimary'\r\n                        btnSize='BtnSmall'\r\n                        disabled={!sectionNameFormCtrl.valid}\r\n                        clicked={onSectionAddHandler}>Add</Button>\r\n                </div>\r\n            </Accordion>\r\n\r\n            <Accordion label=\"Course Activities\">\r\n                <div className={classes.CourseHome__Activities}>\r\n                    {courseActivityContent}\r\n\r\n                    <div className={classes.CourseHome__Activities__Cta}>\r\n                        <Select data={courseActivities} selectChanged={onSelectChangedHandler} />\r\n\r\n                        <Button\r\n                            btnType='BtnPrimary'\r\n                            btnSize='BtnSmall'\r\n                            clicked={onActivityAdd}>Add</Button>\r\n                    </div>\r\n                </div>\r\n            </Accordion>\r\n\r\n            <Accordion label=\"User Enrollment\">\r\n                <div className={classes.CourseHome__UserEnrollment}>\r\n                    {`There are currently ${courseData.enrolledUsers.length} users in this course.`}\r\n\r\n                    <div className={classes.CourseHome__UserEnrollment__Cta}>\r\n                        <Button\r\n                            btnType='BtnPrimary'\r\n                            btnSize='BtnSmall'\r\n                            clicked={onUserEnroll}>Enroll Users</Button>\r\n                    </div>\r\n                </div>\r\n            </Accordion>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CourseHome;","const INPUT_TEMPLATE = {\r\n    elementType: '',\r\n    elementConfig: {\r\n        type: 'text',\r\n        placeholder: ''\r\n    },\r\n    label: \"\",\r\n    validation: {\r\n        required: true\r\n    },\r\n    valid: false,\r\n    touched: false,\r\n    value: ''\r\n};\r\n\r\nconst addInputField = (inputObj, newInputObj) => {\r\n    const copiedInputObj = { ...inputObj };\r\n    const { type, inputKey, placeholder, label, validation, touched, value, valid } = newInputObj;\r\n\r\n    let newFormControl = { ...INPUT_TEMPLATE };\r\n    let copiedConfig = { ...newFormControl.elementConfig };\r\n\r\n    copiedConfig.placeholder = placeholder;\r\n    newFormControl.elementType = type;\r\n    newFormControl.elementConfig = copiedConfig;\r\n    newFormControl.label = label;\r\n    newFormControl.validation = validation;\r\n    newFormControl.value = value || '';\r\n    newFormControl.touched = touched || false;\r\n    newFormControl.valid = valid || false;\r\n\r\n    copiedInputObj[inputKey] = newFormControl;\r\n\r\n    return {\r\n        ...copiedInputObj\r\n    };\r\n}\r\n\r\nexport default addInputField;","import React from 'react';\r\n\r\nimport classes from './MenuItem.module.scss';\r\n\r\nconst MenuItem = (props) => {\r\n    return (\r\n        <span className={classes.MenuItem} onClick={props.clicked}>\r\n            {props.label}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default MenuItem;","import React from 'react';\r\n\r\nimport MenuItem from './MenuItem/MenuItem';\r\n\r\nconst Menu = (props) => {\r\n    let content = props.items.map((item, i) => {\r\n        return <MenuItem\r\n            key={i}\r\n            label={item}\r\n            clicked={() => props.menuItemClicked(item)}\r\n        />;\r\n    });\r\n    return (\r\n        <>\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nimport classes from './PageBreak.module.scss';\r\n\r\nconst PageBreak = () => {\r\n    return (\r\n        <span className={classes.PageBreak}>\r\n            {'</>'}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default PageBreak;","import React from 'react';\r\n\r\nimport classes from './SectionFormControl.module.scss';\r\nimport Input from '../../../../../UI/Input/Input';\r\nimport PageBreak from '../../../../../UI/PageBreak/PageBreak';\r\n\r\nconst SectionFormControl = (props) => {\r\n    const { isPageBreak, formControl } = props;\r\n\r\n    const onInputChangedHandler = (event) => {\r\n        props.inputChanged(event.target.value);\r\n    }\r\n\r\n    let content = (\r\n        !isPageBreak ? <Input\r\n            elementType={formControl.elementType}\r\n            elementConfig={formControl.elementConfig}\r\n            label={formControl.label}\r\n            value={formControl.value}\r\n            touched={formControl.touched}\r\n            isValid={formControl.valid}\r\n            changed={onInputChangedHandler} /> : <PageBreak />\r\n    );\r\n\r\n    return (\r\n        <div className={classes.SectionFormControl}>\r\n            {content}\r\n            {props.showRemove ? <span className={classes.SectionFormControl__Remove} onClick={props.removed}>\r\n                &nbsp;\r\n            </span> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionFormControl;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { withRouter, useParams } from 'react-router';\r\n\r\nimport firstLetterUpper from '../../../../../utility/firstLetterUpper';\r\nimport addInputField from '../../../../../utility/addInputField';\r\nimport checkValidity from '../../../../../utility/formValidation';\r\nimport classes from './CreateSubSection.module.scss';\r\nimport Button from '../../../../UI/Button/Button';\r\nimport Menu from '../../../../UI/Menu/Menu';\r\nimport SectionFormControl from './SectionFormControl/SectionFormControl';\r\n\r\nconst SECTION_ELEMENTS = ['Title', 'Index', 'Pagebreak'];\r\n\r\nconst CreateSubSection = props => {\r\n    const params = useParams();\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [formValid, setFormValid] = useState(false);\r\n    const [sectionFormControls, setSectionFormControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Sub Section Name'\r\n            },\r\n            label: \"Sub Section Name\",\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        }\r\n    });\r\n\r\n    // TODO: Revisit this function\r\n    const populateFormFields = useCallback(() => {\r\n        const subsectionToEdit = props.savedSubSectionData || {};\r\n        const subsectionContent = subsectionToEdit.content || [];\r\n\r\n        // Set the name of the subsection\r\n        let  copiedFormControls = { ...sectionFormControls };\r\n        const copiedNameFormCtrl = { ...copiedFormControls.name };\r\n\r\n        copiedNameFormCtrl.value = subsectionToEdit.name || '';\r\n        copiedNameFormCtrl.valid = true;\r\n        copiedNameFormCtrl.touched = true;\r\n        copiedFormControls.name = { ...copiedNameFormCtrl };\r\n\r\n        let pageBreakCount = subsectionContent.length - 1;\r\n        let currPageBreakIndex = 0;\r\n        for (let i = 0; i < subsectionContent.length; i++) {\r\n            if (i > 0 && currPageBreakIndex < pageBreakCount) {\r\n                copiedFormControls[`Pagebreak${currPageBreakIndex}`] = true;\r\n\r\n                currPageBreakIndex++;\r\n            }\r\n\r\n            let contentKeyArr = Object.keys(subsectionContent[i]);\r\n\r\n            for (let j = 0; j < contentKeyArr.length; j++) {\r\n                let formControlKeyArr = Object.keys(copiedFormControls);\r\n                let agent = contentKeyArr[j];\r\n                let formControlValue = subsectionContent[i][agent];\r\n                let agentIndex = formControlKeyArr.filter(frmCtrller => frmCtrller.toLowerCase()\r\n                    .indexOf(agent.replace(/[0-9]/g, '')) !== -1).length;\r\n                let formKeyName = firstLetterUpper(agent);\r\n\r\n                copiedFormControls = addInputField(copiedFormControls, {\r\n                    type: agent !== 'index' ? 'input' : 'textarea',\r\n                    inputKey: `${formKeyName + agentIndex}`,\r\n                    placeholder: `${formKeyName + ' ' + (agentIndex + 1)}`,\r\n                    label: `${formKeyName + ' ' + (agentIndex + 1)}`,\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: true,\r\n                    touched: true,\r\n                    value: formControlValue\r\n                });\r\n            }\r\n        }\r\n        \r\n        setSectionFormControls(copiedFormControls);\r\n        setFormValid(true);\r\n        \r\n        // eslint-disable-next-line\r\n    }, [props.savedSubSectionData]);\r\n\r\n    useEffect(() => {\r\n        if (params.subsectionId && params.subsectionId !== '') {\r\n            setIsEditMode(true);\r\n        }\r\n\r\n        populateFormFields();\r\n    }, [params, populateFormFields]);\r\n\r\n    const onMenuItemClickedHandler = (item) => {\r\n        let copiedSectionFormControls = { ...sectionFormControls };\r\n        let formControlArr = Object.keys(copiedSectionFormControls);\r\n        \r\n        let formControllerNumbers = formControlArr.filter(frmCtrller => frmCtrller.indexOf(item) !== -1)\r\n            .map(ctrller => parseInt(ctrller.replace(/[^0-9]/g, '')));\r\n\r\n        let index = 0;\r\n\r\n        while (formControllerNumbers.indexOf(index) !== -1) {\r\n            index++;\r\n        }\r\n\r\n        if (item !== 'Pagebreak') {\r\n            copiedSectionFormControls = addInputField(copiedSectionFormControls, {\r\n                type: item !== 'Index' ? 'input' : 'textarea',\r\n                inputKey: `${item + index}`,\r\n                placeholder: `${item + ' ' + (index + 1)}`,\r\n                label: `${item + ' ' + (index + 1)}`,\r\n                validation: {\r\n                    required: true\r\n                }\r\n            });\r\n\r\n            setSectionFormControls(copiedSectionFormControls);\r\n\r\n            setFormValid(false)\r\n        } else {\r\n            if (formControlArr.slice(1).length > 0) {\r\n                if (formControlArr.pop().indexOf('Pagebreak') === -1) {\r\n                    copiedSectionFormControls[`${item + index}`] = true;\r\n\r\n                    setSectionFormControls(copiedSectionFormControls);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkFormValidity = (wholeForm) => {\r\n        let isValid = true;\r\n\r\n        wholeForm.forEach(formCtrl => {\r\n            isValid = isValid && formCtrl.valid;\r\n        });\r\n\r\n        setFormValid(isValid && wholeForm.length > 1);\r\n    }\r\n\r\n    const onFormInputChangedHandler = (value, formControl) => {\r\n        let copiedSectionFormControls = { ...sectionFormControls };\r\n        let copiedFormControl = { ...copiedSectionFormControls[formControl] };\r\n\r\n        copiedFormControl.touched = true;\r\n        copiedFormControl.value = value;\r\n        copiedFormControl.valid = checkValidity(value, copiedFormControl.validation);\r\n\r\n        copiedSectionFormControls[formControl] = copiedFormControl;\r\n\r\n        setSectionFormControls(copiedSectionFormControls);\r\n\r\n        checkFormValidity(Object.values(copiedSectionFormControls).filter(obj => typeof obj.valid !== 'undefined'));\r\n    }\r\n\r\n    const onFormControlRemovedHandler = frmCtrl => {\r\n        let copiedSectionFormControls = { ...sectionFormControls };\r\n        \r\n        delete copiedSectionFormControls[`${frmCtrl}`];\r\n\r\n        // We need to handle pagebreaks here. No two consecutive page breaks should be present.\r\n        let frmCtrlArr = Object.keys(copiedSectionFormControls).slice(1);\r\n\r\n        if (frmCtrlArr.length > 0) {\r\n            if (frmCtrlArr[0].indexOf('Pagebreak') !== -1) {\r\n                delete copiedSectionFormControls[`${frmCtrlArr[0]}`];\r\n            }\r\n    \r\n            let dupIndex = 0;\r\n            for (let i = 0; i < frmCtrlArr.length - 1; i++) {\r\n                if (frmCtrlArr[i].indexOf('Pagebreak') !== -1) {\r\n                    if (frmCtrlArr[i+1].indexOf('Pagebreak') !== -1) {\r\n                        dupIndex = i;\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(dupIndex !== 0) {\r\n                delete copiedSectionFormControls[`${frmCtrlArr[dupIndex]}`];\r\n            }\r\n        }\r\n\r\n        setSectionFormControls(copiedSectionFormControls);\r\n\r\n        let formControlArr = Object.values(copiedSectionFormControls);\r\n        if (formControlArr.length === 0) {\r\n            setFormValid(false);\r\n        } else {\r\n            checkFormValidity(Object.values(copiedSectionFormControls)\r\n                .filter(obj => typeof obj.valid !== 'undefined'));\r\n        }\r\n    }\r\n\r\n    // TODO: If the last agent is a pagebreak, handle it.\r\n    const onSubSectionCreatedHandler = () => {\r\n        // Subsections\r\n        let formControlArr = Object.keys(sectionFormControls).slice(1);\r\n        let sectionCount = formControlArr.filter(item => item.toLowerCase().indexOf('pagebreak') !== -1).length + 1;\r\n\r\n        let activeIndex = 0;\r\n        let subSections = new Array(sectionCount).fill({});\r\n\r\n        let index = 0;\r\n\r\n        while (index < formControlArr.length) {\r\n            let currentFormCtrl = formControlArr[index].toLowerCase().replace(/[^A-Za-z]/g, '');\r\n            let formCtrlValue = sectionFormControls[formControlArr[index]].value;\r\n            let copiedSubSection = {\r\n                ...subSections[activeIndex]\r\n            };\r\n\r\n            index++;\r\n\r\n            if (currentFormCtrl.indexOf('pagebreak') === -1) {\r\n                copiedSubSection[currentFormCtrl] = formCtrlValue;\r\n\r\n                subSections[activeIndex] = {...copiedSubSection};\r\n            } else {\r\n                activeIndex++;\r\n            }\r\n        }\r\n\r\n        if (!isEditMode) {\r\n            props.createdSubSection({\r\n                section: ((props.match || {}).params || {}).sectionId || '',\r\n                name: sectionFormControls['name'].value,\r\n                content: subSections\r\n            });\r\n        } else {\r\n            props.editedSubSection({\r\n                subsection: ((props.match || {}).params || {}).subsectionId || '',\r\n                section: ((props.match || {}).params || {}).sectionId || '',\r\n                name: sectionFormControls['name'].value,\r\n                content: subSections\r\n            });\r\n        }\r\n    }\r\n\r\n    // Exclude the first form control\r\n    let content = Object.keys(sectionFormControls).slice(1).map(frmCtrl => {\r\n        return <SectionFormControl\r\n            key={frmCtrl}\r\n            label={frmCtrl}\r\n            isPageBreak={frmCtrl.indexOf('Pagebreak') !== -1}\r\n            showRemove={true}\r\n            formControl={sectionFormControls[frmCtrl]}\r\n            inputChanged={(value) => onFormInputChangedHandler(value, frmCtrl)}\r\n            removed={() => onFormControlRemovedHandler(frmCtrl)}\r\n        />;\r\n    });\r\n\r\n    // Pick up the first element\r\n    let nameField = sectionFormControls.name;\r\n\r\n    return (\r\n        <section className={classes.CreateSection}>\r\n            <header className={classes.CreateSection__Header}>\r\n                <h1>{!isEditMode ? 'Create a subsection' : 'Edit the subsection'}</h1>\r\n\r\n                <SectionFormControl\r\n                    label={'Section Name'}\r\n                    isPageBreak={false}\r\n                    showRemove={false}\r\n                    formControl={nameField}\r\n                    inputChanged={(value) => onFormInputChangedHandler(value, 'name')}\r\n                />\r\n            </header>\r\n\r\n            <div className={classes.CreateSection__Body}>\r\n                <div className={classes.CreateSection__Body__FormField}>\r\n                    {content}\r\n                </div>\r\n\r\n                <div className={classes.CreateSection__Body__Menu}>\r\n                    <Menu\r\n                        items={SECTION_ELEMENTS}\r\n                        menuItemClicked={onMenuItemClickedHandler} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.CreateSection__Cta}>\r\n                <Button\r\n                    disabled={!formValid}\r\n                    clicked={onSubSectionCreatedHandler}>{!isEditMode ? 'Create' : 'Edit'}</Button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(CreateSubSection);","import React, { useRef } from 'react';\r\n\r\nimport classes from './File.module.scss';\r\nimport Button from '../Button/Button';\r\n\r\nconst File = (props) => {\r\n    const fileInput = useRef();\r\n\r\n    const onFileSelected = (event) => {\r\n        props.selectedFile(event.target.files[0]);\r\n    }\r\n\r\n    if(props.droppedFile) {\r\n        fileInput.current.files = props.droppedFile;\r\n    }\r\n\r\n    const openFilePicker = (e) => {\r\n        e.preventDefault();\r\n        fileInput.current.click();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                id=\"file\"\r\n                onChange={onFileSelected}\r\n                ref={fileInput}\r\n                className={classes.Input} />\r\n            \r\n            <Button clicked={openFilePicker} type=\"ButtonSmall\">Select File</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default File;","import React, { Component, createRef } from 'react';\r\n\r\nimport classes from './DragAndDrop.module.scss';\r\nimport File from '../../components/UI/File/File';\r\n\r\nconst MIME_TYPE_MAP = {\r\n    \"image/png\": \"png\",\r\n    \"image/jpeg\": \"jpeg\",\r\n    \"image/jpg\": \"jpg\",\r\n    \"application/json\": \"json\"\r\n};\r\n\r\nclass DragAndDrop extends Component {\r\n    dropRef = createRef();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (this.props.preSelectedFileName) {\r\n            this.state = {\r\n                classList: [classes.DropContainer, classes.DropContainerEnter],\r\n                content: `Selected file: ${this.props.preSelectedFileName}`,\r\n                contentClassList: [classes.ContentText, classes.ValidFileType],\r\n                dataTransferFiles: undefined,\r\n                selectedFileName: this.props.preSelectedFileName\r\n            };\r\n        } else {\r\n            this.state = {\r\n                classList: [classes.DropContainer],\r\n                content: 'DRAG YOUR FILE HERE (.png, .jpeg, .jpg, .json)',\r\n                contentClassList: [classes.ContentText],\r\n                dataTransferFiles: undefined,\r\n                selectedFileName: undefined\r\n            };\r\n        }\r\n\r\n        this.dragCounter = 0;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let div = this.dropRef.current;\r\n        div.addEventListener('dragenter', this.dragInHandler);\r\n        div.addEventListener('dragleave', this.dragOutHandler);\r\n        div.addEventListener('dragover', this.dragOverHandler);\r\n        div.addEventListener('drop', this.dropHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current;\r\n        div.removeEventListener('dragenter', this.dragInHandler);\r\n        div.removeEventListener('dragleave', this.dragOutHandler);\r\n        div.removeEventListener('dragover', this.dragOverHandler);\r\n        div.removeEventListener('drop', this.dropHandler);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.file !== this.props.file && (prevProps.file !== undefined && this.props.file === undefined)) {\r\n            this.resetState();\r\n        }\r\n\r\n        if (prevProps.preSelectedFileName !== this.props.preSelectedFileName) {\r\n            this.setState({\r\n                classList: [classes.DropContainer, classes.DropContainerEnter],\r\n                content: `Selected file: ${this.props.preSelectedFileName}`,\r\n                contentClassList: [classes.ContentText, classes.ValidFileType],\r\n                dataTransferFiles: undefined,\r\n                selectedFileName: this.props.preSelectedFileName\r\n            });\r\n        }\r\n\r\n        return ((prevProps.file !== this.props.file) && (prevProps.file !== undefined && this.props.file === undefined)) ||\r\n            prevProps.preSelectedFileName !== this.props.preSelectedFileName;\r\n    }\r\n\r\n    checkMimeType = (file) => {\r\n        return MIME_TYPE_MAP[file];\r\n    }\r\n\r\n    resetState = () => {\r\n        this.setState({\r\n            classList: [classes.DropContainer],\r\n            content: 'DRAG YOUR FILE HERE (.png, .jpeg, jpg)',\r\n            contentClassList: [classes.ContentText],\r\n            dataTransferFiles: undefined,\r\n            selectedFileName: undefined\r\n        });\r\n    }\r\n\r\n    dragInHandler = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        this.dragCounter++;\r\n\r\n        this.setState((prevState) => {\r\n            return {\r\n                classList: prevState.classList.concat(classes.DropContainerEnter)\r\n            };\r\n        });\r\n\r\n        if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\r\n            let isValid = this.checkMimeType(event.dataTransfer.items[0].type);\r\n            if(isValid) {\r\n                let newList = [classes.ContentText, classes.ValidFileType];\r\n                this.setState(prevState => {\r\n                    return {\r\n                        content: 'DROP YOUR FILE HERE',\r\n                        contentClassList: newList\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                let newList = [classes.ContentText, classes.InvalidFileType];\r\n                this.setState(prevState => {\r\n                    return {\r\n                        content: 'INVALID FILE TYPE!',\r\n                        contentClassList: newList\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    dragOutHandler = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        this.dragCounter--;\r\n        if(this.dragCounter > 0) {\r\n            return;\r\n        }\r\n\r\n        this.setState((prevState) => {\r\n            return {\r\n                classList: prevState.classList.filter(c => c !== classes.DropContainerEnter)\r\n            };\r\n        });\r\n\r\n        if(this.state.selectedFileName === undefined || this.state.selectedFileName === '') {\r\n            let newList = [classes.ContentText];\r\n            this.setState({\r\n                content: 'DRAG YOUR FILE HERE (.png, .jpeg, jpg)',\r\n                contentClassList: newList\r\n            });\r\n        }\r\n        else {\r\n            let newList = [classes.ContentText, classes.ValidFileType];\r\n            this.setState(prevState => {\r\n                return {\r\n                    classList: [classes.DropContainer, classes.DropContainerEnter],\r\n                    content: `Selected file: ${this.state.selectedFileName}`,\r\n                    contentClassList: newList\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    dragOverHandler = (event) => {\r\n        // To prevent the file from opening\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    dropHandler = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\r\n            if(this.checkMimeType(event.dataTransfer.items[0].type)) {\r\n                this.props.dropHandle(event.dataTransfer.files[0]);\r\n                this.dragCounter = 0;\r\n\r\n                let name = event.dataTransfer.files[0].name;\r\n\r\n                this.setState({\r\n                    classList: [classes.DropContainer, classes.DropContainerEnter],\r\n                    dataTransferFiles: event.dataTransfer.files,\r\n                    selectedFileName: name,\r\n                    content: `Selected file: ${name}`\r\n                });\r\n            }\r\n            else {\r\n                if(!this.props.file) {\r\n                    this.props.dropHandle(undefined);\r\n                    this.resetState();\r\n                }\r\n                else {\r\n                    if(this.state.selectedFileName !== undefined || this.state.selectedFileName !== '') {\r\n                        this.setState((prevState) => {\r\n                            let fileName = prevState.selectedFileName;\r\n                            return {\r\n                                classList: [classes.DropContainer, classes.DropContainerEnter],\r\n                                content: `Selected file: ${fileName}`,\r\n                                contentClassList: [classes.ContentText, classes.ValidFileType],\r\n                                dataTransferFiles: prevState.dataTransferFiles,\r\n                                selectedFileName: fileName\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fileSelectHandler = (file) => {\r\n        // Validate the file first\r\n        if(!this.checkMimeType(file.type)) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            classList: [classes.DropContainer, classes.DropContainerEnter],\r\n            selectedFileName: file.name,\r\n            content: `Selected file: ${file.name}`,\r\n            contentClassList: [classes.ContentText, classes.ValidFileType]\r\n        });\r\n\r\n        this.props.fileSelect(file);\r\n    }\r\n\r\n    render() {\r\n        let pageContentTemplate = <p className={this.state.contentClassList.join(' ')}>{this.state.content}</p>\r\n\r\n        return(\r\n            <div className={this.state.classList.join(' ')} ref={this.dropRef}>\r\n                {pageContentTemplate}\r\n                <div className={classes.FileSelect}>\r\n                    <File selectedFile={this.fileSelectHandler} droppedFile={this.state.dataTransferFiles} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DragAndDrop;","import React, { useState } from 'react';\r\n\r\nimport classes from './FileUpload.module.scss';\r\nimport DragAndDrop from '../../containers/DragAndDrop/DragAndDrop';\r\n\r\nconst FileUpload = props => {\r\n    const [file, setFile] = useState(undefined);\r\n\r\n    const onSelectFile = (input_file) => {\r\n        setFile(input_file);\r\n\r\n        props.fileSelected(input_file);\r\n    }\r\n\r\n    return (\r\n        <section className={classes.FileUpload}>\r\n            <header className={classes.FileUploadHeader}>\r\n                <h2>File Upload</h2>\r\n            </header>\r\n            \r\n            <div className={classes.Form}>\r\n                <DragAndDrop\r\n                    dropHandle={onSelectFile}\r\n                    file={file}\r\n                    fileSelect={onSelectFile}\r\n                    preSelectedFileName={props.preSelectedFile}\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FileUpload;","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './CreateQuiz.module.scss';\r\nimport FileUpload from '../../../../../FileUpload/FileUpload';\r\nimport Input from '../../../../../UI/Input/Input';\r\nimport Button from '../../../../../UI/Button/Button';\r\nimport formValidation from '../../../../../../utility/formValidation';\r\n\r\nconst CreateQuiz = props => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [quizToEditData, setQuizToEditData] = useState(null);\r\n    const [quizNameFormControl, setquizNameFormControl] = useState({\r\n        validation: {\r\n            required: true\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        value: ''\r\n    });\r\n    const [file, setFile] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        if (typeof props.currentQuizData === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        setEditMode(true);\r\n\r\n        setQuizToEditData(props.currentQuizData);\r\n\r\n        const copiedQuizNameFormCtrl = { ...quizNameFormControl };\r\n\r\n        copiedQuizNameFormCtrl.touched = true;\r\n        copiedQuizNameFormCtrl.value = props.currentQuizData.name;\r\n        copiedQuizNameFormCtrl.valid = true;\r\n\r\n        setquizNameFormControl(copiedQuizNameFormCtrl);\r\n        // eslint-disable-next-line\r\n    }, [props.currentQuizData]);\r\n\r\n    const onInputFieldChanged = (event) => {\r\n        const copiedQuizNameFormCtrl = { ...quizNameFormControl };\r\n\r\n        let value = event.target.value;\r\n\r\n        copiedQuizNameFormCtrl.touched = true;\r\n        copiedQuizNameFormCtrl.value = value;\r\n        copiedQuizNameFormCtrl.valid = formValidation(value, copiedQuizNameFormCtrl.validation);\r\n\r\n        setquizNameFormControl(copiedQuizNameFormCtrl);\r\n    }\r\n\r\n    const onFileSelectedHandler = (selectedFile) => {\r\n        setFile(selectedFile);\r\n    }\r\n\r\n    const onQuizCreate = () => {\r\n        const formData = new FormData();\r\n\r\n        formData.append('quizName', quizNameFormControl.value);\r\n        \r\n        if (typeof file !== 'undefined') {\r\n            formData.append('file', file);\r\n        } else {\r\n            formData.append('fileName', quizToEditData.questionDataUrl);\r\n        }\r\n\r\n        if (editMode) {\r\n            formData.append('quizId', quizToEditData._id);\r\n\r\n            props.onQuizEdited(formData)\r\n        } else {\r\n            props.onQuizCreated(formData);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={classes.CreateQuiz}>\r\n            <header className={classes.CreateQuiz__Header}>\r\n                <h1>{!editMode ? 'Create a' : 'Edit the'} quiz</h1>\r\n            </header>\r\n\r\n            <div className={classes.CreateQuiz__Body}>\r\n                <Input\r\n                    elementType='input'\r\n                    elementConfig={{\r\n                        type: 'text',\r\n                        placeholder: 'Quiz name'\r\n                    }}\r\n                    label='Quiz name'\r\n                    value={quizNameFormControl.value}\r\n                    touched={quizNameFormControl.touched}\r\n                    isValid={quizNameFormControl.valid}\r\n                    changed={(event) => onInputFieldChanged(event)}\r\n                />\r\n\r\n                <FileUpload\r\n                    fileSelected={onFileSelectedHandler}\r\n                    preSelectedFile={editMode ? quizToEditData.questionDataUrl.split(\"\\\\\").pop().slice(Date.now().toString().length) : undefined}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.CreateQuiz__Cta}>\r\n                <Button\r\n                    clicked={onQuizCreate}>{!editMode ? 'Create' : 'Edit'}</Button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CreateQuiz;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\r\n\r\n// import classes from './Course.module.scss';\r\nimport axiosAdmin from '../../../../axiosUtility/axios-admin';\r\nimport CourseHome from './CourseHome/CourseHome';\r\nimport CreateSubSection from './CreateSubSection/CreateSubSection';\r\nimport CreateQuiz from '../Course/CourseActivities/CreateQuiz/CreateQuiz';\r\n\r\n// TODO: Instead of using state management here, move all the logic to its parent component\r\nconst Course = props => {\r\n    const [subSectionToEdit, setSubSectionToEdit] = useState({});\r\n    const config = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + props.token\r\n        }\r\n    };\r\n    const history = useHistory();\r\n\r\n    const timeout = useRef();\r\n\r\n    // useEffect(() => {\r\n    //     setCourseData(props.courseData);\r\n    // }, [props.courseData]);\r\n\r\n    useEffect(() => {\r\n        timeout.current = null;\r\n        return () => {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }, [])\r\n\r\n    const onSectionAddedHandler = (sectionName) => {\r\n        axiosAdmin.post(`/section`, {\r\n            courseId: props.courseData._id,\r\n            name: sectionName\r\n        }, config).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isSectionAdded) {\r\n                props.courseListUpdated(responseData.newCourseData);\r\n            }\r\n        });\r\n    }\r\n\r\n    const onSectionDeletedHandler = (sectionId) => {\r\n        axiosAdmin.delete(`/section/${sectionId}`, config).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isSectionDeleted) {\r\n                // props.courseListUpdated(responseData.newCourseData);\r\n                let copiedCourseData = { ...props.courseData };\r\n                let deletedSectionId = (responseData.result || {})._id || '';\r\n                let copiedCourseSections = [ ...copiedCourseData.sections ];\r\n                let newSections =  copiedCourseSections.filter(section => section._id !== deletedSectionId);\r\n\r\n                copiedCourseData.sections = [...newSections];\r\n\r\n                props.courseListUpdated(copiedCourseData);\r\n            }\r\n        });\r\n    }\r\n\r\n    const courseSectionDataChangedHandler = (newSectionData) => {\r\n        let copiedCourseData = { ...props.courseData };\r\n\r\n        let copiedCourseSections = [ ...copiedCourseData.sections ];\r\n        let newSections =  copiedCourseSections.map(section => {\r\n            if (section._id === newSectionData._id) {\r\n                section = {...newSectionData};\r\n            }\r\n\r\n            return section;\r\n        });\r\n\r\n        copiedCourseData.sections = [...newSections];\r\n\r\n        return copiedCourseData;\r\n    }\r\n\r\n    const onSubsectionDeletedHandler = (subsectionId) => {\r\n        axiosAdmin.delete(`/section/subsection/${subsectionId}`, config).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isSubSectionDeleted) {\r\n                props.courseListUpdated(courseSectionDataChangedHandler(responseData.newSectionData));\r\n            }\r\n        });\r\n    }\r\n\r\n    const onSubsectionEdit = (data) => {\r\n        const subSectionToEdit = ((props.courseData.sections.find(section => section._id === data.section) ||\r\n            {}).subsections || []).find(subsection => subsection._id === data.subsection) || {};\r\n\r\n        setSubSectionToEdit(subSectionToEdit);\r\n\r\n        history.push(props.match.url + `/${data.section}/edit-subsection/${data.subsection}`);\r\n    }\r\n\r\n    const onSubSectionEditedHandler = (data) => {\r\n        axiosAdmin.put(`/section/subsection/${data.subsection}`, data, config).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isSubSectionEdited) {\r\n                props.courseListUpdated(courseSectionDataChangedHandler(responseData.newSectionData));\r\n\r\n                props.history.push(props.match.url + `/course-management/${props.courseData._id}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    const onSubSectionCreatedHandler = (data) => {\r\n        axiosAdmin.post(`/section/${data.section}/add-subsection`, {\r\n            ...data\r\n        }, config).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isSubSectionAdded) {\r\n                // let newSectionData = responseData.newSectionData;\r\n\r\n                props.courseListUpdated(courseSectionDataChangedHandler(responseData.newSectionData))\r\n\r\n                // let copiedCourseData = { ...props.courseData };\r\n\r\n                // let copiedCourseSections = [ ...copiedCourseData.sections ];\r\n                // let newSections =  copiedCourseSections.map(section => {\r\n                //     if (section._id === newSectionData._id) {\r\n                //         section = {...newSectionData};\r\n                //     }\r\n\r\n                //     return section;\r\n                // });\r\n\r\n                // copiedCourseData.sections = [...newSections];\r\n\r\n                // props.courseListUpdated(copiedCourseData)\r\n\r\n                // setCourseData(copiedCourseData);\r\n\r\n                props.history.push(props.match.url + `/course-management/${props.courseData._id}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    const onCourseActivityCreatedHandler = (activityType, data) => {\r\n        let requestUrl = '';\r\n\r\n        switch (activityType) {\r\n            case 'quiz':\r\n                requestUrl = '/quiz';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        let courseId = props.courseData._id;\r\n\r\n        if (typeof data.append !== 'undefined') {\r\n            data.append('courseId', courseId);\r\n        } else {\r\n            data['courseId'] = courseId;\r\n        }\r\n\r\n        axiosAdmin.post(requestUrl, data, config).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isAdded) {\r\n                props.courseActivityAdded(responseData.newCourseData);\r\n\r\n                props.history.push(props.match.url + `/course-management/${props.courseData._id}`);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const onCourseActivityEditedHandler = (activityType, data) => {\r\n        let requestUrl = '';\r\n\r\n        // console.log(data.get('quizId'))\r\n\r\n        switch (activityType) {\r\n            case 'quiz':\r\n                requestUrl = '/quiz/' + data.get('quizId');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        axiosAdmin.put(requestUrl, data, config).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isEdited) {\r\n                props.courseActivityEdited(responseData.newCourseData);\r\n\r\n                props.history.push(props.match.url + `/course-management/${props.courseData._id}`);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const onCourseActivityDeletedHandler = (activityType, id) => {\r\n        let requestUrl = '';\r\n\r\n        switch (activityType) {\r\n            case 'quiz':\r\n                requestUrl = '/quiz/' + id;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        axiosAdmin.delete(requestUrl, config).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isDeleted) {\r\n                props.courseListUpdated(responseData.newCourseData);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const routes = (\r\n        <Switch>\r\n            <Route path={props.match.url + '/create-questionnaire'} render={() => <div>CREATE QUESTIONNAIRE</div>} />\r\n            <Route path={props.match.url + '/edit-quiz/:quizId'} render={() => <CreateQuiz\r\n                currentQuizData={(props.courseData || {}).quiz || {}}\r\n                onQuizEdited={(quizData) => onCourseActivityEditedHandler('quiz', quizData)} />} />\r\n            <Route path={props.match.url + '/create-quiz'} render={() => <CreateQuiz\r\n                currentQuizData={undefined}\r\n                onQuizCreated={(quizData) => onCourseActivityCreatedHandler('quiz', quizData) } />} />\r\n            <Route path={props.match.url + '/:sectionId/edit-subsection/:subsectionId'} render={() => <CreateSubSection\r\n                savedSubSectionData={subSectionToEdit}\r\n                editedSubSection={onSubSectionEditedHandler} />}\r\n            />\r\n            <Route path={props.match.url + '/:sectionId/create-subsection'} render={() => <CreateSubSection\r\n                sectionList={props.courseData.sections}\r\n                createdSubSection={onSubSectionCreatedHandler} />}\r\n            />\r\n            {/* <Route path={props.match.url + '/:sectionName'} render={() => <span>Section Management</span>} /> */}\r\n            <Route path={props.match.url + '/'} render={() => <CourseHome\r\n                sectionAdded={onSectionAddedHandler}\r\n                deletedSection={onSectionDeletedHandler}\r\n                deletedSubsection={onSubsectionDeletedHandler}\r\n                editedSubsection={onSubsectionEdit}\r\n                courseData={props.courseData}\r\n                courseActivityDeleted={onCourseActivityDeletedHandler}\r\n                {...props} />}\r\n            />\r\n\t\t</Switch>\r\n    )\r\n\r\n    return (\r\n        routes\r\n    )\r\n}\r\n\r\nexport default withRouter(Course);","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './Counter.module.scss';\r\n\r\nconst Counter = (props) => {\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setCounter(props.initialValue);\r\n    }, [props.initialValue]);\r\n\r\n    const counterChanged = (isIncrement) => {\r\n        let newCounter = counter;\r\n\r\n        if (isIncrement) {\r\n            newCounter = newCounter + 1;\r\n        } else {\r\n            if (counter === 0) {\r\n                return;\r\n            }\r\n\r\n            newCounter = newCounter - 1;\r\n        }\r\n\r\n        setCounter(newCounter);\r\n\r\n        props.counterAmountChanged(newCounter - counter);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Counter}>\r\n            <span className={classes.Counter__Label}>{props.label}</span>\r\n            <div className={classes.Counter__Body}>\r\n                <span\r\n                    className={classes.Counter__Button}\r\n                    onClick={() => counterChanged(false)}>\r\n                    -\r\n                </span>\r\n                <span className={classes.Counter__Amount}>{counter}</span>\r\n                <span\r\n                    className={classes.Counter__Button}\r\n                    onClick={() => counterChanged(true)}>\r\n                    +\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;","import React from 'react';\r\n\r\nimport classes from './Option.module.scss';\r\n\r\nconst Option = (props) => {\r\n\r\n    const optionSelected = () => {\r\n        props.onOptionSelected(props.value)\r\n    }\r\n\r\n    return (\r\n        <li className={classes.Option} onClick={optionSelected}>\r\n            {props.value}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Option;","import React from 'react';\r\n\r\nimport classes from './Options.module.scss';\r\nimport Option from './Option/Option';\r\n\r\nconst Options = (props) => {\r\n    const optionSelectedHandler = (value) => {\r\n        props.selectedOption(value);\r\n    }\r\n\r\n    let options = null;\r\n    if(props.show) {\r\n        options = (\r\n            <ul className={classes.SelectOptions} ref={props.optionsRef}>\r\n                {props.options.map(option => {\r\n                    return <Option key={option} value={option} onOptionSelected={optionSelectedHandler}></Option>\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        options\r\n    )\r\n}\r\n\r\nexport default Options;","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport classes from './SelectInput.module.scss';\r\nimport Options from './Options/Options';\r\n\r\nconst SelectInput = (props) => {\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [selected, setSelected] = useState('');\r\n\r\n    let optionsRef = useRef(null);\r\n    let buttonRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setSelected(props.itemPerPageList[0] || '');\r\n    }, [props.itemPerPageList]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [showOptions]);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if((optionsRef.current && buttonRef.current.contains(event.target))) {\r\n            return;\r\n        }\r\n\r\n        if(!(optionsRef.current && optionsRef.current.contains(event.target))) {\r\n            if(showOptions) {\r\n                setShowOptions(showOptions => !showOptions);\r\n            }\r\n        }\r\n    }\r\n    \r\n    const onSelectInputClickedHandler = () => {\r\n        setShowOptions(showOptions => !showOptions);\r\n    }\r\n\r\n    const onSelectOptionHandler = (value) => {\r\n        setSelected(value);\r\n        setShowOptions(showOptions => !showOptions);\r\n        props.valueSelected(value);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className={classes.SelectInputWrapper}>\r\n                <Options show={showOptions} options={props.itemPerPageList} selectedOption={onSelectOptionHandler} optionsRef={optionsRef} />\r\n                <label>{props.label}</label>\r\n                <div className={classes.SelectInput} onClick={onSelectInputClickedHandler} ref={buttonRef}>{selected}</div>\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default SelectInput;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport classes from './CreateCourse.module.scss';\r\nimport Input from '../../../UI/Input/Input';\r\nimport Counter from '../../../UI/Counter/Counter';\r\nimport Button from '../../../UI/Button/Button';\r\nimport SelectInput from '../../../UI/SelectInput/SelectInput';\r\nimport checkValidity from '../../../../utility/formValidation';\r\nimport addInputField from '../../../../utility/addInputField';\r\n\r\nconst QUIZ_LIST = ['Quiz 1', 'Quiz 2', 'Quiz 3', 'Quiz 4'];\r\n\r\nconst CreateCourse = props => {\r\n    const params = useParams();\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [courseDataFormControls, setCourseDataFormControls] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Course Title'\r\n            },\r\n            label: \"Course Title\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 3\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        image: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'url',\r\n                placeholder: 'Landing Image URL'\r\n            },\r\n            label: \"Landing Image URL\",\r\n            validation: {\r\n                required: true,\r\n                isURL: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        description: {\r\n            elementType: 'textarea',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Description'\r\n            },\r\n            label: \"Description\",\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        }\r\n    });\r\n    const [facultyFormControls, setFacultyFormControls] = useState({});\r\n    const [formValid, setFormValid] = useState(false);\r\n    const [selectedQuiz, setSelectedQuiz] = useState(QUIZ_LIST[0]);\r\n\r\n    const populateFormFields = useCallback(() => {\r\n        const copiedFormControls = { ...courseDataFormControls };\r\n        const copiedNameFormCtrl = { ...copiedFormControls.name };\r\n\r\n        copiedNameFormCtrl.value = (props.savedCourseData || {}).name || '';\r\n        copiedNameFormCtrl.valid = true;\r\n        copiedNameFormCtrl.touched = true;\r\n        copiedFormControls.name = { ...copiedNameFormCtrl };\r\n\r\n        const copiedImageFormCtrl = { ...copiedFormControls.image };\r\n\r\n        copiedImageFormCtrl.value = ((props.savedCourseData || {}).landing || {}).image || '';\r\n        copiedImageFormCtrl.valid = true;\r\n        copiedImageFormCtrl.touched = true;\r\n        copiedFormControls.image = { ...copiedImageFormCtrl };\r\n\r\n        const copiedDescFormCtrl = { ...copiedFormControls.description };\r\n\r\n        copiedDescFormCtrl.value = ((props.savedCourseData || {}).landing || {}).info || '';\r\n        copiedDescFormCtrl.valid = true;\r\n        copiedDescFormCtrl.touched = true;\r\n        copiedFormControls.description = { ...copiedDescFormCtrl };\r\n\r\n        setCourseDataFormControls({...copiedFormControls});\r\n\r\n        // ======================================================== //\r\n        let copiedFacultyFormControls = { ...facultyFormControls };\r\n\r\n        (((props.savedCourseData || {}).landing || {}).faculty || []).forEach((facultyMember, index) => {\r\n            copiedFacultyFormControls = addInputField(copiedFacultyFormControls, {\r\n                type: 'input',\r\n                inputKey: `faculty${index}`,\r\n                placeholder: `Faculty ${index + 1}`,\r\n                label: `Faculty ${index + 1}`,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 8\r\n                },\r\n                valid: true,\r\n                touched: true,\r\n                value: [facultyMember.firstName, facultyMember.lastName].join(' ')\r\n            });\r\n        });\r\n\r\n        setFacultyFormControls(copiedFacultyFormControls);\r\n\r\n        // eslint-disable-next-line\r\n    }, [props.savedCourseData]);\r\n\r\n    useEffect(() => {\r\n        if (params.id && params.id !== '') {\r\n            setIsEditMode(true);\r\n\r\n            // Populate the form fields\r\n            populateFormFields();\r\n        }\r\n    }, [params, populateFormFields]);\r\n\r\n    useEffect(() => {\r\n        let facultyArr = Object.values(facultyFormControls);\r\n\r\n        if (facultyArr.length === 0)\r\n            setFormValid(false);\r\n        else\r\n            checkFormValidity([...Object.values(courseDataFormControls), ...facultyArr]);\r\n    }, [courseDataFormControls, facultyFormControls]);\r\n\r\n    const onQuizSelectedHandler = (selectedQuiz) => {\r\n        setSelectedQuiz(selectedQuiz);\r\n    }\r\n\r\n    const onCourseCreatedHandler = () => {\r\n        let courseData = {};\r\n\r\n        if (!isEditMode) {\r\n            courseData = {\r\n                name: (courseDataFormControls.name || {}).value || '',\r\n                landing: {\r\n                    image: (courseDataFormControls.image || {}).value || '',\r\n                    info: (courseDataFormControls.description || {}).value || '',\r\n                    faculty: Object.keys(facultyFormControls).map(facultyFrmCtrl => {\r\n                        return facultyFormControls[facultyFrmCtrl].value || '';\r\n                    })\r\n                },\r\n                quiz: selectedQuiz\r\n            };\r\n\r\n            props.courseCreated(courseData);\r\n        } else {\r\n            courseData = {\r\n                ...props.savedCourseData,\r\n                name: (courseDataFormControls.name || {}).value || '',\r\n                landing: {\r\n                    image: (courseDataFormControls.image || {}).value || '',\r\n                    info: (courseDataFormControls.description || {}).value || '',\r\n                    faculty: Object.keys(facultyFormControls).map(facultyFrmCtrl => {\r\n                        return facultyFormControls[facultyFrmCtrl].value || '';\r\n                    })\r\n                },\r\n                quiz: selectedQuiz\r\n            };\r\n\r\n            props.courseEdited(courseData)\r\n        }\r\n    }\r\n\r\n    const onInputChangedHandler = (event, formCtrl, operationType) => {\r\n        let inputtedValue = event.target.value;\r\n\r\n        switch (operationType) {\r\n            case 'faculty':\r\n                let copiedFacultyFormControls = { ...facultyFormControls };\r\n                let copiedFacultyFormCtrl = { ...copiedFacultyFormControls[formCtrl] };\r\n\r\n                copiedFacultyFormCtrl.value = inputtedValue;\r\n                copiedFacultyFormCtrl.touched = true;\r\n                copiedFacultyFormCtrl.valid = checkValidity(inputtedValue, copiedFacultyFormCtrl.validation);\r\n\r\n                copiedFacultyFormControls[formCtrl] = copiedFacultyFormCtrl;\r\n\r\n                setFacultyFormControls(copiedFacultyFormControls);\r\n                break;\r\n            default:\r\n                let copiedCourseDataFormControls = { ...courseDataFormControls };\r\n                let copiedFormCtrl = { ...copiedCourseDataFormControls[formCtrl] };\r\n\r\n                copiedFormCtrl.value = inputtedValue;\r\n                copiedFormCtrl.touched = true;\r\n                copiedFormCtrl.valid = checkValidity(inputtedValue, copiedFormCtrl.validation);\r\n\r\n                copiedCourseDataFormControls[formCtrl] = copiedFormCtrl;\r\n                \r\n                setCourseDataFormControls(copiedCourseDataFormControls);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const onCounterAmountChangedHandler = (operation) => {\r\n        // Operation: 1 (Increment)\r\n        // Operation: -1 (Decrement)\r\n        let copiedFacultyFormControls = { ...facultyFormControls };\r\n        let keyArr = Object.keys(copiedFacultyFormControls);\r\n\r\n        if (operation === 1) {\r\n            let formCtrlCount = keyArr.length;\r\n\r\n            copiedFacultyFormControls = addInputField(copiedFacultyFormControls, {\r\n                type: 'input',\r\n                inputKey: `faculty${formCtrlCount}`,\r\n                placeholder: `Faculty ${formCtrlCount + 1}`,\r\n                label: `Faculty ${formCtrlCount + 1}`,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 8\r\n                }\r\n            });\r\n\r\n            setFormValid(false);\r\n        } else {\r\n            delete copiedFacultyFormControls[keyArr.pop()];\r\n        }\r\n\r\n        setFacultyFormControls(copiedFacultyFormControls);\r\n    }\r\n\r\n    const checkFormValidity = (wholeForm) => {\r\n        let isValid = true;\r\n\r\n        wholeForm.forEach(formCtrl => {\r\n            isValid = isValid && formCtrl.valid;\r\n        });\r\n\r\n        setFormValid(isValid);\r\n    }\r\n\r\n    /*\r\n        TODO: This is pretty messy, fix later\r\n    */\r\n    const createFormContent = (formControls, formType) => {\r\n        let content = Object.keys(formControls).map(formCtrl => {\r\n            return <Input\r\n                key={formCtrl}\r\n                elementType={formControls[formCtrl].elementType}\r\n                elementConfig={formControls[formCtrl].elementConfig}\r\n                label={formControls[formCtrl].label}\r\n                value={formControls[formCtrl].value}\r\n                touched={formControls[formCtrl].touched}\r\n                isValid={formControls[formCtrl].valid}\r\n                changed={(event) => onInputChangedHandler(event, formCtrl, formType)} />\r\n        });\r\n\r\n        return content;\r\n    }\r\n\r\n    return (\r\n        <section className={classes.CreateCourse}>\r\n            <header className={classes.CreateCourse__Header}>\r\n                <h1>{!isEditMode ? 'Create a course' : 'Edit the course'}</h1>\r\n            </header>\r\n\r\n            <section className={classes.CreateCourse__Body}>\r\n                {createFormContent(courseDataFormControls, 'course')}\r\n\r\n                <SelectInput label={'Quiz list: '} itemPerPageList={QUIZ_LIST} valueSelected={onQuizSelectedHandler} />\r\n\r\n                <div className={classes.CreateCourse__Faculty}>\r\n                    <Counter\r\n                        label={'Faculty:'}\r\n                        initialValue={!isEditMode ? 0 : (((props.savedCourseData || {}).landing || {}).faculty || []).length || 0}\r\n                        counterAmountChanged={(operationType) => onCounterAmountChangedHandler(operationType, 'faculty')} />\r\n\r\n                    {createFormContent(facultyFormControls, 'faculty')}\r\n                </div>\r\n            </section>\r\n\r\n            <div className={classes.CreateCourse__Cta}>\r\n                <Button\r\n                    disabled={!formValid}\r\n                    clicked={onCourseCreatedHandler}>{!isEditMode ? 'Create' : 'Edit'}</Button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CreateCourse;","import React from 'react';\r\n\r\nimport classes from './ListElement.module.scss';\r\n\r\nconst ListElement = props => {\r\n    return (\r\n        <li className={classes.ListElement}>\r\n            {props.children}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ListElement;","import React from 'react';\r\n\r\nimport svg from '../../../../../assets/images/sprite.svg';\r\nimport classes from './CourseCard.module.scss';\r\nimport ListElement from '../../../../UI/ListElement/ListElement';\r\nimport Button from '../../../../UI/Button/Button';\r\n\r\nconst CourseCard = (props) => {\r\n    const courseData = props.data || {};\r\n    const landingData = courseData.landing || {};\r\n    const courseName = courseData.name || '';\r\n\r\n    return (\r\n        <div className={classes.CourseCard}>\r\n            <span\r\n                style={{backgroundImage: `url(${landingData.image || ''}`}}\r\n                className={classes.CourseCard__ImgSection}\r\n            ></span>\r\n\r\n            <h5 className={classes.CourseCard__Name} onClick={props.courseNameClicked}>{courseName.length > 25 ? courseName.slice(0, 25) + '...' : courseName}</h5>\r\n            \r\n            <div className={classes.CourseCard__Body}>\r\n                <h5>\r\n                    <svg className={classes.CourseCard__Body__Icon}>\r\n                        <use xlinkHref={`${svg}#icon-education`}></use>\r\n                    </svg>\r\n                    <span>\r\n                        Faculty:\r\n                    </span>\r\n                </h5>\r\n\r\n                <ul>\r\n                    {(landingData.faculty || []).map((person, index) => {\r\n                        return <ListElement key={index}>{[person.firstName, person.lastName].join(' ')}</ListElement>;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className={classes.CourseCard__Cta}>\r\n                <Button btnType='BtnPrimary' btnSize='BtnSmall' clicked={props.coursePublish}>{courseData.isPublished ? 'UnPublish' : 'Publish'}</Button>\r\n                <Button btnType='BtnSecondary' btnSize='BtnSmall' clicked={props.courseEdit}>Edit</Button>\r\n                <Button btnType='BtnDanger' btnSize='BtnSmall' clicked={props.courseDelete}>Delete</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseCard;","import React from 'react';\r\n\r\nimport classes from './AdminCourseList.module.scss';\r\nimport CourseCard from './CourseCard/CourseCard';\r\n\r\nconst AdminCourseList = (props) => {\r\n    return (\r\n        <section className={classes.AdminCourseList}>\r\n            <header className={classes.AdminCourseList__Header}>\r\n                <h1>Course List</h1>\r\n            </header>\r\n\r\n            <div className={classes.AdminCourseList__Body}>\r\n                {(props.courseList || []).map(course => {\r\n                    return <CourseCard\r\n                        key={course._id}\r\n                        data={course}\r\n                        courseEdit={() => props.onCourseEdited(course)}\r\n                        courseDelete={() => props.onCourseDeleted(course._id)}\r\n                        coursePublish={() => props.onCoursePublished(course._id, !course.isPublished)}\r\n                        courseNameClicked={() => props.onCourseNameClicked(course)}\r\n                    />\r\n                })}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AdminCourseList;","import React from 'react';\r\n\r\nimport classes from './UserItem.module.scss';\r\n\r\nconst UserItem = props => {\r\n    return (\r\n        <li \r\n            className={!props.userData.isSelected ? classes.UserItem : [classes.UserItem, classes.UserItem__Active].join(' ')}\r\n            onClick={props.userSelect}>\r\n            {props.userData.name}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default UserItem;","import React from 'react';\r\n\r\nimport classes from './UserPool.module.scss';\r\nimport UserItem from './UserItem/UserItem';\r\n\r\nconst UserPool = props => {\r\n    return (\r\n        <div className={classes.UserPool}>\r\n            <h2>{props.title}</h2>\r\n\r\n            <ul className={classes.UserPool__Body}>\r\n                {props.userList.map(user => {\r\n                    return <UserItem\r\n                        key={user._id}\r\n                        userData={user}\r\n                        userSelect={() => props.userSelected(user._id)}\r\n                    />;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPool;","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './CourseEnrollment.module.scss';\r\nimport UserPool from './UserPool/UserPool';\r\nimport Button from '../../../UI/Button/Button';\r\n\r\nconst CourseEnrollment = props => {\r\n    const [enrolledUsers, setEnrolledUsers] = useState(props.enrolledUsers.map(user => {\r\n        return {\r\n            _id: user._id,\r\n            name: user.firstName + ' ' + user.lastName,\r\n            isSelected: false\r\n        }\r\n    }));\r\n    const [nonEnrolledUsers, setNonEnrolledUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let idArr = props.enrolledUsers.map(user => user._id);\r\n\r\n        const modifiedUserList = props.userList\r\n            .filter(user => user.status !== 'admin' && idArr.indexOf(user._id) === -1)\r\n            .map(user => {\r\n                return {\r\n                    _id: user._id,\r\n                    name: user.firstName + ' ' + user.lastName,\r\n                    isSelected: false\r\n                };\r\n            });\r\n\r\n        setNonEnrolledUsers(modifiedUserList)\r\n    }, [props.userList, props.enrolledUsers]);\r\n\r\n    const onUserSelectedHandler = (action, userId) => {\r\n        let copiedList = {};\r\n\r\n        switch(action) {\r\n            case 'enrol':\r\n                copiedList = [...nonEnrolledUsers].map(item => {\r\n                    if (item._id === userId) {\r\n                        item.isSelected = !item.isSelected;\r\n                    }\r\n\r\n                    return item;\r\n                });\r\n\r\n                setNonEnrolledUsers(copiedList);\r\n                break;\r\n            case 'expel':\r\n                copiedList = [...enrolledUsers].map(item => {\r\n                    if (item._id === userId) {\r\n                        item.isSelected = !item.isSelected;\r\n                    }\r\n\r\n                    return item;\r\n                });\r\n\r\n                setEnrolledUsers(copiedList);\r\n                break;\r\n            default:\r\n                console.log('Check your enrollment action!');\r\n                break;\r\n        }\r\n    }\r\n\r\n    const onUserEnrollmentChangedHandler = (action) => {\r\n        let copiedEnrolledUsers = [...enrolledUsers];\r\n        let copiedNonEnrolledUsers = [...nonEnrolledUsers];\r\n\r\n        if (action === 'enrol') {\r\n            copiedNonEnrolledUsers.filter(user => user.isSelected).forEach(user => {\r\n                copiedEnrolledUsers.push({\r\n                    ...user,\r\n                    isSelected: false\r\n                });\r\n            });\r\n    \r\n            copiedNonEnrolledUsers = copiedNonEnrolledUsers.filter(user => !user.isSelected);\r\n        } else {\r\n            copiedEnrolledUsers.filter(user => user.isSelected).forEach(user => {\r\n                copiedNonEnrolledUsers.push({\r\n                    ...user,\r\n                    isSelected: false\r\n                });\r\n            });\r\n\r\n            copiedEnrolledUsers = copiedEnrolledUsers.filter(user => !user.isSelected);\r\n        }\r\n\r\n        setNonEnrolledUsers(copiedNonEnrolledUsers);\r\n        setEnrolledUsers(copiedEnrolledUsers);\r\n    }\r\n\r\n    const onUserEnrollmentSubmit = () => {\r\n        props.onUserEnrollmentSubmitted(enrolledUsers.map(enrolledUser => enrolledUser._id));\r\n    }\r\n\r\n    return (\r\n        <section className={classes.CourseEnrollment}>\r\n            <header className={classes.CourseEnrollment__Header}>\r\n                <h2>Enroll users to the course</h2>\r\n            </header>\r\n\r\n            <div className={classes.CourseEnrollment__Body}>\r\n                <UserPool\r\n                    title=\"Enrolled Users\"\r\n                    userList={enrolledUsers}\r\n                    userSelected={(userId) => onUserSelectedHandler('expel', userId)}\r\n                />\r\n\r\n                <div className={classes.CourseEnrollment__Body__Cta}>\r\n                    <button onClick={() => onUserEnrollmentChangedHandler('enrol')}>{'<<<<'}</button>\r\n\r\n                    <button onClick={() => onUserEnrollmentChangedHandler('expel')}>{'>>>>'}</button>\r\n                </div>\r\n\r\n                <UserPool\r\n                    title=\"Non Enrolled Users\"\r\n                    userList={nonEnrolledUsers}\r\n                    userSelected={(userId) => onUserSelectedHandler('enrol', userId)}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.CourseEnrollment__Cta}>\r\n                <Button\r\n                    btnType=\"BtnPrimary\"\r\n                    clicked={onUserEnrollmentSubmit}>Submit</Button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CourseEnrollment;","import React, { useState, useEffect  } from 'react';\r\nimport { Route, Switch, useHistory} from 'react-router-dom';\r\n\r\nimport axiosAdmin from '../../../axiosUtility/axios-admin';\r\nimport Course from './Course/Course';\r\nimport CreateCourse from './CreateCourse/CreateCourse';\r\nimport AdminCourseList from './CourseList/AdminCourseList';\r\nimport CourseEnrollment from './CourseEnrollment/CourseEnrollment';\r\n\r\nconst CourseManagement = (props) => {\r\n    const config = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + props.token\r\n        }\r\n    };\r\n    const [selectedCourse, setSelectedCourse] = useState({});\r\n    const [courseToEdit, setCourseToEdit] = useState({});\r\n    const [courseList, setCourseList] = useState([]);\r\n    const [userList, setUserList] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axiosAdmin.get('/course').then(response => {\r\n            setCourseList(response.data.courseList);\r\n        });\r\n\r\n        axiosAdmin.get('/user', config).then(response => {\r\n            setUserList(response.data.userList);\r\n        });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const onCourseNameClickedHandler = (course) => {\r\n        setSelectedCourse(course);\r\n\r\n        history.push(props.match.url + `/course-management/${course._id}`);\r\n    }\r\n\r\n    const onCourseCreatedHandler = (courseData) => {\r\n        // console.log(courseData)\r\n        axiosAdmin.post(`/course`, courseData, config).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isAdded) {\r\n                const newCourseList = courseList.concat(responseData.addedProduct);\r\n\r\n                setCourseList(newCourseList);\r\n\r\n                history.push(props.match.url + '/course-management');\r\n            }\r\n        });\r\n    };\r\n\r\n    const onCourseEditHandler = (courseToEdit) => {\r\n        history.push(props.match.url + `/course-management/edit-course/${courseToEdit._id}`)\r\n\r\n        setCourseToEdit(courseToEdit);\r\n    }\r\n\r\n    const onCourseEditedHandler = (newCourseData) => {\r\n        axiosAdmin.put(`/course/${newCourseData._id}`, newCourseData, config).then(response => {\r\n            if (response.data.isEdited) {\r\n                const copiedCourseList = courseList.map(course => {\r\n                    if (course._id === newCourseData._id) {\r\n                        return {\r\n                            ...response.data.newCourse\r\n                        };\r\n                    }\r\n\r\n                    return course\r\n                });\r\n\r\n                setCourseList(copiedCourseList);\r\n\r\n                history.push(props.match.url + '/course-management');\r\n            }\r\n        });\r\n    }\r\n\r\n    const onCourseDeletedHandler = (courseId) => {\r\n        axiosAdmin.delete(`/course/${courseId}`, config).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isDeleted || false) {\r\n                const copiedCourseList = courseList.filter(course => course._id !== responseData.removedItemId);\r\n\r\n                setCourseList(copiedCourseList);\r\n            }\r\n        })\r\n    }\r\n\r\n    const onCoursePublishedHandler = (courseId, isPublished) => {\r\n        axiosAdmin.put(`/course/publish/${courseId}`, { isPublished: isPublished }, config).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.success || false) {\r\n                const copiedCourseList = courseList.map(course => {\r\n                    if (course._id === courseId) {\r\n                        return {\r\n                            ...course,\r\n                            isPublished: responseData.isPublished\r\n                        };\r\n                    }\r\n\r\n                    return course;\r\n                });\r\n\r\n                setCourseList(copiedCourseList);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    // TODO: FIX/CHANGE LATER\r\n    const onCourseListUpdatedHandler = (newCourseData) => {\r\n        const copiedCourseList = [...courseList].map(course => {\r\n            if (course._id === newCourseData._id) {\r\n                course = {...newCourseData};\r\n            }\r\n\r\n            return course;\r\n        });\r\n\r\n        // console.log(copiedCourseList)\r\n        setCourseList(copiedCourseList);\r\n        setSelectedCourse(newCourseData);\r\n    }\r\n\r\n    const onUserEnrollmentSubmittedHandler = (submittedUsers) => {\r\n        axiosAdmin.put(`/course/${selectedCourse._id}/enroll-users`, { userList: submittedUsers }, config).then(response => {\r\n            let responseData = response.data;\r\n\r\n            if (responseData.areUsersEnrolled) {\r\n                const copiedCourseList = courseList.map(course => {\r\n                    if (course._id === selectedCourse._id) {\r\n                        return {\r\n                            ...responseData.newCourse\r\n                        };\r\n                    }\r\n\r\n                    return course\r\n                });\r\n\r\n                setCourseList(copiedCourseList);\r\n\r\n                history.push(props.match.url + '/course-management');\r\n            }\r\n        });\r\n    }\r\n\r\n    let routes = (\r\n\t\t<Switch>\r\n            <Route path={props.match.url + '/course-management/:id/user-enrollment'} render={() =>\r\n                <CourseEnrollment\r\n                    userList={userList}\r\n                    enrolledUsers={selectedCourse.enrolledUsers}\r\n                    onUserEnrollmentSubmitted={onUserEnrollmentSubmittedHandler}\r\n                />} />\r\n            <Route path={props.match.url + '/course-management/edit-course/:id'} render={() =>\r\n                <CreateCourse\r\n                    savedCourseData={courseToEdit}\r\n                    courseEdited={onCourseEditedHandler}\r\n                />} />\r\n            <Route path={props.match.url + '/course-management/create-course'} render={() =>\r\n                <CreateCourse courseCreated={onCourseCreatedHandler} />} />\r\n            <Route path={props.match.url + '/course-management/:id'} render={() =>\r\n                <Course\r\n                    token={props.token}\r\n                    courseData={selectedCourse}\r\n                    courseListUpdated={onCourseListUpdatedHandler}\r\n                    courseActivityAdded={onCourseListUpdatedHandler}\r\n                    courseActivityEdited={onCourseListUpdatedHandler}\r\n                />} />\r\n\t\t\t<Route path={props.match.url  + '/course-management/'} render={() => <AdminCourseList\r\n                courseList={courseList}\r\n                onCourseNameClicked={onCourseNameClickedHandler}\r\n                onCourseEdited={onCourseEditHandler}\r\n                onCourseDeleted={onCourseDeletedHandler}\r\n                onCoursePublished={onCoursePublishedHandler}\r\n                />} />\r\n\t\t</Switch>\r\n\t);\r\n\r\n    return (\r\n        <>\r\n            {routes}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CourseManagement;","import React from 'react';\r\n\r\nimport classes from './AdminUserCard.module.scss';\r\nimport Button from '../../../../UI/Button/Button';\r\n\r\n// TODO: ADD MORE FIELD AND CUSTOM DESIGN\r\nconst AdminUserCard = props => {\r\n    return (\r\n        <section className={classes.AdminUserCard}>\r\n            <div className={classes.AdminUserCard__Body}>\r\n                {props.email + ' - ' + props.status}\r\n            </div>\r\n\r\n            <div className={classes.AdminUserCard__Cta}>\r\n                <Button btnType='BtnSecondary' btnSize='BtnSmall' clicked={props.userEdit}>Edit</Button>\r\n                <Button btnType='BtnDanger' btnSize='BtnSmall' clicked={props.userDelete}>Delete</Button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AdminUserCard;","import React from 'react';\r\n\r\nimport classes from './AdminUserList.module.scss';\r\nimport Accordion from '../../../UI/Accordion/Accordion';\r\nimport AdminUserCard from './AdminUserCard/AdminUserCard';\r\n\r\n// TODO: ADD MORE FIELD AND CUSTOM DESIGN\r\nconst AdminUserList = props => {\r\n    return (\r\n        <div className={classes.AdminUserList}>\r\n            <header className={classes.AdminUserList__Header}>\r\n                <h1>User List</h1>\r\n            </header>\r\n\r\n            <section>\r\n                {(props.userList || []).map(user => {\r\n                    return (\r\n                        <Accordion \r\n                            key={user._id}\r\n                            label={[user.firstName, user.lastName].join(' ')}>\r\n                            <AdminUserCard\r\n                                email={user.email}\r\n                                status={user.status}\r\n                                userEdit={() => props.userEdited(user)}\r\n                                userDelete={() => props.userDeleted(user._id)}\r\n                            />\r\n                        </Accordion>\r\n                    )\r\n                })}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminUserList;","import { useState, useEffect } from 'react';\r\n\r\n/*\r\n    A valid password should include the following:\r\n    - at least 8 characters, at most 16 characters long\r\n    - at least 1 uppercase character\r\n    - at least 1 numeric character\r\n    - at least 1 non-alpha numeric character like: `! @ # $ % ^ &`\r\n*/\r\n\r\nconst usePasswordValidation = password => {\r\n    const [validLength, setValidLength] = useState(false);\r\n    const [hasNumber, setHasNumber] = useState(false);\r\n    const [upperCase, setUpperCase] = useState(false);\r\n    const [specialChar, setSpecialChar] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Length validation\r\n        setValidLength(password.length >= 8 && password.length <= 16);\r\n\r\n        // Number validation\r\n        setHasNumber(/\\d/g.test(password)); \r\n\r\n        // Uppercase validation\r\n        setUpperCase(/[A-Z]/g.test(password));\r\n\r\n        // Special character validation\r\n        setSpecialChar(/[!@#$%^&*]/g.test(password));\r\n    }, [password]);\r\n\r\n    return [validLength, hasNumber, upperCase, specialChar];\r\n}\r\n\r\nexport default usePasswordValidation;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport usePasswordValidation from '../../../../hooks/usePasswordValidation';\r\nimport classes from './CreateUser.module.scss';\r\nimport formValidation from '../../../../utility/formValidation';\r\nimport Input from '../../../UI/Input/Input';\r\nimport Button from '../../../UI/Button/Button';\r\n\r\nconst CreateUser = React.memo(props => {\r\n    const params = useParams();\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [userDataFormControls, setUserDataFormControls] = useState({\r\n        firstName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'First Name'\r\n            },\r\n            label: \"First Name\",\r\n            validation: {\r\n                required: true,\r\n                isEnglishOnly: true,\r\n                minLength: 3\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Last Name'\r\n            },\r\n            label: \"Last Name\",\r\n            validation: {\r\n                required: true,\r\n                isEnglishOnly: true,\r\n                minLength: 3\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'E-mail'\r\n            },\r\n            label: \"E-mail\",\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password',\r\n                autoComplete: 'new-password'\r\n            },\r\n            label: \"Password\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 8,\r\n                maxLength: 16,\r\n                containsNumeric: true,\r\n                containsSpecial: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        status: {\r\n            elementType: 'select',\r\n            elementConfig: {\r\n                options: [{\r\n                    value: 'user',\r\n                    displayValue: 'User'\r\n                }, {\r\n                    value: 'teacher',\r\n                    displayValue: 'Teacher'\r\n                }]\r\n            },\r\n            label: \"Status\",\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: true,\r\n            touched: false,\r\n            value: 'user'\r\n        }\r\n    });\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [validLength, hasNumber, upperCase, specialChar] = usePasswordValidation(userDataFormControls.password.value);\r\n\r\n    const populateFormFields = useCallback(() => {\r\n        const userData = { ...props.savedUserData, password: ''};\r\n        const copiedFormControls = { ...userDataFormControls };\r\n        let copiedFormCtrl = {};\r\n\r\n        Object.keys(copiedFormControls).forEach(frmCtrl => {\r\n            copiedFormCtrl = { ...copiedFormControls[frmCtrl] };\r\n\r\n            copiedFormCtrl.value = userData[frmCtrl] || '';\r\n            copiedFormCtrl.touched = true;\r\n            copiedFormCtrl.valid = true;\r\n\r\n            copiedFormControls[frmCtrl] = {...copiedFormCtrl};\r\n        });\r\n\r\n        setUserDataFormControls(copiedFormControls);\r\n        setFormIsValid(true);\r\n        // eslint-disable-next-line\r\n    }, [props.savedUserData]);\r\n\r\n    const resetFormFields = useCallback(() => {\r\n        const copiedFormControls = { ...userDataFormControls };\r\n        let copiedFormCtrl = {};\r\n\r\n        Object.keys(copiedFormControls).forEach(frmCtrl => {\r\n            copiedFormCtrl = { ...copiedFormControls[frmCtrl] };\r\n\r\n            if (frmCtrl === 'status') {\r\n                copiedFormCtrl.value = 'user';\r\n                copiedFormCtrl.valid = true;\r\n            } else {\r\n                copiedFormCtrl.value = '';\r\n            }\r\n\r\n            copiedFormCtrl.touched = false;\r\n            copiedFormCtrl.valid = false;\r\n\r\n            copiedFormControls[frmCtrl] = {...copiedFormCtrl};\r\n        });\r\n\r\n        setUserDataFormControls(copiedFormControls);\r\n        setFormIsValid(false);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (params.id && params.id !== '') {\r\n            setIsEditMode(true);\r\n\r\n            // Populate the form fields\r\n            populateFormFields();\r\n        } else {\r\n            // setIsEditMode(false);\r\n            if (isEditMode) {\r\n                setIsEditMode(false);\r\n\r\n                resetFormFields()\r\n            }\r\n            \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [params, populateFormFields, resetFormFields]);\r\n\r\n    const inputChangedHandler = (event, formControl) => {\r\n        const copiedUserDataFormControls = { ...userDataFormControls };\r\n\r\n        const copiedFormControl = { ...copiedUserDataFormControls[formControl] };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        copiedUserDataFormControls[formControl] = copiedFormControl;\r\n\r\n        // Set the validiity of the form\r\n        let formValid = true;\r\n        Object.keys(copiedUserDataFormControls).forEach(formCtrl => {\r\n            formValid = formValid && copiedUserDataFormControls[formCtrl].valid;\r\n        });\r\n\r\n        setFormIsValid(formValid);\r\n        setUserDataFormControls(copiedUserDataFormControls);\r\n    }\r\n\r\n    const onUserCreatedHandler = () => {\r\n        let userData = {};\r\n\r\n        if (!isEditMode) {\r\n            userData = {\r\n                firstName: (userDataFormControls.firstName || {}).value || '',\r\n                lastName: (userDataFormControls.lastName || {}).value || '',\r\n                email: (userDataFormControls.email || {}).value || '',\r\n                password: (userDataFormControls.password || {}).value || '',\r\n                status: (userDataFormControls.status || {}).value || '',\r\n            };\r\n\r\n            props.userCreated(userData);\r\n        } else {\r\n            userData = {\r\n                ...props.savedUserData,\r\n                firstName: (userDataFormControls.firstName || {}).value || '',\r\n                lastName: (userDataFormControls.lastName || {}).value || '',\r\n                email: (userDataFormControls.email || {}).value || '',\r\n                status: (userDataFormControls.status || {}).value || '',\r\n            };\r\n\r\n            let newPass = (userDataFormControls.password || {}).value || '';\r\n            if (newPass !== '') {\r\n                userData.password = newPass;\r\n            }\r\n\r\n            props.userEdited(userData);\r\n        }\r\n    };\r\n\r\n    let formContent = Object.keys(userDataFormControls).map(formControl => {\r\n        return <Input\r\n            key={formControl}\r\n            elementType={userDataFormControls[formControl].elementType}\r\n            elementConfig={userDataFormControls[formControl].elementConfig}\r\n            label={userDataFormControls[formControl].label}\r\n            value={userDataFormControls[formControl].value}\r\n            touched={userDataFormControls[formControl].touched}\r\n            isValid={userDataFormControls[formControl].valid}\r\n            changed={(event) => inputChangedHandler(event, formControl)}\r\n            isPassword={formControl === 'password'}\r\n            passwordValidationMap={{validLength, hasNumber, upperCase, specialChar}}\r\n        />;\r\n    });\r\n\r\n    return (\r\n        <section className={classes.CreateUser}>\r\n            <header className={classes.CreateUser__Header}>\r\n                <h1>{!isEditMode ? 'Create a user' : 'Edit the user'}</h1>\r\n            </header>\r\n\r\n            <div className={classes.CreateUser__Form}>\r\n                {formContent}\r\n            </div>\r\n\r\n            <Button\r\n                btnType='BtnSecondary'\r\n                disabled={!formIsValid}\r\n                clicked={onUserCreatedHandler}>{!isEditMode ? 'Create' : 'Edit'}</Button>\r\n        </section>\r\n    );\r\n});\r\n\r\nexport default CreateUser;","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\n\r\nimport axiosAdmin from '../../../axiosUtility/axios-admin';\r\nimport AdminUserList from './AdminUserList/AdminUserList';\r\nimport CreateUser from './CreateUser/CreateUser';\r\n\r\nconst UserManagement = (props) => {\r\n    const [userList, setUserList] = useState([]);\r\n    const [userToEdit, setUserToEdit] = useState({});\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axiosAdmin.get('/user', {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        }).then(response => {\r\n            setUserList(response.data.userList);\r\n        });\r\n    }, [props.token]);\r\n\r\n    const onUserCreatedHandler = (userData) => {\r\n        axiosAdmin.post(`/user`, userData, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        }).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isCreated) {\r\n                const newUserList = userList.concat(responseData.user);\r\n\r\n                setUserList(newUserList);\r\n\r\n                history.push(props.match.url + '/user-management');\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const onUserEditedHandler = (editedUserData) => {\r\n        axiosAdmin.put(`/user/${editedUserData._id}`, editedUserData, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        }).then(response => {\r\n            if (response.data.isEdited) {\r\n                const copiedUserList = userList.map(user => {\r\n                    if (user._id === editedUserData._id) {\r\n                        return {\r\n                            ...response.data.newUserData\r\n                        };\r\n                    }\r\n\r\n                    return user\r\n                });\r\n\r\n                setUserList(copiedUserList);\r\n\r\n                history.push(props.match.url + '/user-management');\r\n            }\r\n        });\r\n    }\r\n\r\n    const onUserDeletedHandler = (userId) => {\r\n        axiosAdmin.delete(`/user/${userId}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        }).then(response => {\r\n            const responseData = response.data || {};\r\n\r\n            if (responseData.isDeleted || false) {\r\n                const copiedUserList = userList.filter(user => user._id !== responseData.removedUserId);\r\n\r\n                setUserList(copiedUserList);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const onUserEdit = (userToEdit) => {\r\n        history.push(props.match.url + `/user-management/edit-user/${userToEdit._id}`)\r\n\r\n        setUserToEdit(userToEdit);\r\n    }\r\n\r\n    let routes = (\r\n\t\t<Switch>\r\n            <Route path={props.match.url + '/user-management/edit-user/:id'} render={() =>\r\n                <CreateUser\r\n                    savedUserData={userToEdit}\r\n                    userEdited={onUserEditedHandler}\r\n                />} />\r\n            <Route path={props.match.url + '/user-management/create-user'} render={() => <CreateUser \r\n                userCreated={onUserCreatedHandler}/>} />\r\n\t\t\t<Route path={props.match.url} render={() => <AdminUserList\r\n                userList={userList}\r\n                userEdited={onUserEdit}\r\n                userDeleted={onUserDeletedHandler} />} />\r\n\t\t</Switch>\r\n\t);\r\n\r\n    return (\r\n        routes\r\n    );\r\n}\r\n\r\nexport default UserManagement;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport AdminHome from './AdminHome/AdminHome';\r\nimport AdminNavigation from './AdminNavigation/AdminNavigation';\r\nimport CourseManagement from './CourseManagement/CourseManagement';\r\nimport UserManagement from './UserManagement/UserManagement';\r\nimport classes from './Administration.module.scss';\r\n\r\nconst Administration = (props) => {\r\n    let routes = (\r\n\t\t<Switch>\r\n\t\t\t<Route path={props.match.url + '/user-management'}  render={() => <UserManagement {...props} />} />\r\n\t\t\t<Route path={props.match.url + '/course-management'} render={() => <CourseManagement {...props} />} />\r\n\t\t\t<Route path={props.match.url} render={() => <AdminHome />} />\r\n\t\t\t{/* <Redirect to='/' /> */}\r\n\t\t</Switch>\r\n\t);\r\n\r\n    return (\r\n        <section className={classes.Administration}>\r\n            <AdminNavigation { ...props } />\r\n\r\n            {routes}\r\n        </section>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Administration);","import axios from 'axios';\r\n\r\n// 'https://glacial-garden-54072.herokuapp.com/api/auth'\r\n// 'http://localhost:8000/api/auth'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://glacial-garden-54072.herokuapp.com/api/auth'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axiosAuth from '../../axiosUtility/axios-auth';\r\n\r\nexport const signupStart = () => {\r\n    return {\r\n        type: actionTypes.SIGNUP_START\r\n    };\r\n};\r\n\r\nexport const signupSuccess = () => {\r\n    return {\r\n        type: actionTypes.SIGNUP_SUCCESS,\r\n        path: '/auth/signup-success'\r\n    };\r\n};\r\n\r\nexport const signupFail = (error) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const signupRedirect = () => {\r\n    return {\r\n        type: actionTypes.SIGNUP_REDIRECT\r\n    };\r\n};\r\n\r\nexport const signup = (userData) => {\r\n    return dispatch => {\r\n        dispatch(signupStart());\r\n\r\n        axiosAuth.post('/signup', userData).then(response => {\r\n            dispatch(signupSuccess());\r\n        }).catch(error => {\r\n            dispatch(signupFail(error.response.data.message));\r\n        });\r\n    };\r\n};\r\n\r\nexport const authTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if(token === null){\r\n            dispatch(logout());\r\n        }\r\n        else \r\n        {\r\n            const expirationDate = new Date(localStorage.getItem('expirationTime'));\r\n            if(expirationDate > new Date()){\r\n                const userId = localStorage.getItem('userId');\r\n\r\n                const response = await axiosAuth.get(`/${userId}`);\r\n                const status = response.data.user.status;\r\n                const userImage = response.data.user.avatarUrl;\r\n\r\n                dispatch(loginSuccess(token, userId, userImage, status));\r\n                dispatch(authTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            } else {\r\n                dispatch(logout());\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const loginStart = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_START\r\n    };\r\n}\r\n\r\nexport const loginSuccess = (token, userId, userImage, status) => {\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        token: token,\r\n        userId: userId,\r\n        userImage: userImage,\r\n        path: '/',\r\n        status: status\r\n    };\r\n};\r\n\r\nexport const loginFail = (error) => {\r\n    return {\r\n        type: actionTypes.LOGIN_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const login = (userData) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n\r\n        axiosAuth.post('/login', userData).then(response => {\r\n            const expirationTime = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n\r\n            localStorage.setItem(\"userId\", response.data.userId);\r\n            localStorage.setItem(\"token\", response.data.token);\r\n            localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n            dispatch(loginSuccess(response.data.token, response.data.userId, response.data.userImage, response.data.status));\r\n            dispatch(authTimeout(+response.data.expiresIn));\r\n        }).catch(error => {\r\n            dispatch(loginFail(error.response.data.message));\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    return {\r\n        type: actionTypes.LOGOUT\r\n    }\r\n}\r\n\r\nexport const passwordResetRequestStart = () => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_REQUEST_START\r\n    };\r\n};\r\n\r\nexport const passwordResetRequestSuccess = () => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_REQUEST_SUCCESS,\r\n        path: '/'\r\n    };\r\n};\r\n\r\nexport const passwordResetRequestFail = (error) => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_REQUEST_FAIL,\r\n        error: error,\r\n        path: '/auth/reset-password'\r\n    };\r\n};\r\n\r\nexport const passwordResetRequest = (email) => {\r\n    return dispatch => {\r\n        dispatch(passwordResetRequestStart());\r\n\r\n        axiosAuth.post('/password-reset-request', { email }).then(result => {\r\n            dispatch(passwordResetRequestSuccess());\r\n        }).catch(error => {\r\n            dispatch(passwordResetRequestFail(error.response.data.message));\r\n        });\r\n    };\r\n};\r\n\r\n\r\n// TODO\r\nexport const resetPasswordStart = () => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_START\r\n    };\r\n};\r\n\r\nexport const resetPasswordSuccess = () => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_SUCCESS,\r\n        path: '/'\r\n    };\r\n}\r\n\r\nexport const resetPasswordFail = (error) => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_FAIL,\r\n        error: error,\r\n        path: '/auth/reset-password'\r\n    };\r\n}\r\n\r\nexport const resetPassword = (formData) => {\r\n    return dispatch => {\r\n        dispatch(resetPasswordStart());\r\n\r\n        const data = {\r\n            password: formData.password,\r\n            token: formData.token\r\n        };\r\n\r\n        axiosAuth.put('/password-reset', data).then(response => {\r\n            dispatch(resetPasswordSuccess());\r\n        }).catch(error => {\r\n            dispatch(resetPasswordFail(error.response.data.message));\r\n        });\r\n    }\r\n}\r\n\r\nexport const changeAvatar = (newAvatarUrl) => {\r\n    return {\r\n        type: actionTypes.AVATAR_CHANGE,\r\n        newUrl: newAvatarUrl\r\n    };\r\n}","export const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const SIGNUP_REDIRECT = 'SIGNUP_REDIRECT';\r\n\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const PASSWORD_RESET_REQUEST_START = 'PASSWORD_RESET_REQUEST_START';\r\nexport const PASSWORD_RESET_REQUEST_SUCCESS = 'PASSWORD_RESET_REQUEST_SUCCESS';\r\nexport const PASSWORD_RESET_REQUEST_FAIL = 'PASSWORD_RESET_REQUEST_FAIL';\r\n\r\nexport const PASSWORD_RESET_START = 'PASSWORD_RESET_START';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\n\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const AVATAR_CHANGE = 'AVATAR_CHANGE';","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from './Backdrop.module.scss';\r\n\r\nconst Backdrop = (props) => \r\n    ReactDOM.createPortal(\r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}/> : null,\r\n        document.getElementById('backdrop-root')\r\n    );\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from './FeedbackDialogue.module.scss';\r\nimport Backdrop from '../UI/Backdrop/Backdrop';\r\n\r\nconst FeedbackDialogue = (props) => {\r\n    let classList = [classes.FeedbackDialogue__Button];\r\n\r\n    if (props.isError) {\r\n        classList = [classes.FeedbackDialogue__Button, classes.FeedbackDialogue__Button__Error];\r\n    } else {\r\n        classList = [classes.FeedbackDialogue__Button, classes.FeedbackDialogue__Button__Success];\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            props.show ? (\r\n                <div className={classes.FeedbackDialogueContainer}>\r\n                    <Backdrop show={props.show} />\r\n                    <div className={classes.FeedbackDialogue}>\r\n                        <p>{props.feedbackMessage || 'Something went wrong'}</p>\r\n                        <div>\r\n                            <button\r\n                                className={classList.join(' ')}\r\n                                onClick={props.closed}>Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>) : null,\r\n            document.getElementById('error-root')\r\n        )\r\n    );\r\n}  \r\n\r\nexport default FeedbackDialogue;","const changeInputObjectValue = (actualObject, keyName, newData) => {\r\n    const copiedObject = { ...actualObject };\r\n    const copiedObjectElement = { \r\n        ...copiedObject[keyName],\r\n        ...newData\r\n    };\r\n\r\n    copiedObject[keyName] = copiedObjectElement;\r\n\r\n    return { ...copiedObject };\r\n}\r\n\r\nexport default changeInputObjectValue;","import React, { useState } from 'react';\r\n\r\nimport classes from './PasswordChange.module.scss';\r\nimport changeInputObjectValue from '../../../utility/changeInputObjectValue';\r\nimport usePasswordValidation from '../../../hooks/usePasswordValidation';\r\nimport formValidation from '../../../utility/formValidation';\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst PasswordChange = props => {\r\n    const [passwordChangeFormControls, setPasswordChangeFormControls] = useState({\r\n        oldPassword: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Old Password',\r\n                autoComplete: 'new-password'\r\n            },\r\n            label: \"Old Password\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 8,\r\n                maxLength: 16,\r\n                containsNumeric: true,\r\n                containsSpecial: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        newPassword: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'New Password',\r\n                autoComplete: 'new-password'\r\n            },\r\n            label: \"New Password\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 8,\r\n                maxLength: 16,\r\n                containsNumeric: true,\r\n                containsSpecial: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        newPasswordAgain: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'New Password Again',\r\n                autoComplete: 'new-password'\r\n            },\r\n            label: \"New Password Again\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 8,\r\n                maxLength: 16,\r\n                containsNumeric: true,\r\n                containsSpecial: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        }\r\n    });\r\n    const [validLength, hasNumber, upperCase, specialChar] = usePasswordValidation(passwordChangeFormControls.newPassword.value);\r\n    const [_validLength, _hasNumber, _upperCase, _specialChar] = usePasswordValidation(passwordChangeFormControls.newPasswordAgain.value);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [passwordsMatch, setPasswordsMatch] = useState(false);\r\n\r\n    const inputChangedHandler = (event, formControl) => {\r\n        const copiedPasswordChangeFormControls = { ...passwordChangeFormControls };\r\n        const copiedFormControl = { ...copiedPasswordChangeFormControls[formControl] };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\r\n        \r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        copiedPasswordChangeFormControls[formControl] = copiedFormControl;\r\n\r\n        // Set the validiity of the form\r\n        let formValid = true;\r\n        Object.keys(copiedPasswordChangeFormControls).forEach(formCtrl => {\r\n            formValid = formValid && copiedPasswordChangeFormControls[formCtrl].valid;\r\n        });\r\n\r\n        setFormIsValid(formValid);\r\n        setPasswordChangeFormControls(copiedPasswordChangeFormControls);\r\n\r\n        // Check if the passwords match\r\n        setPasswordsMatch(copiedPasswordChangeFormControls.newPassword.value ===\r\n            copiedPasswordChangeFormControls.newPasswordAgain.value)\r\n    }\r\n\r\n    const onPasswordChanged = () => {\r\n        let data = {};\r\n\r\n        Object.keys(passwordChangeFormControls).forEach(passwordData => {\r\n            data[passwordData] = passwordChangeFormControls[passwordData].value;\r\n        });\r\n\r\n        props.passwordChange(data);\r\n\r\n        // Reset the form fields.\r\n        let copiedFormControls = {...passwordChangeFormControls};\r\n\r\n        Object.keys(copiedFormControls).forEach(key => {\r\n            copiedFormControls = changeInputObjectValue(copiedFormControls, key, {\r\n                value: '',\r\n                touched: false,\r\n                valid: false\r\n            });\r\n        });\r\n\r\n        setPasswordChangeFormControls(copiedFormControls);\r\n    }\r\n\r\n    let formContent = Object.keys(passwordChangeFormControls).map(formControl => {\r\n        return <Input\r\n            key={formControl}\r\n            elementType={passwordChangeFormControls[formControl].elementType}\r\n            elementConfig={passwordChangeFormControls[formControl].elementConfig}\r\n            label={passwordChangeFormControls[formControl].label}\r\n            value={passwordChangeFormControls[formControl].value}\r\n            touched={passwordChangeFormControls[formControl].touched}\r\n            isValid={passwordChangeFormControls[formControl].valid}\r\n            changed={(event) => inputChangedHandler(event, formControl)}\r\n            isPassword={formControl === 'newPassword' || formControl === 'newPasswordAgain'}\r\n            passwordValidationMap={formControl === 'newPassword' ?\r\n                {validLength, hasNumber, upperCase, specialChar} :\r\n                {validLength: _validLength, hasNumber: _hasNumber, upperCase: _upperCase, specialChar: _specialChar}}\r\n        />;\r\n    });\r\n\r\n    let showMatchWarning = !passwordsMatch &&\r\n        passwordChangeFormControls.newPassword.touched &&\r\n        passwordChangeFormControls.newPasswordAgain.touched;\r\n\r\n    return (\r\n        <div className={classes.PasswordChange}>\r\n            <header className={classes.PasswordChange__Header}>\r\n                <h2>Change your password</h2>\r\n            </header>\r\n\r\n            <div className={classes.PasswordChange__Form}>\r\n                {formContent}\r\n\r\n                {showMatchWarning ? <div className={classes.PasswordChange__Form__Warning}>\r\n                    New passwords should match!\r\n                </div> : null}\r\n            </div>\r\n\r\n            <div className={classes.PasswordChange__Cta}>\r\n                <Button\r\n                    disabled={!(formIsValid && passwordsMatch)}\r\n                    clicked={onPasswordChanged}\r\n                >Save</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordChange;","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport classes from './AccountDataChange.module.scss';\r\nimport changeInputObjectValue from '../../../utility/changeInputObjectValue';\r\nimport formValidation from '../../../utility/formValidation';\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst AccountDataChange = props => {\r\n    const [accountDataFormControls, setAccountDataFormControls] = useState({\r\n        firstName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'First Name'\r\n            },\r\n            label: 'First Name',\r\n            validation: {\r\n                required: true,\r\n                isEnglishOnly: true,\r\n                minLength: 3\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Last Name'\r\n            },\r\n            label: 'Last Name',\r\n            validation: {\r\n                required: true,\r\n                isEnglishOnly: true,\r\n                minLength: 3\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'E-mail'\r\n            },\r\n            label: 'E-mail',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        dateOfBirth: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'date',\r\n                placeholder: 'Date of Birth'\r\n            },\r\n            label: 'Date of Birth',\r\n            validation: {},\r\n            valid: true,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        gender: {\r\n            elementType: 'select',\r\n            elementConfig: {\r\n                options: [{\r\n                    value: 'male',\r\n                    displayValue: 'Male'\r\n                }, {\r\n                    value: 'female',\r\n                    displayValue: 'Female'\r\n                }, {\r\n                    value: 'I don\\'t want to disclose',\r\n                    displayValue: 'I don\\'t want to disclose'\r\n                }]\r\n            },\r\n            label: \"Gender\",\r\n            validation: {},\r\n            valid: true,\r\n            touched: false,\r\n            value: 'male'\r\n        },\r\n    });\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n    const populateFormFields = useCallback(() => {\r\n        let savedUserData = props.userData || {};\r\n\r\n        let copiedFormControls = {...accountDataFormControls};\r\n\r\n        Object.keys(savedUserData).filter(dataKey => Object.keys(accountDataFormControls).indexOf(dataKey) !== -1).forEach(key => {\r\n            copiedFormControls = changeInputObjectValue(copiedFormControls, key, {\r\n                value: savedUserData[key],\r\n                touched: true,\r\n                valid: true\r\n            });\r\n        });\r\n\r\n        setAccountDataFormControls({...copiedFormControls});\r\n        setFormValid(true);\r\n        // eslint-disable-next-line\r\n    }, [props.userData]);\r\n\r\n    useEffect(() => {\r\n        populateFormFields();\r\n    }, [populateFormFields]);\r\n\r\n    const inputChangedHandler = (event, formControl) => {\r\n        // console.log(`The input: ${formControl} and the value is: ${event.target.value}`);\r\n\r\n        const copiedAccountDataFormControls = { ...accountDataFormControls };\r\n        const copiedFormControl = { ...copiedAccountDataFormControls[formControl] };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formControl !== 'dateOfBirth' ? formValidation(event.target.value, copiedFormControl.validation) : true;\r\n        \r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        copiedAccountDataFormControls[formControl] = copiedFormControl;\r\n\r\n        // Set the validiity of the form\r\n        let formValid = true;\r\n        Object.keys(copiedAccountDataFormControls).forEach(formCtrl => {\r\n            formValid = formValid && copiedAccountDataFormControls[formCtrl].valid;\r\n        });\r\n\r\n        setFormValid(formValid);\r\n        setAccountDataFormControls(copiedAccountDataFormControls);\r\n    }\r\n\r\n    const onAccountDataChanged = () => {\r\n        let data = {};\r\n\r\n        Object.keys(accountDataFormControls).forEach(accountData => {\r\n            data[accountData] = accountDataFormControls[accountData].value;\r\n        });\r\n\r\n        props.accountDataChange(data);\r\n    }\r\n\r\n    let formContent = Object.keys(accountDataFormControls).map(formControl => {\r\n        return <Input\r\n            key={formControl}\r\n            elementType={accountDataFormControls[formControl].elementType}\r\n            elementConfig={accountDataFormControls[formControl].elementConfig}\r\n            label={accountDataFormControls[formControl].label}\r\n            value={accountDataFormControls[formControl].value}\r\n            touched={accountDataFormControls[formControl].touched}\r\n            isValid={accountDataFormControls[formControl].valid}\r\n            changed={(event) => inputChangedHandler(event, formControl)}\r\n            isPassword={false}\r\n        />;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.AccountDataChange}>\r\n            <header className={classes.AccountDataChange__Header}>\r\n                <h2>Edit account data</h2>\r\n            </header>\r\n\r\n            <div className={classes.AccountDataChange__Form}>\r\n                {formContent}\r\n\r\n                <div className={classes.AccountDataChange__Form__Warning}>\r\n                    Error Message\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.AccountDataChange__Cta}>\r\n                <Button\r\n                    disabled={!formValid}\r\n                    clicked={onAccountDataChanged}>\r\n                    Save</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountDataChange;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nimport classes from './Account.module.scss';\r\nimport axiosAuth from '../../axiosUtility/axios-auth';\r\nimport FeedbackDialogue from '../FeedbackDialogue/FeedbackDialogue';\r\nimport PasswordChange from './PasswordChange/PasswordChange';\r\nimport AccountDataChange from './AccountDataChange/AccountDataChange';\r\nimport File from '../UI/File/File';\r\n\r\nconst MIME_TYPE_MAP = {\r\n    \"image/png\": \"png\",\r\n    \"image/jpeg\": \"jpeg\",\r\n    \"image/jpg\": \"jpg\"\r\n};\r\n\r\nconst Account = props => {\r\n    const [userData, setUserData] = useState({});\r\n    const [imageFile, setImageFile] = useState(undefined);\r\n    const [feedbackDialogue, setFeedbackDialogue] = useState({\r\n        isError: false,\r\n        message: '',\r\n        show: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        axiosAuth.get(`${props.userId}`).then(response => {\r\n            setUserData(response.data.user)\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, [props.userId]);\r\n\r\n    const checkMimeType = (file) => {\r\n        return MIME_TYPE_MAP[file];\r\n    }\r\n\r\n    const fileSelectHandler = (file) => {\r\n        if(!checkMimeType(file.type)) {\r\n            return;\r\n        }\r\n\r\n        setImageFile(file);\r\n    }\r\n\r\n    const onPasswordChangedHandler = (data) => {\r\n        axiosAuth.put('/change-passwor', data, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        }).then(response => {\r\n            setFeedbackDialogue(() => {\r\n                return {\r\n                    isError: false,\r\n                    message: response.data.message,\r\n                    show: true\r\n                };\r\n            });\r\n        }).catch(error => {\r\n            setFeedbackDialogue(() => {\r\n                return {\r\n                    isError: true,\r\n                    message: error.response.data.message || 'Something went wrong!',\r\n                    show: true\r\n                };\r\n            });\r\n        });\r\n    }\r\n\r\n    const onAccountDataChangedHandler = (data) => {\r\n        const formData = new FormData();\r\n\r\n        Object.keys(data).forEach(key => {\r\n            formData.append(key, data[key]);\r\n        });\r\n        \r\n        if (typeof imageFile !== 'undefined') {\r\n            formData.append('file', imageFile);\r\n        } else {\r\n            formData.append('avatarUrl', userData.avatarUrl);\r\n        }\r\n\r\n        axiosAuth.put('/edit-account', formData, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        }).then(response => {\r\n            let newUserData = response.data.newUserData;\r\n\r\n            setUserData(newUserData);\r\n\r\n            props.changeAvatar(newUserData.avatarUrl);\r\n\r\n            setFeedbackDialogue(() => {\r\n                return {\r\n                    isError: false,\r\n                    message: response.data.message || 'Successful!',\r\n                    show: true\r\n                };\r\n            });\r\n        });\r\n    }\r\n\r\n    const onCloseFeedBackDialogueHandler = () => {\r\n        setFeedbackDialogue(() => {\r\n            return {\r\n                isError: false,\r\n                message: '',\r\n                show: false\r\n            };\r\n        });\r\n    }\r\n\r\n    let style = {};\r\n\r\n    if (imageFile) {\r\n        style['backgroundImage'] = `url(${URL.createObjectURL(imageFile)})`;\r\n    } else if (userData.avatarUrl !== '') {\r\n        let imageUrl = userData.avatarUrl || '';\r\n        \r\n        // http://localhost:8000/\r\n        if (imageUrl !== '')\r\n            style['backgroundImage'] = `url(${'https://glacial-garden-54072.herokuapp.com/' + imageUrl.replace(/\\\\/g, '/')})`;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FeedbackDialogue\r\n                show={feedbackDialogue.show}\r\n                feedbackMessage={feedbackDialogue.message}\r\n                closed={onCloseFeedBackDialogueHandler}\r\n                isError={feedbackDialogue.isError}\r\n            />\r\n\r\n            <section className={classes.Account}>\r\n                <header className={classes.Account__Header}>\r\n                    <h2>My Account</h2>\r\n                </header>\r\n\r\n                <div className={classes.Account__Content}>\r\n                    <div className={classes.Account__Content__ImageContainer}>\r\n                        <figure>\r\n                            <div className={classes.Account__Content__ImageContainer__Image} style={style}></div>\r\n                        </figure>\r\n\r\n                        <File selectedFile={fileSelectHandler} />\r\n                    </div>\r\n\r\n                    <div className={classes.Account__Content__FormContainer}>\r\n                        <AccountDataChange\r\n                            userData={userData}\r\n                            accountDataChange={onAccountDataChangedHandler} />\r\n\r\n                        <PasswordChange passwordChange={onPasswordChangedHandler} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.userId,\r\n        token: state.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeAvatar: (newImgUrl) => dispatch(actions.changeAvatar(newImgUrl))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);","import React from 'react';\r\n\r\nimport classes from './Logo.module.scss';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <span className={classes.Logo}>\r\n            &nbsp;\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.scss';\r\n\r\nconst NavigationItem = (props) => {\r\n    return (\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink\r\n                className={classes.Link}\r\n                activeClassName={classes.ActiveLink}\r\n                exact={props.exact}\r\n                to={props.to}>{props.children}</NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default NavigationItem;","import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst useComponentVisible = initialVisibilityState => {\r\n    const [isComponentVisible, setIsComponentVisible] = useState(initialVisibilityState);\r\n\r\n    const ref = useRef(null);\r\n\r\n    const handleHideDropdown = event => {\r\n        if (event.key === \"Escape\") {\r\n            setIsComponentVisible(false);\r\n        }\r\n    };\r\n\r\n    const handleClickOutside = event => {\r\n        // In order for this to work, ref element and the element that is clicked should be siblings\r\n        if (ref.current && !ref.current.parentElement.contains(event.target)) {\r\n            setIsComponentVisible(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleHideDropdown, true);\r\n        document.addEventListener(\"click\", handleClickOutside, true);\r\n        \r\n        return () => {\r\n            document.removeEventListener(\"keydown\", handleHideDropdown, true);\r\n            document.removeEventListener(\"click\", handleClickOutside, true);\r\n        };\r\n    });\r\n\r\n    return [ ref, isComponentVisible, setIsComponentVisible ];\r\n}\r\n\r\nexport default useComponentVisible;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './AccountItem.module.scss';\r\nimport useComponentVisible from '../../../hooks/useComponentVisible';\r\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem';\r\n\r\nconst AccountItem = props => {\r\n    const [ menuRef, isComponentVisible, setIsComponentVisible ] = useComponentVisible(false);\r\n    const [menuHeight, setMenuHeight] = useState(0);\r\n\r\n    let timeout = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        timeout.current = setTimeout(() => {\r\n            setMenuHeight(menuRef.current.scrollHeight);\r\n        }, 333);\r\n\r\n        return () => {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }, [menuRef]);\r\n\r\n    const toggleMenu = () => {\r\n        setIsComponentVisible(prevState => !prevState);\r\n    }\r\n\r\n    const innerStyle = {\r\n        height: `${isComponentVisible ? menuHeight : 0}px`\r\n    };\r\n\r\n    let profilePictureStyle = {};\r\n\r\n    // http://localhost:8000/\r\n    if (props.userImage) {\r\n        profilePictureStyle['backgroundImage'] = `url(${'https://glacial-garden-54072.herokuapp.com/' + props.userImage.replace(/\\\\/g, '/')})`;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.AccountItem}>\r\n            <figure className={classes.AccountItem__Profile} onClick={toggleMenu}>\r\n                <div className={classes.AccountItem__Profile__Picture} style={profilePictureStyle}></div>\r\n            </figure>\r\n\r\n            <div className={classes.AccountItem__Menu} ref={menuRef} style={innerStyle}>\r\n                <NavigationItem exact to=\"/my-account\">My Account</NavigationItem>\r\n                <NavigationItem exact to=\"/logout\">Logout</NavigationItem>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userImage: state.userImage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(AccountItem);","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.scss';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport AccountItem from '../AccountItem/AccountItem';\r\n\r\nconst NavigationItems = (props) => {\r\n    let navList = (\r\n        <>\r\n            <NavigationItem exact to=\"/\">Home</NavigationItem>\r\n            <NavigationItem exact to=\"/courses\">Courses</NavigationItem>\r\n            <NavigationItem exact to=\"/about\">About us</NavigationItem>\r\n            <NavigationItem exact to=\"/contact\">Contact</NavigationItem>\r\n            { props.status === 'admin' ?\r\n                <NavigationItem exact to=\"/administration\">Administration</NavigationItem> :\r\n                null\r\n            }\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <nav className={classes.Navigation}>\r\n            <ul className={classes.Navigation__Items}>\r\n                {navList}\r\n            </ul>\r\n\r\n            <ul className={classes.Navigation__Auth}>\r\n                { props.isAuth ?\r\n                    // <NavigationItem exact to=\"/logout\">Logout</NavigationItem> :\r\n                    // <NavigationItem exact to=\"/auth\">Sign in</NavigationItem>\r\n                    <AccountItem /> : <NavigationItem exact to=\"/auth\">Sign in</NavigationItem>\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavigationItems;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.scss';\r\nimport Logo from '../../UI/Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\n\r\nconst Toolbar = (props) => {\r\n    return (\r\n        <nav className={classes.ToolbarWrapper}>\r\n            <div className={classes.Toolbar}>\r\n                <Logo />\r\n\r\n                <div className={classes.Toolbar__Main}>\r\n                    <NavigationItems isAuth={props.isAuth} status={props.userStatus} />\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Toolbar;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\n\r\nconst Layout = (props) => {\r\n    const testStyle = {\r\n        width: '65%',\r\n        margin: '2rem auto 0 auto'\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Toolbar isAuth={props.isAuthenticated} userStatus={props.userStatus} />\r\n\r\n            <div style={testStyle}>\r\n                {props.children}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.isAuth,\r\n        userStatus: state.userStatus\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Layout);","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            Home Component\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\n\r\nimport classes from './Login.module.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport formValidation from '../../../utility/formValidation';\r\n\r\nconst Login = (props) => {\r\n    const [formControls, setFormControls] = useState({\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'E-mail'\r\n            },\r\n            label: \"E-mail\",\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            label: \"Password\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        }\r\n    });\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    let overlayClassList = [classes.Login__Overlay];\r\n\r\n    if (props.isSignupMode) {\r\n        overlayClassList = [classes.Login__Overlay, classes.Login__Overlay__Active];\r\n    }\r\n\r\n    const inputChangedHandler = (event, formControl) => {\r\n        const copiedFormControls = { ...formControls };\r\n\r\n        const copiedFormControl = { ...copiedFormControls[formControl] };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        copiedFormControls[formControl] = copiedFormControl;\r\n\r\n        // Set the validiity of the form\r\n        let formValid = true;\r\n        Object.keys(copiedFormControls).forEach(formCtrl => {\r\n            formValid = formValid && copiedFormControls[formCtrl].valid;\r\n        });\r\n\r\n        setFormIsValid(formValid);\r\n        setFormControls(copiedFormControls);\r\n    }\r\n\r\n    const onLoginFormSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const loginForm = {\r\n            email: formControls.email.value,\r\n            password: formControls.password.value\r\n        }\r\n\r\n        if(formIsValid) {\r\n            props.loginFormSubmit(loginForm);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Login}>\r\n            <span className={overlayClassList.join(' ')}></span>\r\n\r\n            <div className={classes.Login__Form}>\r\n                <h2 className={classes.Login__Form__Header}>\r\n                    Account Login\r\n                </h2>\r\n\r\n                <div className={classes.Login__Form__Fields}>\r\n                    {Object.keys(formControls).map(formControl => {\r\n                        return <Input\r\n                            key={formControl}\r\n                            elementType={formControls[formControl].elementType}\r\n                            elementConfig={formControls[formControl].elementConfig}\r\n                            label={formControls[formControl].label}\r\n                            value={formControls[formControl].value}\r\n                            touched={formControls[formControl].touched}\r\n                            isValid={formControls[formControl].valid}\r\n                            changed={(event) => inputChangedHandler(event, formControl)}\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n                <div className={classes.Login__Form__Cta}>\r\n                    <span onClick={props.forgotPasswordClicked}>\r\n                        Forgot your password?\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={classes.Login__Form__Cta}>\r\n                    <button disabled={!formIsValid} onClick={onLoginFormSubmitHandler}>Login</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\n\r\nimport classes from './Signup.module.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport formValidation from '../../../utility/formValidation';\r\n\r\nconst Signup = (props) => {\r\n    const [formControls, setFormControls] = useState({\r\n        firstName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'First Name'\r\n            },\r\n            label: \"First Name\",\r\n            validation: {\r\n                required: true,\r\n                isEnglishOnly: true,\r\n                minLength: 3\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Last Name'\r\n            },\r\n            label: \"Last Name\",\r\n            validation: {\r\n                required: true,\r\n                isEnglishOnly: true,\r\n                minLength: 3\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'E-mail'\r\n            },\r\n            label: \"E-mail\",\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            label: \"Password\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        }\r\n    });\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    let classList = [classes.Signup];\r\n\r\n    if (props.isSignupMode) {\r\n        classList = [classes.Signup, classes.Signup__Active];\r\n    }\r\n\r\n    const inputChangedHandler = (event, formControl) => {\r\n        const copiedFormControls = { ...formControls };\r\n\r\n        const copiedFormControl = { ...copiedFormControls[formControl] };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        copiedFormControls[formControl] = copiedFormControl;\r\n\r\n        // Set the validiity of the form\r\n        let formValid = true;\r\n        Object.keys(copiedFormControls).forEach(formCtrl => {\r\n            formValid = formValid && copiedFormControls[formCtrl].valid;\r\n        });\r\n\r\n        setFormIsValid(formValid);\r\n        setFormControls(copiedFormControls);\r\n    }\r\n\r\n    const onSignupFormSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const signupForm = {\r\n            firstName: formControls.firstName.value,\r\n            lastName: formControls.lastName.value,\r\n            email: formControls.email.value,\r\n            password: formControls.password.value\r\n        }\r\n\r\n        if(formIsValid) {\r\n            props.signupFormSubmit(signupForm);\r\n        }\r\n    }\r\n\r\n    const resetForm = () => {\r\n        const copiedFormControls = { ...formControls };\r\n        let copiedFormControl;\r\n\r\n        Object.keys(copiedFormControls).forEach(formControl => {\r\n            copiedFormControl = { ...copiedFormControls[formControl] };\r\n\r\n            copiedFormControl.valid = false;\r\n            copiedFormControl.touched = false;\r\n            copiedFormControl.value = '';\r\n\r\n            copiedFormControls[formControl] = copiedFormControl;\r\n        });\r\n\r\n        setFormControls(copiedFormControls);\r\n        setFormIsValid(false);\r\n    }\r\n\r\n    const onSignupOpened = (event) => {\r\n        resetForm();\r\n\r\n        props.closeSignupPanel(event, false);\r\n    }\r\n\r\n    return (\r\n        <div className={classList.join(' ')} onClick={(event) => props.openSignupPanel(event, true)}>\r\n            <span className={classes.Signup__Close} onClick={(event) => onSignupOpened(event)}></span>\r\n            \r\n            <div className={classes.Signup__Form}>\r\n                <h2 className={classes.Signup__Form__Header}>\r\n                    Create Account\r\n                </h2>\r\n\r\n                <div className={classes.Signup__Form__Fields}>\r\n                    {Object.keys(formControls).map(formControl => {\r\n                        return <Input\r\n                            key={formControl}\r\n                            elementType={formControls[formControl].elementType}\r\n                            elementConfig={formControls[formControl].elementConfig}\r\n                            label={formControls[formControl].label}\r\n                            value={formControls[formControl].value}\r\n                            touched={formControls[formControl].touched}\r\n                            isValid={formControls[formControl].valid}\r\n                            changed={(event) => inputChangedHandler(event, formControl)}\r\n                            labelColor='white'\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n                <div className={classes.Signup__Form__Cta}>\r\n                    <button disabled={!formIsValid} onClick={onSignupFormSubmitHandler}>Register</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { signupRedirect } from '../../../store/actions/index';\r\nimport classes from './SignupSuccess.module.scss';\r\n\r\nconst SignupSuccess = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(signupRedirect());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={classes.SignupSuccess}>\r\n            <h2 className={classes.SignupSuccess__Header}>\r\n                Signup Success!\r\n            </h2>\r\n\r\n            <div className={classes.SignupSuccess__Content}>\r\n                Press <Link to=\"/auth\">here</Link> to login!\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupSuccess;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from './RequestPasswordReset.module.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\nimport formValidation from '../../../utility/formValidation';\r\n\r\nconst RequestPasswordReset = (props) => {\r\n    const [email, setEmail] = useState({\r\n        elementType: 'input',\r\n        elementConfig: {\r\n            type: 'text',\r\n            placeholder: 'E-mail'\r\n        },\r\n        label: \"E-mail\",\r\n        validation: {\r\n            required: true,\r\n            isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        value: ''\r\n    });\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const inputChangedHandler = (event) => {\r\n        const copiedEmailFormControl = { ...email };\r\n\r\n        copiedEmailFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formValidation(event.target.value, copiedEmailFormControl.validation);\r\n        copiedEmailFormControl.valid = isValid;\r\n        copiedEmailFormControl.touched = true;\r\n\r\n        setEmail(copiedEmailFormControl);\r\n    }\r\n\r\n    const resetFormSubmitted = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.emailFormSubmit(email.value);\r\n        setRequestSent(true);\r\n    }\r\n\r\n    let pageContent = null;\r\n    if(props.loading) {\r\n        pageContent = 'LOADING...';\r\n    } else {\r\n        if (props.reqSuccessfull && requestSent) {\r\n            pageContent = (\r\n                <>\r\n                    <h2 className={classes.RequestPasswordReset__Header}>\r\n                        We sent you an e-mail!\r\n                    </h2>\r\n                    <p>Check your e-mail and follow the instructions.</p>\r\n                    <div className={classes.RequestPasswordReset__Cta}>\r\n                        <Link to=\"/\" className={classes.RequestPasswordReset__Link}>Home</Link>\r\n                    </div>\r\n                </>\r\n            );\r\n        } else {\r\n            pageContent = (\r\n                <>\r\n                    <h2 className={classes.RequestPasswordReset__Header}>\r\n                        Reset Password\r\n                    </h2>\r\n\r\n                    <form onSubmit={resetFormSubmitted} className={classes.RequestPasswordReset__Body}>\r\n                        <Input\r\n                            elementType={email.elementType}\r\n                            elementConfig={email.elementConfig}\r\n                            label={email.label}\r\n                            value={email.value}\r\n                            touched={email.touched}\r\n                            isValid={email.valid}\r\n                            changed={inputChangedHandler}\r\n                        />\r\n\r\n                        <Button disabled={!email.valid}>Continue</Button>\r\n                    </form>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.RequestPasswordReset}>\r\n            {pageContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestPasswordReset;","import React, { useState } from 'react';\r\n\r\nimport classes from './PasswordReset.module.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\nimport formValidation from '../../../utility/formValidation';\r\n\r\nconst PasswordReset = (props) => {\r\n    const [resetFormControls, setResetFormControls] = useState({\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            label: \"Password\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        passwordRepeat: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Verify Password'\r\n            },\r\n            label: \"Verify Password\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        }\r\n    });\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n    let token = props.location.pathname.split('/').slice(-1).join('');\r\n\r\n    const inputChangedHandler = (event, inputName) => {\r\n        const copiedFormControls = { ...resetFormControls };\r\n\r\n        const copiedFormControl = { ...copiedFormControls[inputName] };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        copiedFormControls[inputName] = copiedFormControl;\r\n\r\n        // Set the validiity of the form\r\n        let formIsValid = true;\r\n        Object.keys(copiedFormControls).forEach(formControl => {\r\n            formIsValid = formIsValid && copiedFormControls[formControl].valid;\r\n        });\r\n        formIsValid = formIsValid && copiedFormControls.password.value === copiedFormControls.passwordRepeat.value;\r\n\r\n        setFormValid(formIsValid);\r\n        setResetFormControls(copiedFormControls);\r\n    }\r\n\r\n    const passwordResetFormSubmitted = (event) => {\r\n        event.preventDefault();\r\n\r\n        const passwordResetForm = {\r\n            password: resetFormControls.password.value,\r\n            passwordVerify: resetFormControls.passwordRepeat.value,\r\n            token: token\r\n        };\r\n        \r\n        props.resetFormSubmit(passwordResetForm);\r\n    }\r\n\r\n    let formInputs = Object.keys(resetFormControls).map(formControl => {\r\n        return <Input \r\n            key={formControl}\r\n            elementType={resetFormControls[formControl].elementType}\r\n            elementConfig={resetFormControls[formControl].elementConfig}\r\n            label={resetFormControls[formControl].label}\r\n            value={resetFormControls[formControl].value}\r\n            touched={resetFormControls[formControl].touched}\r\n            isValid={resetFormControls[formControl].valid}\r\n            changed={(event) => inputChangedHandler(event, formControl)}\r\n        />;\r\n    });\r\n\r\n    let pageContent = null;\r\n    if(props.loading) {\r\n        pageContent = 'LOADING...';\r\n    } else if(props.path === '/') {\r\n        pageContent = <p className={classes.ResetedPasswordHeader}>Successfully changed your password</p>;\r\n    } else {\r\n        pageContent = (\r\n            <>\r\n                <h2 className={classes.PasswordReset__Header}>\r\n                    Enter your new password\r\n                </h2>\r\n                \r\n                <form onSubmit={passwordResetFormSubmitted} className={classes.PasswordReset__Form}>\r\n                    {formInputs}\r\n                    <Button disabled={!formValid}>Reset</Button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.PasswordReset}>\r\n            {pageContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordReset;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../store/actions/index';\r\n\r\nimport classes from './Authentication.module.scss';\r\nimport FeedbackDialogue from '../../components/FeedbackDialogue/FeedbackDialogue';\r\nimport Login from '../../components/Auth/Login/Login';\r\nimport Signup from '../../components/Auth/Signup/Signup';\r\nimport SignupSuccess from '../../components/Auth/SignupSuccess/SignupSuccess';\r\nimport RequestPasswordReset from '../../components/Auth/RequestPasswordReset/RequestPasswordReset';\r\nimport PasswordRest from '../../components/Auth/PasswordReset/PasswordReset';\r\n\r\nclass Authentication extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showError: false,\r\n            signupMode: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.redirectPath !== this.props.redirectPath && prevProps.signupSuccess !== this.props.signupSuccess &&\r\n            this.props.redirectPath === '/auth/signup-success') {\r\n            this.setState({\r\n                signupMode: false\r\n            });\r\n\r\n            // SIGNUP SUCCESSFULL\r\n            this.props.history.push(this.props.redirectPath);\r\n        }\r\n\r\n        // Check if there is an error\r\n        if(prevProps.error !== this.props.error && this.props.error !== null) {\r\n            this.setState({\r\n                showError: true\r\n            });\r\n        }\r\n    }\r\n\r\n    onCloseFeedBackDialogueHandler = () => {\r\n        this.setState({\r\n            showError: false\r\n        });\r\n    }\r\n\r\n    onSignupClosedHandler = (event, toggle) => {\r\n        event.stopPropagation();\r\n\r\n        this.setState({\r\n            signupMode: toggle\r\n        });\r\n    }\r\n\r\n    onForgotPasswordClickedHandler = () => {\r\n        this.props.history.push(this.props.match.url + '/password-reset');\r\n    }\r\n\r\n    onLoginFormSubmittedHandler = (formData) => {\r\n        this.props.login(formData);\r\n    }\r\n\r\n    onSignupFormSubmittedHandler = (formData) => {\r\n        this.props.signup(formData);\r\n    }\r\n\r\n    onEmailFormSubmitted = (email) => {\r\n        this.props.requestPasswordReset(email);\r\n    }\r\n\r\n    onPasswordResetFormSubmitHandler = (formData) => {\r\n        this.props.resetPassword(formData);\r\n    }\r\n\r\n    render() {\r\n        let content = null;\r\n\r\n        if (this.props.isAuthenticated) {\r\n            // Login successfull\r\n            content = <Redirect to='/' />;\r\n        } else {\r\n            content = (\r\n                <Switch>\r\n                    <Route path={this.props.match.url + '/signup-success'} exact render={() => <SignupSuccess />} />\r\n\r\n                    <Route path={this.props.match.url + '/password-reset'} exact render={() =>\r\n                        <RequestPasswordReset\r\n                            emailFormSubmit={this.onEmailFormSubmitted}\r\n                            loading={this.props.loading}\r\n                            reqSuccessfull={!this.state.showError && !this.props.error} />} />\r\n    \r\n                    <Route path={this.props.match.url + '/password-reset/:token'} exact render={() =>\r\n                        <PasswordRest\r\n                            {...this.props}\r\n                            resetFormSubmit={this.onPasswordResetFormSubmitHandler}\r\n                            loading={this.props.loading}\r\n                            reqSuccessfull={!this.state.showError && !this.props.error}\r\n                            path={this.props.redirectPath} />} />\r\n                    \r\n                    <Route path={this.props.match.url} exact render={() => {\r\n                        return <div className={classes.Authentication} style={this.state.signupMode ? { height: \"60rem\" } : {}}>\r\n                            <Login\r\n                                isSignupMode={this.state.signupMode}\r\n                                forgotPasswordClicked={this.onForgotPasswordClickedHandler}\r\n                                loginFormSubmit={this.onLoginFormSubmittedHandler}\r\n                            />\r\n    \r\n                            <Signup\r\n                                isSignupMode={this.state.signupMode}\r\n                                openSignupPanel={this.onSignupClosedHandler}\r\n                                closeSignupPanel={this.onSignupClosedHandler}\r\n                                signupFormSubmit={this.onSignupFormSubmittedHandler}\r\n                            />\r\n                        </div>;\r\n                    }} />\r\n                </Switch>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <FeedbackDialogue\r\n                    show={this.state.showError}\r\n                    feedbackMessage={this.props.error}\r\n                    closed={this.onCloseFeedBackDialogueHandler}\r\n                    isError={true}\r\n                />\r\n\r\n                {content}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.isLoading,\r\n        error: state.error,\r\n        token: state.token,\r\n        isAuthenticated: state.isAuth,\r\n        redirectPath: state.redirectPath,\r\n        signupSuccess: state.successfullSignup\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: (formData) => dispatch(actions.login(formData)),\r\n        signup: (formData) => dispatch(actions.signup(formData)),\r\n        requestPasswordReset: (email) => dispatch(actions.passwordResetRequest(email)),\r\n        resetPassword: (formData) => dispatch(actions.resetPassword(formData))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);","import React from 'react';\r\n\r\nimport classes from './Loader.module.scss';\r\n\r\nconst Loader = (props) => {\r\n    return (\r\n        <div className={classes.Spinner}>\r\n            <svg className={classes.Circular} viewBox=\"25 25 50 50\">\r\n                <circle className={classes.Stroke} cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth={props.strokeWidth} />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import axios from 'axios';\r\n\r\n// https://glacial-garden-54072.herokuapp.com/api/course\r\n// http://localhost:8000/api/course\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://glacial-garden-54072.herokuapp.com/api/course'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport classes from './CourseListElement.module.scss';\r\nimport svg from '../../../assets/images/sprite.svg';\r\n\r\nconst CourseListElement = (props) => {\r\n    let colors_light = ['rgba(255, 87, 129, 0.15)', 'rgba(255, 185, 0, 0.15)', 'rgba(41, 152, 255, 0.15)'];\r\n    let colors_dark = ['rgba(186, 38, 93, 0.3)', 'rgba(206, 98, 40, 0.3)', 'rgba(86, 67, 250, 0.3)'];\r\n\r\n    let image = require('../../../assets/images/spine.jpg');\r\n    let style = {\r\n        backgroundImage: `linear-gradient(to bottom, ${colors_light[props.index % 3]}, ${colors_dark[props.index % 3]}), url(${image})`\r\n    }\r\n\r\n    let courseData = props.data;\r\n\r\n    return (\r\n        <div className={classes.CourseListElement}>\r\n            <div className={[classes.CourseListElement__Side, classes.CourseListElement__Side__Front].join(' ')}>\r\n                <div className={classes.CourseListElement__Picture} style={style}>\r\n                    &nbsp;\r\n                </div>\r\n                <div className={classes.CourseListElement__Content}>\r\n                    <h4 className={[classes.CourseListElement__Heading, classes[`CourseListElement__Heading__${props.index % 3 + 1}`]].join(' ')}>\r\n                        {courseData.name}\r\n                    </h4>\r\n                    <div className={classes.CourseListElement__Description}>\r\n                        <h2>Faculty</h2>\r\n                        <ul className={classes.CourseListElement__Description__FacultyList}>\r\n                            {courseData.landing.faculty.map(faculty => {\r\n                                return <li key={faculty._id} className={[classes.CourseListElement__Description__FacultyList__Item, classes[`CourseListElement__Description__FacultyList__Item__${props.index % 3 + 1}`]].join(' ')}>\r\n                                    {`Prof. Dr. ${faculty.firstName + ' ' + faculty.lastName}`}\r\n                                </li>;\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={[classes.CourseListElement__Side, classes.CourseListElement__Side__Back, classes[`CourseListElement__Side__Back__${props.index % 3 + 1}`]].join(' ')}>\r\n                <div className={classes.CourseListElement__Cta}>\r\n                    <button className={classes.CourseListElement__Cta__Link} onClick={props.selectCourseListElement}>\r\n                        <svg className={classes.CourseListElement__Cta__Link__Icon}>\r\n                            <use xlinkHref={`${svg}#icon-info`}></use>\r\n                        </svg>\r\n                        <span className={classes.CourseListElement__Cta__Link__Text} onClick={props.clicked}>\r\n                            More Info\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseListElement;","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './CourseList.module.scss';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport axiosCourse from '../../axiosUtility/axios-course';\r\nimport CourseListElement from './CourseListElement/CourseListElement';\r\n\r\nconst CourseList = (props) => {\r\n    const [courseList, setCourseList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axiosCourse.get('').then(response => {\r\n            setCourseList(response.data.courseList.filter(course => course.isPublished));\r\n            setIsLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    const onCourseClickedHandler = (id) => {\r\n        props.history.push(props.match.url + '/' + id)\r\n    }\r\n\r\n    let pageContent = (\r\n        <span className={classes.CourseList__Loader}>\r\n            <Loader strokeWidth={4} />\r\n        </span>\r\n    );\r\n\r\n    if (!isLoading) {\r\n        pageContent = (\r\n            <>\r\n                <header className={classes.CourseList__Header}>\r\n                    <h1>OUR COURSES</h1>\r\n                </header>\r\n            \r\n                <div className={classes.CourseList__Content}>\r\n                    { courseList.map((course, i) => {\r\n                        return <CourseListElement\r\n                            key={course._id}\r\n                            data={course}\r\n                            index={i}\r\n                            selectCourseListElement={() => onCourseClickedHandler(course._id)}\r\n                        />;\r\n                    }) }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <section className={classes.CourseList}>\r\n            {pageContent}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CourseList;","import axios from 'axios';\r\n\r\n// https://glacial-garden-54072.herokuapp.com/api/forum\r\n// 'http://localhost:8000/api/forum'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://glacial-garden-54072.herokuapp.com/api/forum'\r\n});\r\n\r\nexport default instance;","import axios from 'axios';\r\n\r\n// https://glacial-garden-54072.herokuapp.com/api/post\r\n// http://localhost:8000/api/post\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://glacial-garden-54072.herokuapp.com/api/post'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport svg from '../../../assets/images/sprite.svg';\r\nimport classes from './CourseNavigationItem.module.scss';\r\n\r\nconst CourseNavigationItem = (props) => {\r\n    let classList = [classes.CourseNavigationItem];\r\n\r\n    if (props.active) {\r\n        classList = [classes.CourseNavigationItem, classes.CourseNavigationItem__Active];\r\n    } else {\r\n        classList = [classes.CourseNavigationItem];\r\n    }\r\n\r\n    return (\r\n        <div className={classList.join(' ')} onClick={props.clicked}>\r\n            <svg className={classes.CourseNavigationItem__Icon}>\r\n                <use xlinkHref={`${svg}#icon-${props.iconName}`}></use>\r\n            </svg>\r\n\r\n            <span className={classes.CourseNavigationItem__Text}>\r\n                {props.children}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseNavigationItem;","import React from 'react';\r\n\r\nimport classes from './CourseNavigation.module.scss';\r\nimport CourseNavigationItem from './CourseNavigationItem/CourseNavigationItem';\r\n\r\nconst CourseNavigation = (props) => {\r\n    let navigationItems = props.navItemList;\r\n\r\n    let content = navigationItems.map((item, i) => {\r\n        return (<CourseNavigationItem\r\n                key={i}\r\n                iconName={item.icon}\r\n                active={item.active}\r\n                clicked={() => props.navigationItemClicked(i)}\r\n            >\r\n            {item.name}\r\n        </CourseNavigationItem>);\r\n    });\r\n\r\n    return (\r\n        <div className={classes.CourseNavigation}>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseNavigation;","import React from 'react';\r\n\r\nimport classes from './CourseInfo.module.scss';\r\n\r\nconst CourseInfo = (props) => {\r\n    return (\r\n        <div className={classes.CourseInfo}>\r\n            <div className={classes.CourseInfo__Image}>\r\n                <img src={props.landingData.image} alt=\"Landing Page Img\" />\r\n            </div>\r\n\r\n            <div className={classes.CourseInfo__Body}>\r\n                <div className={classes.CourseInfo__Info}>\r\n                    <h2>\r\n                        Course Info\r\n                    </h2>\r\n                    {props.landingData.info}\r\n                </div>\r\n\r\n                <div className={classes.CourseInfo__Faculty}>\r\n                    <h2>\r\n                        Faculty\r\n                    </h2>\r\n\r\n                    <ul>\r\n                        {(props.landingData.faculty || []).map((faculty, i) => {\r\n                            return <li key={i}>{`Prof. Dr. ${faculty.firstName} ${faculty.lastName}`}</li>;\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseInfo;","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport classes from './CreatePost.module.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\nimport checkValidity from '../../../utility/formValidation';\r\n\r\nconst CreatePost = (props) => {\r\n    const [formControls, setFormControls] = useState({\r\n        title: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Title'\r\n            },\r\n            label: \"Title\",\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        content: {\r\n            elementType: 'textarea',\r\n            elementConfig: {\r\n                type: 'textarea',\r\n                placeholder: 'Post Content'\r\n            },\r\n            label: \"Post Content\",\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        }\r\n    });\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    const prePopulateFormFields = useCallback(() => {\r\n        let prePopulatedFormFields = {};\r\n\r\n        // Prepopulate the title\r\n        const copiedTitle = { ...formControls.title };\r\n\r\n        copiedTitle.value = props.editFormFields['title'];\r\n        let isTitleValid = checkValidity(props.editFormFields['title'], copiedTitle.validation);\r\n        copiedTitle.valid = isTitleValid;\r\n        copiedTitle.touched = true;\r\n\r\n        prePopulatedFormFields['title'] = {...copiedTitle};\r\n\r\n        // Prepopulate the content\r\n        const copiedContent = { ...formControls.content };\r\n\r\n        copiedContent.value = props.editFormFields['content'];\r\n        let isContentValid = checkValidity(props.editFormFields['content'], copiedContent.validation);\r\n        copiedContent.valid = isContentValid;\r\n        copiedContent.touched = true;\r\n\r\n        prePopulatedFormFields['content'] = {...copiedContent};\r\n\r\n        let formIsValid = true;\r\n        Object.keys(prePopulatedFormFields).forEach(formControl => {\r\n            formIsValid = formIsValid && prePopulatedFormFields[formControl].valid;\r\n        });\r\n\r\n        setIsFormValid(formIsValid);\r\n        setFormControls(prePopulatedFormFields);\r\n    }, [props.editFormFields, formControls.title, formControls.content]);\r\n\r\n    useEffect(() => {\r\n        if (props.isEditMode) {\r\n            prePopulateFormFields();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.isEditMode]);\r\n\r\n    const inputChangedHandler = (event, inputName) => {\r\n        event.preventDefault();\r\n\r\n        const copiedFormControls = { ...formControls };\r\n\r\n        const copiedFormControl = { ...copiedFormControls[inputName] };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Check validity & mark it as touched\r\n        let isValid = checkValidity(event.target.value, copiedFormControl.validation);\r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        copiedFormControls[inputName] = copiedFormControl;\r\n\r\n        let formIsValid = true;\r\n        Object.keys(copiedFormControls).forEach(formControl => {\r\n            formIsValid = formIsValid && copiedFormControls[formControl].valid;\r\n        });\r\n\r\n        setIsFormValid(formIsValid);\r\n        setFormControls(copiedFormControls);\r\n    }\r\n\r\n    const createPostHandler = () => {\r\n        let formData = {\r\n            title: formControls.title.value,\r\n            content: formControls.content.value\r\n        };\r\n\r\n        props.createPost(formData);\r\n    }\r\n\r\n    const updatePostHandler = () => {\r\n        let formData = {\r\n            title: formControls.title.value,\r\n            content: formControls.content.value\r\n        };\r\n\r\n        props.editPost(formData);\r\n    }\r\n\r\n    let formFields = Object.keys(formControls).map((formControl, i) => {\r\n        return <Input\r\n            key={i}\r\n            elementType={formControls[formControl].elementType}\r\n            elementConfig={formControls[formControl].elementConfig}\r\n            label={formControls[formControl].label}\r\n            value={formControls[formControl].value}\r\n            touched={formControls[formControl].touched}\r\n            isValid={formControls[formControl].valid}\r\n            changed={(event) => inputChangedHandler(event, formControl)}\r\n        />\r\n    });\r\n\r\n    return (\r\n        <section className={classes.CreatePost}>\r\n            <header className={classes.CreatePost__Header}>\r\n                <h2>\r\n                    {!props.isEditMode ? 'Create a Post' : 'Edit the Post'}\r\n                </h2>\r\n            </header>\r\n\r\n            <div className={classes.CreatePost__Body}>\r\n                <div className={classes.CreatePost__Inputs}>\r\n                    {formFields}\r\n                </div>\r\n\r\n                <div className={classes.CreatePost__Cta}>\r\n                    {!props.isEditMode ? <Button\r\n                        btnType=\"BtnPrimary\"\r\n                        disabled={!isFormValid}\r\n                        clicked={createPostHandler}>Create</Button> :\r\n                        <Button\r\n                        btnType=\"BtnPrimary\"\r\n                        disabled={!isFormValid}\r\n                        clicked={updatePostHandler}>Update</Button>}\r\n                    <Button\r\n                        btnType=\"BtnDanger\"\r\n                        clicked={props.createPostCancel}>Cancel</Button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","import React from 'react';\r\n\r\nimport classes from './Post.module.scss';\r\n\r\nconst Post = (props) => {\r\n    const postData = props.postData;\r\n\r\n    const getPostCreateTimeDifference = (time) => {\r\n        let now = (new Date()).getTime();\r\n        let updateTime = (new Date(time)).getTime();\r\n        let difference = parseInt((now - updateTime) / 3600000 * 60);\r\n        let timeString = '';\r\n        \r\n        if(difference >= 60 && difference < 1440) {\r\n            timeString += parseInt(difference / 60) + 'h';\r\n        } else if(difference >= 1440) {\r\n            timeString += parseInt(difference / 1440) + 'd';\r\n        } else if(difference <= 0) {\r\n            timeString = '<1m';\r\n        } else {\r\n            timeString = difference + 'm';\r\n        }\r\n\r\n        return timeString;\r\n    }\r\n\r\n    return (\r\n        <tr className={classes.Post} onClick={props.postSelected}>\r\n            <td className={classes.Post__Title}>\r\n                {postData.title}\r\n            </td>\r\n\r\n            <td className={classes.Post__Author}>\r\n                {postData.author.status !== 'admin' ? postData.author.firstName + ' ' + postData.author.lastName : postData.author.firstName}\r\n            </td>\r\n\r\n            <td className={classes.Post__Replies}>\r\n                {postData.responses.length}\r\n            </td>\r\n\r\n            <td className={classes.Post__Views}>\r\n                {postData.views}\r\n            </td>\r\n\r\n            <td className={classes.Post__Activity}>\r\n                {getPostCreateTimeDifference(postData.createdAt)}\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\n\r\nimport Post from './Post/Post';\r\nimport classes from './PostList.module.scss';\r\n\r\nconst PostList = (props) => {\r\n    const postList = props.postList;\r\n\r\n    let postContent = postList.map((post) => {\r\n        return <Post\r\n            key={post._id}\r\n            postData={post}\r\n            postSelected={() => props.onPostSelected(post._id)}\r\n        />\r\n    });\r\n\r\n    return (\r\n        <table className={classes.PostList}>\r\n            <thead>\r\n                <tr className={classes.PostList__Header}>\r\n                    <th>Topic</th>\r\n                    <th>Author</th>\r\n                    <th>Replies</th>\r\n                    <th>Views</th>\r\n                    <th>Activity</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {postContent}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React from 'react';\r\n\r\nimport classes from './PostComment.module.scss';\r\n\r\nconst PostComment = (props) => {\r\n    const commentData = props.commentData;\r\n\r\n    const getPostCreateTimeDifference = (time) => {\r\n        let now = (new Date()).getTime();\r\n        let updateTime = (new Date(time)).getTime();\r\n        let difference = parseInt((now - updateTime) / 3600000 * 60);\r\n        let timeString = '';\r\n        \r\n        if(difference >= 60 && difference < 1440) {\r\n            timeString += parseInt(difference / 60) + 'h';\r\n        } else if(difference >= 1440) {\r\n            timeString += parseInt(difference / 1440) + 'd';\r\n        } else if(difference <= 0) {\r\n            timeString = '<1m';\r\n        } else {\r\n            timeString = difference + 'm';\r\n        }\r\n\r\n        return timeString;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.PostComment}>\r\n            <div className={classes.PostComment__Header}>\r\n                <span>{commentData.author.firstName + ' ' + commentData.author.lastName}</span>\r\n                <span>{getPostCreateTimeDifference(commentData.updatedAt)}</span>\r\n            </div>\r\n\r\n            <div className={classes.PostComment__Content}>\r\n                {commentData.index}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComment;","import React from 'react';\r\n\r\nimport classes from './PostCommentList.module.scss';\r\nimport PostComment from './PostComment/PostComment';\r\n\r\nconst PostCommentList = ({ commentList }) => {\r\n    return (\r\n        <div className={classes.PostCommentList}>\r\n            {commentList.sort((c1, c2) => (new Date(c2.updatedAt)).getTime() - (new Date(c1.updatedAt).getTime())).map((comment, i) => {\r\n                return <PostComment\r\n                    key={i}\r\n                    commentData={comment}\r\n                />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCommentList;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from './Modal.module.scss';\r\nimport Backdrop from '../UI/Backdrop/Backdrop';\r\n\r\nconst Modal = (props) => {\r\n    const [modalClasses, setModalClasses] = useState([classes.ModalContainer]); // KEEP IT OR LEAVE IT\r\n\r\n    useEffect(() => {\r\n        setModalClasses([classes.ModalContainer]); // KEEP IT OR LEAVE IT\r\n    }, [props.show]);\r\n\r\n    const closeModalHandler = () => {\r\n        props.closed();\r\n\r\n        setModalClasses([classes.ModalContainer, classes.ModalContainer__Closed]); // KEEP IT OR LEAVE IT\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            props.show ? (\r\n                <div className={modalClasses.join(' ')} style={props.customStyle}>\r\n                    <Backdrop show={props.show} clicked={closeModalHandler} />\r\n                    <div className={classes.Modal}>\r\n                        {props.content ?\r\n                        <div dangerouslySetInnerHTML={{__html: props.content}}></div> :\r\n                        props.children}\r\n                    </div>\r\n                </div>) : null,\r\n            document.getElementById('modal-root')\r\n        )\r\n    );\r\n}  \r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\n\r\nimport classes from './CreatePostComment.module.scss';\r\nimport Modal from '../../../../../../Modal/Modal';\r\nimport Input from '../../../../../../UI/Input/Input';\r\nimport Button from '../../../../../../UI/Button/Button';\r\nimport checkValidity from '../../../../../../../utility/formValidation';\r\n\r\nconst CreatePostComment = (props) => {\r\n    const [postContent, setPostContent] = useState({\r\n        elementType: 'textarea',\r\n        elementConfig: {\r\n            type: 'textarea',\r\n            placeholder: 'Comment'\r\n        },\r\n        label: \"Comment\",\r\n        validation: {\r\n            required: true\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        value: ''\r\n    });\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    const onCreatePostModalClosedHandler = () => {\r\n        props.cancelPostComment(false);\r\n    }\r\n\r\n    const inputChangedHandler = (event) => {\r\n        const copiedPostContent = { ...postContent };\r\n\r\n        copiedPostContent.value = event.target.value;\r\n        copiedPostContent.valid = checkValidity(copiedPostContent.value, postContent.validation);\r\n        copiedPostContent.touched = true;\r\n\r\n        setIsFormValid(copiedPostContent.valid);\r\n        setPostContent(copiedPostContent);\r\n    }\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {\r\n            index: postContent.value\r\n        };\r\n\r\n        if (isFormValid) {\r\n            props.formSubmitted(formData);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal \r\n                show={props.postCommentEnabled}\r\n                customStyle={{width: '60rem', height: '37rem'}}\r\n                closed={onCreatePostModalClosedHandler}>\r\n                <section className={classes.CreatePostComment}>\r\n                    <span className={classes.CreatePostComment__Close} onClick={onCreatePostModalClosedHandler}>\r\n                        &nbsp;\r\n                    </span>\r\n\r\n                    <header className={classes.CreatePostComment__Header}>\r\n                        <h2>Post a comment</h2>\r\n                    </header>\r\n\r\n                    <form className={classes.CreatePostComment__Form} onSubmit={formSubmitHandler}>\r\n                        <Input \r\n                            elementType={postContent.elementType}\r\n                            elementConfig={postContent.elementConfig}\r\n                            label={postContent.label}\r\n                            value={postContent.value}\r\n                            touched={postContent.touched}\r\n                            isValid={postContent.valid}\r\n                            changed={(event) => inputChangedHandler(event)}\r\n                        />\r\n\r\n                        <div className={classes.CreatePostComment__Form__Cta}>\r\n                            <Button\r\n                                disabled={!isFormValid}\r\n                            >Post</Button>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePostComment;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './PostDetail.module.scss';\r\nimport Button from '../../../UI/Button/Button';\r\nimport PostCommentList from './PostCommentList/PostCommentList';\r\nimport CreatePostComment from '../PostDetail/PostCommentList/PostComment/CreatePostComment/CreatePostComment';\r\n\r\nconst PostDetail = (props) => {\r\n    const [isPostComment, setIsPostComment] = useState(false);\r\n    const [postData, setPostData] = useState({});\r\n\r\n    useEffect(() => {\r\n        setPostData(props.postData);\r\n    }, [props.postData]);\r\n\r\n    let timeout;\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n    }, [timeout]);\r\n\r\n    const getPostCreateTimeDifference = (time) => {\r\n        let now = (new Date()).getTime();\r\n        let updateTime = (new Date(time)).getTime();\r\n        let difference = parseInt((now - updateTime) / 3600000 * 60);\r\n        let timeString = '';\r\n        \r\n        if(difference >= 60 && difference < 1440) {\r\n            timeString += parseInt(difference / 60) + 'h';\r\n        } else if(difference >= 1440) {\r\n            timeString += parseInt(difference / 1440) + 'd';\r\n        } else if(difference <= 0) {\r\n            timeString = '<1m';\r\n        } else {\r\n            timeString = difference + 'm';\r\n        }\r\n\r\n        return timeString;\r\n    }\r\n\r\n    const formatPostCreatedDate = (time) => {\r\n        let date = new Date(time);\r\n        \r\n        return `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()} | ${date.getHours()}:${date.getMinutes()}`;\r\n    }\r\n\r\n    const togglePostComment = (bool) => {\r\n        timeout = setTimeout(() => {\r\n            setIsPostComment(bool);\r\n        }, 200);\r\n    }\r\n\r\n    const formSubmittedHandler = (data) => {\r\n        const formData = {\r\n            postId: props.postData._id,\r\n            ...data\r\n        };\r\n\r\n        props.postCommentSubmit(formData);\r\n        togglePostComment(false);\r\n    }\r\n\r\n    let pageContent = null;\r\n    if (Object.prototype.hasOwnProperty.call(postData, '_id')) {\r\n        pageContent = (\r\n            <section className={classes.PostDetailContainer}>\r\n                {isPostComment ? <CreatePostComment\r\n                    postCommentEnabled={isPostComment}\r\n                    cancelPostComment={togglePostComment}\r\n                    formSubmitted={formSubmittedHandler}\r\n                /> : null}\r\n\r\n                <div className={classes.PostDetail}>\r\n                    <div className={classes.PostDetail__Header}>\r\n                        <div className={classes.PostDetail__Header__Title}>\r\n                            <h2>\r\n                                {props.postData.title}\r\n                            </h2>\r\n                            <span>\r\n                                {props.postData.author.status !== 'admin' ? props.postData.author.firstName + ' ' + props.postData.author.lastName : props.postData.author.firstName}\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className={classes.PostDetail__Header__TimeContainer}>\r\n                            <span className={classes.PostDetail__Header__TimeContainer__Time}>\r\n                                {getPostCreateTimeDifference(props.postData.createdAt)}\r\n                            </span>\r\n\r\n                            <span className={classes.PostDetail__Header__TimeContainer__Tooltip}>\r\n                                {formatPostCreatedDate(props.postData.createdAt)}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.PostDetail__Body}>\r\n                        {props.postData.content}\r\n                    </div>\r\n\r\n                    {props.isAuth ? \r\n                        <div className={classes.PostDetail__Cta}>\r\n                            { props.userId === props.postData.author._id ? <>\r\n                                <Button\r\n                                    btnType='BtnDanger'\r\n                                    btnSize='BtnSmall'\r\n                                    clicked={() => props.postDeleted(props.postData._id)}>Delete</Button>\r\n                                <Button\r\n                                    btnType='BtnSecondary'\r\n                                    btnSize='BtnSmall'\r\n                                    clicked={() => props.postEdited(props.postData._id)}>Edit</Button>\r\n                            </> : null }\r\n                            \r\n                            <Button\r\n                                btnType='BtnPrimary'\r\n                                btnSize='BtnSmall'\r\n                                clicked={() => togglePostComment(true)}>Reply</Button>\r\n                        </div>\r\n                    : null}\r\n                </div>\r\n\r\n                <div className={classes.PostComments}>\r\n                    <h1>Comments</h1>\r\n\r\n                    {props.postData.responses.length > 0 ?\r\n                        <PostCommentList commentList={props.postData.responses} /> :\r\n                        <span className={classes.PostComments__NoCom}>No comments posted yet!</span>}\r\n                </div>\r\n\r\n                <div className={classes.PostDetailContainer__Cta}>\r\n                    <Button\r\n                        btnType='BtnDanger'\r\n                        btnSize='BtnSmall'\r\n                        clicked={props.onBackButtonPressed}>Back</Button>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {pageContent}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.isAuth,\r\n        userId: state.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(PostDetail);","import React from 'react';\r\n\r\nimport classes from './PaginationRange.module.scss';\r\n\r\nconst PaginationRange = (props) => {\r\n\r\n    return (\r\n        <div className={classes.PaginationRange}>\r\n            {props.itemPerPage * props.currentPage + 1} - {(props.itemPerPage * (props.currentPage + 1)) > props.maxItem ? props.maxItem : props.itemPerPage * (props.currentPage + 1)} of {props.maxItem}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaginationRange;","import React from 'react';\r\n\r\nimport svg from '../../../assets/images/sprite.svg';\r\nimport classes from './PrevButton.module.scss';\r\n\r\nconst PrevButton = (props) => {\r\n    return (\r\n        <button className={classes.PrevButton} disabled={props.disabled} onClick={props.clicked}>\r\n            <svg className={classes.ArrowIcon}>\r\n                <use xlinkHref={`${svg}#icon-cheveron-left`}></use>\r\n            </svg>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default PrevButton;","import React from 'react';\r\n\r\nimport svg from '../../../assets/images/sprite.svg';\r\nimport classes from './NextButton.module.scss';\r\n\r\nconst PrevButton = (props) => {\r\n    return (\r\n        <button className={classes.NextButton} disabled={props.disabled} onClick={props.clicked}>\r\n            <svg className={classes.ArrowIcon}>\r\n                <use xlinkHref={`${svg}#icon-cheveron-right`}></use>\r\n            </svg>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default PrevButton;","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './Paginator.module.scss';\r\nimport SelectInput from '../UI/SelectInput/SelectInput';\r\nimport PaginationRange from './PaginationRange/PaginationRange';\r\nimport PrevButton from './PrevButton/PrevButton';\r\nimport NextButton from './NextButton/NextButton';\r\n\r\nconst Paginator = (props) => {\r\n    const [itemPerPage, setItemPerPage] = useState(props.itemPerPage[0]);\r\n    const [currentPage, setCurrentPage] = useState(props.currentPage);\r\n    const [pageCount, setPageCount] = useState(Math.floor((props.maxItemCount / props.itemPerPage[0])) + ((props.maxItemCount % props.itemPerPage[0] === 0) ? 0 : 1));\r\n    \r\n    useEffect(() => {\r\n        setCurrentPage(props.currentPage);\r\n    }, [props.currentPage]);\r\n    \r\n    useEffect(() => {\r\n        setPageCount(Math.floor((props.maxItemCount / props.itemPerPage[0])) + ((props.maxItemCount % props.itemPerPage[0] === 0) ? 0 : 1));\r\n    }, [props.maxItemCount, props.itemPerPage]);\r\n\r\n    const onValueSelectedHandler = (value) => {\r\n        setItemPerPage(value);\r\n        setCurrentPage(0);\r\n\r\n        // value => item per page\r\n        let pageNumber = Math.floor((props.maxItemCount / value) + ((props.maxItemCount % value === 0) ? 0 : 1));\r\n        setPageCount(pageNumber);\r\n\r\n        props.pagination({ perPage: value, currentPage: 0, pageCount: pageNumber });\r\n    }\r\n\r\n    const onPrevPageHandler = () => {\r\n        setCurrentPage(currentPage => currentPage - 1 < 0 ? 0 : currentPage - 1);\r\n\r\n        props.pagination({ perPage: itemPerPage, currentPage: currentPage - 1 < 0 ? 0 : currentPage - 1, pageCount: pageCount });\r\n    }\r\n\r\n    const onNextPageHandler = () => {\r\n        setCurrentPage(currentPage => currentPage + 1 > pageCount - 1 ? pageCount - 1 : currentPage + 1);\r\n\r\n        props.pagination({ perPage: itemPerPage, currentPage: currentPage + 1 > pageCount - 1 ? pageCount - 1 : currentPage + 1, pageCount: pageCount });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Paginator}>\r\n            <SelectInput label={'Items per page: '} itemPerPageList={props.itemPerPage} valueSelected={onValueSelectedHandler} />\r\n            \r\n            <PaginationRange \r\n                itemPerPage={itemPerPage}\r\n                currentPage={currentPage}\r\n                pageCount={pageCount}\r\n                maxItem={props.maxItemCount} />\r\n\r\n            <div className={classes.PaginatorButtons}>\r\n                <PrevButton clicked={onPrevPageHandler} disabled={!props.hasPrevPage} />\r\n                \r\n                <NextButton clicked={onNextPageHandler} disabled={!props.hasNextPage} />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './CourseForum.module.scss';\r\nimport CreatePost from './CreatePost/CreatePost';\r\nimport PostList from './PostList/PostList';\r\nimport PostDetail from './PostList/PostDetail/PostDetail';\r\nimport Button from '../UI/Button/Button';\r\nimport Paginator from '../Paginator/Paginator';\r\n\r\nconst CourseForum = (props) => {\r\n    // const [courseForumData, setCourseForumData] = useState({});\r\n    const [paginationState, setPaginationState] = useState({\r\n        perPage: 3,\r\n        pageCount: 2,\r\n        currentPage: 0,\r\n        hasNextPage: true,\r\n        hasPrevPage: false,\r\n        startIndex: 0,\r\n        endIndex: 0\r\n    });\r\n    const [showPostDetail, setShowPostDetail] = useState(false);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n    const [isPostEditMode, setIsPostEditMode] = useState(false);\r\n    const [postToEdit, setPostToEdit] = useState(null);\r\n\r\n    // const forumData = require('../../assets/course_forum_poc.json');\r\n    // const forumPostList = (forumData || {}).postList || [];\r\n    const forumPostList = props.forumData.posts || [];\r\n\r\n    // console.log(props.forumData)\r\n\r\n    useEffect(() => {\r\n        if (selectedPost !== null)\r\n            setSelectedPost(props.forumData.posts.find(post => post._id === selectedPost._id))\r\n    }, [props.forumData.posts, selectedPost]);\r\n\r\n    useEffect(() => {\r\n        // Initial state\r\n        setPaginationState({\r\n            perPage: 3,\r\n            pageCount: Math.floor((forumPostList.length / 3)) + ((forumPostList.length % 3 === 0) ? 0 : 1),\r\n            currentPage: 0,\r\n            hasNextPage: 3 * 1 < forumPostList.length,\r\n            hasPrevPage: false,\r\n            startIndex: 0,\r\n            endIndex: 3\r\n        });\r\n    }, [forumPostList.length]);\r\n    \r\n    const onPaginationChangeHandler = (paginationData) => {\r\n        // console.log(paginationData); // TODO REMOVE\r\n        \r\n        let currentPage = paginationData.currentPage;\r\n        let hasNextPage = paginationData.perPage * (paginationData.currentPage + 1) < forumPostList.length;\r\n        let hasPrevPage = paginationData.currentPage > 0;\r\n        let startIndex = paginationData.currentPage * paginationData.perPage;\r\n        let endIndex = startIndex + paginationData.perPage >= forumPostList.length ? forumPostList.length : startIndex + paginationData.perPage;\r\n\r\n        setPaginationState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                currentPage,\r\n                hasPrevPage,\r\n                hasNextPage,\r\n                startIndex,\r\n                endIndex\r\n            }\r\n        })\r\n    }\r\n\r\n    const onPostSelectedHandler = (postId) => {\r\n        let selectedPost = forumPostList.find(post => post._id === postId);\r\n\r\n        setSelectedPost(selectedPost);\r\n        setShowPostDetail(true);\r\n    }\r\n\r\n    const onBackButtonPressedHandler = () => {\r\n        setSelectedPost(null);\r\n        setShowPostDetail(false);\r\n    }\r\n\r\n    const onCreatePostPressedHandler = () => {\r\n        setPostToEdit(null);\r\n        setIsPostEditMode(false);\r\n        props.toggleCreatePostMode(true);\r\n    }\r\n\r\n    const onCreatePostCancelledHandler = () => {\r\n        props.toggleCreatePostMode(false);\r\n    }\r\n\r\n    const onCreatePostHandler = (data) => {\r\n        props.forumPostCreated(data);\r\n    }\r\n\r\n    const onEditPostHandler = (data) => {\r\n        props.forumPostEdited({ ...data, postId: postToEdit._id });\r\n    }\r\n\r\n    const onPostDeleted = (postId) => {\r\n        props.onPostDeleted(postId);\r\n\r\n        setSelectedPost(null);\r\n        setShowPostDetail(false);\r\n    }\r\n\r\n    const onPostEdit = (postId) => {\r\n        let editPost = forumPostList.find(post => post._id === postId);\r\n\r\n        // TODO: I may have to change this\r\n        if (typeof editPost !== 'undefined') {\r\n            setSelectedPost(null);\r\n            setShowPostDetail(false);\r\n            setPostToEdit(editPost);\r\n            setIsPostEditMode(true);\r\n            props.toggleCreatePostMode(true);\r\n        }\r\n    }\r\n\r\n    let pageContent = !showPostDetail ? (<>\r\n        {!props.createPostMode ? <>\r\n            <PostList\r\n                postList={forumPostList.slice(paginationState.startIndex, paginationState.endIndex)}\r\n                onPostSelected={onPostSelectedHandler}\r\n            />\r\n\r\n            <div className={classes.CourseForum__Cta}>\r\n                <Button clicked={onCreatePostPressedHandler}>Create a Post</Button>\r\n\r\n                <Paginator \r\n                    itemPerPage={[3, 5, 10]}\r\n                    maxItemCount={forumPostList.length}\r\n                    pagination={onPaginationChangeHandler}\r\n                    currentPage={paginationState.currentPage}\r\n                    hasNextPage={paginationState.hasNextPage}\r\n                    hasPrevPage={paginationState.hasPrevPage}\r\n                />\r\n            </div>\r\n        </> : <CreatePost \r\n            createPost={onCreatePostHandler}\r\n            createPostCancel={onCreatePostCancelledHandler}\r\n            isEditMode={isPostEditMode}\r\n            editFormFields={postToEdit}\r\n            editPost={onEditPostHandler}\r\n        />}\r\n        </>) : \r\n        <PostDetail\r\n            postData={selectedPost}\r\n            onBackButtonPressed={onBackButtonPressedHandler}\r\n            postDeleted={onPostDeleted}\r\n            postEdited={onPostEdit}\r\n            postCommentSubmit={props.postCommentSubmitted}\r\n        />;\r\n\r\n    return (\r\n        <section className={classes.CourseForum}>\r\n            {pageContent}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CourseForum;","import React, { Fragment } from 'react';\r\n\r\nimport classes from './CourseMenu.module.scss';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst CourseMenu = (props) => {\r\n\r\n    const onActivityEnabled = (type) => {\r\n        props.onCourseActivityEnabled(type);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.CourseMenu__Intro} dangerouslySetInnerHTML={{__html: props.courseIntro}}></div>\r\n\r\n            <div className={classes.CourseMenu__Misc}>\r\n                {typeof props.courseQuiz !== 'undefined' ?\r\n                    <Button clicked={() => onActivityEnabled('quiz')}>Quiz</Button> : null}\r\n                <Button clicked={() => onActivityEnabled('questionnaire')}>Questionnaire</Button>\r\n            </div>\r\n\r\n            <div className={classes.CourseMenu__Cta}>\r\n                <Button clicked={() => props.onSectionSelect(0)}>1. Hafta</Button>\r\n                <Button disabled={true}>2. Hafta</Button>\r\n                <Button disabled={true}>3. Hafta</Button>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseMenu;","import React from 'react';\r\n\r\nimport classes from './CourseSectionSidebarItem.module.scss';\r\nimport svg from '../../../../assets/images/sprite.svg';\r\n\r\nconst CourseSectionSidebarItem = props => {\r\n    let data = props.data;\r\n    let listContent = data.contentTitleArr.map((subsubsection, index) => {\r\n        return <li key={subsubsection}>\r\n            <span onClick={() => {props.onSubSubSectionClicked(index)}}>{subsubsection}</span>\r\n\r\n            {props.currentActive === index && props.isSectionActive ?\r\n                <svg className={classes.CourseSectionSidebarItem__List__Icon}>\r\n                    <use xlinkHref={`${svg}#icon-arrow-thick-left`}></use>\r\n                </svg> : null}\r\n        </li>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.CourseSectionSidebarItem}>\r\n            <div className={classes.CourseSectionSidebarItem__Main} style={props.isSectionActive ? {'fontWeight': '700'} : {}}>\r\n                {data.name}\r\n            </div>\r\n\r\n            <ul className={classes.CourseSectionSidebarItem__List}>\r\n                {listContent}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseSectionSidebarItem;","import React from 'react';\r\n\r\nimport classes from './CourseSubSectionSidebar.module.scss';\r\nimport CourseSectionSidebarItem from './CourseSectionSidebarItem/CourseSectionSidebarItem';\r\n\r\nconst CourseSubSectionSidebar = props => {\r\n    let contentData = props.subSectionNavigationData;\r\n\r\n    console.log(contentData)\r\n\r\n    const onSubSubSectionClickedHandler = (subsubSectionIndex, activeSubSectionIndex) => {\r\n        props.newSubSectionSelected([activeSubSectionIndex, subsubSectionIndex]);\r\n    }\r\n\r\n    let content = contentData.subSectionMap.map((section, index) => {\r\n        return <CourseSectionSidebarItem\r\n            key={section.id}\r\n            data={section}\r\n            isSectionActive={contentData.subSectionIndex === index}\r\n            currentActive={contentData.subSectionPageIndex}\r\n            onSubSubSectionClicked={(subsubSectionIndex) => onSubSubSectionClickedHandler(subsubSectionIndex, index)}\r\n        />;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.CourseSubSectionSidebar}>\r\n            {content}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseSubSectionSidebar;","import React from 'react';\r\n\r\nimport svg from '../../../assets/images/sprite.svg';\r\nimport classes from './CourseSubSection.module.scss';\r\nimport Button from '../../UI/Button/Button';\r\nimport CourseSubSectionSidebar from '../CourseSubSectionSidebar/CourseSubSectionSidebar';\r\n\r\nconst CourseSubSection = (props) => {\r\n    let subSectionData = props.subSectionData;\r\n    // console.log(subSectionData)\r\n    // console.log(((subSectionData || {}).content || [])[props.subSectionPageIndex] || 'END');\r\n\r\n    return (\r\n        <section className={classes.CourseSubSection}>\r\n            <CourseSubSectionSidebar\r\n                subSectionNavigationData={props.subSectionSideBarData}\r\n                newSubSectionSelected={props.onNewSubSectionSelected}\r\n            />\r\n\r\n            <div className={classes.CourseSubSection__Content}>\r\n                <header className={classes.CourseSubSection__Content__Header}>\r\n                    <h1>{subSectionData.name}</h1>\r\n                </header>\r\n\r\n                <div dangerouslySetInnerHTML={{__html: ((subSectionData || {}).content || [])[props.subSectionPageIndex].index}}></div>\r\n\r\n                <div className={classes.CourseSubSection__Content__Cta}>\r\n                    <Button clicked={props.onBackClicked}>\r\n                        <svg className={classes.CourseSubSection__ButtonIcon}>\r\n                            <use xlinkHref={`${svg}#icon-arrow-thick-left`}></use>\r\n                        </svg>\r\n                    </Button>\r\n                    \r\n                    {props.showNext ? <Button clicked={props.onNextClicked}>\r\n                        <svg className={classes.CourseSubSection__ButtonIcon}>\r\n                            <use xlinkHref={`${svg}#icon-arrow-thick-right`}></use>\r\n                        </svg>\r\n                    </Button> : null}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CourseSubSection;","import React, { useState } from 'react';\r\n\r\nimport svg from '../../assets/images/sprite.svg';\r\nimport classes from './CourseSection.module.scss';\r\nimport CourseSubSection from './CourseSubSection/CourseSubSection';\r\n\r\nconst CourseSection = (props) => {\r\n    const [isAtIntro, setIsAtIntro] = useState(true);\r\n    const [subSectionIndex, setSubSectionIndex] = useState(0);\r\n    const [subSectionPageIndex, setSubSectionPageIndex] = useState(0); // Signifies where we are in the subsection\r\n\r\n    let sectionData = props.sectionData;\r\n\r\n    // console.log(sectionData.subsections.map(subsection=> {\r\n    //     return {\r\n    //         id: subsection._id,\r\n    //         name: subsection.name,\r\n    //         contentTitleArr: subsection.content.map(content => content.title)\r\n    //     };\r\n    // }));\r\n\r\n    let totalSectionCount = (sectionData.subsections || []).length;\r\n    let currentSectionLength = (((sectionData.subsections || [])[subSectionIndex] || {}).content || []).length;\r\n\r\n    const resetToSectionMenu = () => {\r\n        setIsAtIntro(true);\r\n        setSubSectionIndex(0);\r\n        setSubSectionPageIndex(0);\r\n    }\r\n\r\n    const goToNextSubSection = () => {\r\n        if (subSectionIndex + 1 >= totalSectionCount) {\r\n            return;\r\n        } else {\r\n            setSubSectionIndex(subSectionIndex + 1);\r\n            setSubSectionPageIndex(0);\r\n        }\r\n    }\r\n\r\n    const goToPrevSubSection = () => {\r\n        if (subSectionIndex - 1 < 0) {\r\n            resetToSectionMenu();\r\n        } else {\r\n            let prevSubSectionLength = (((sectionData.subsections || [])[subSectionIndex - 1] || {}).content || []).length;\r\n\r\n            setSubSectionIndex(subSectionIndex - 1);\r\n            setSubSectionPageIndex(prevSubSectionLength - 1);\r\n        }\r\n    }\r\n\r\n    const onSubSectionSelectedHandler = (key) => {\r\n        setIsAtIntro(false);\r\n        setSubSectionIndex(key);\r\n        setSubSectionPageIndex(0);\r\n    }\r\n\r\n    // Method to handle when back button in the sub-section is clicked\r\n    const onBackClickedHandler = () => {\r\n        if(subSectionPageIndex <= 0) {\r\n            goToPrevSubSection();\r\n        } else {\r\n            setSubSectionPageIndex(subSectionPageIndex - 1);\r\n        }\r\n    }\r\n\r\n    // Method to handle when next button in the sub-section is clicked\r\n    const onNextClickedHandler = () => {\r\n        if(subSectionPageIndex + 1 >= currentSectionLength) {\r\n            // GO TO NEXT SUB SECTION\r\n            goToNextSubSection();\r\n        } else {\r\n            // GO TO NEXT PAGE IN THE SAME SUB SECTION\r\n            setSubSectionPageIndex(subSectionPageIndex + 1);\r\n        }\r\n    }\r\n\r\n    const onNewSubSectionSelectedHandler = (newIndices) => {\r\n        setSubSectionIndex(newIndices[0]);\r\n        setSubSectionPageIndex(newIndices[1]);\r\n    }\r\n\r\n    let subSectionNavigationData = {\r\n        subSectionPageIndex: subSectionPageIndex,\r\n        subSectionIndex: subSectionIndex,\r\n        subSectionMap: sectionData.subsections.map(subsection=> {\r\n            return {\r\n                id: subsection._id,\r\n                name: subsection.name,\r\n                contentTitleArr: subsection.content.map(content => content.title)\r\n            };\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Section}>\r\n            <button className={classes.BackMenu__Button} onClick={props.onBackToMainMenu}>\r\n                <svg className={classes.BackMenu__Icon}>\r\n                    <use xlinkHref={`${svg}#icon-list`}></use>\r\n                </svg>\r\n            </button>\r\n            \r\n            <div className={classes.Section__Container}>\r\n                <header className={classes.Section__Title}>\r\n                    <h1>{sectionData.name}</h1>\r\n                </header>\r\n\r\n                {isAtIntro ? <section className={classes.Section__Content}>\r\n                    <h3>Konu Dağılımı</h3>\r\n                    \r\n                    <ul className={classes.Section__List}>\r\n                        {sectionData.subsections.map((section, i) => {\r\n                            return <li key={i} className={classes.Section__ListItem}>\r\n                                <span>\r\n                                    {section.name}\r\n                                </span>\r\n                                \r\n                                <button className={classes.Section__ListButton} onClick={() => onSubSectionSelectedHandler(i)}>\r\n                                    <svg className={classes.Section__ListIcon}>\r\n                                        <use xlinkHref={`${svg}#icon-play`}></use>\r\n                                    </svg>\r\n                                </button>\r\n                            </li>;\r\n                        })}\r\n                    </ul>\r\n                </section> : <CourseSubSection\r\n                    onNewSubSectionSelected={onNewSubSectionSelectedHandler}\r\n                    subSectionSideBarData={subSectionNavigationData}\r\n                    subSectionData={sectionData.subsections[subSectionIndex] || {}}\r\n                    subSectionPageIndex={subSectionPageIndex}\r\n                    onBackClicked={onBackClickedHandler}\r\n                    onNextClicked={onNextClickedHandler}\r\n                    showNext={!(subSectionIndex + 1 >= totalSectionCount && subSectionPageIndex + 1 >= currentSectionLength)}\r\n                />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseSection;","import React from 'react';\r\n\r\nimport classes from './QuizIntro.module.scss';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst QuizIntro = (props) => {\r\n    return (\r\n        <section className={classes.QuizIntro}>\r\n            <header className={classes.QuizIntro__Header}>\r\n                <h1>\r\n                    {props.quizTitle}\r\n                </h1>\r\n\r\n                <div>\r\n                    Henüz bu quizi tamamlamadınız.\r\n                </div>\r\n            </header>\r\n            \r\n            <div className={classes.QuizIntro__Cta}>\r\n                <Button clicked={props.onQuizStarted}>\r\n                    BAŞLA!\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default QuizIntro;","import React from 'react';\r\n\r\nimport svg from '../../../../assets/images/sprite.svg';\r\nimport classes from './QuestionResult.module.scss';\r\n\r\nconst QuestionResult = (props) => {\r\n    let iconName = props.isCorrect ? 'checkmark-outline' : 'close-outline';\r\n    let classColor = props.isCorrect ? classes.QuestionResult__Icon__Correct : classes.QuestionResult__Icon__Incorrect;\r\n\r\n    return (\r\n        <div className={classes.QuestionResult}>\r\n            <span className={classes.QuestionResult__QuestionNumber}>\r\n                {props.questionNumber}\r\n            </span>\r\n            <svg className={[classes.QuestionResult__Icon, classColor].join(' ')}>\r\n                <use xlinkHref={`${svg}#icon-${iconName}`}></use>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionResult;","import React from 'react';\r\n\r\nimport classes from './QuizEnd.module.scss';\r\nimport QuestionResult from './QuestionResult/QuestionResult';\r\n\r\nconst QuizEnd = (props) => {\r\n    const answers = props.answers || [];\r\n\r\n    let visualResult = answers.map((answer, i) => {\r\n        return (\r\n            <QuestionResult\r\n                key={i}\r\n                isCorrect={answer}\r\n                questionNumber={i + 1}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <section className={classes.QuizEnd}>\r\n            <header className={classes.QuizEnd__Header}>\r\n                <h1>\r\n                    Quiz Sonucu\r\n                </h1>\r\n            </header>\r\n\r\n            <div className={classes.QuizEnd__Content}>\r\n                <div className={classes.QuizEnd__Content__Text}>\r\n                    Quizi tamamladınız.\r\n                </div>\r\n\r\n                <div className={classes.QuizEnd__Content__Visual}>\r\n                    {visualResult}\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default QuizEnd;","import React, { useRef, useEffect } from 'react';\r\n\r\nimport classes from './RadioButton.module.scss';\r\n\r\nconst RadioButton = (props) => {\r\n    let radioRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        radioRef.current.checked = false;\r\n    }, [props.label]);\r\n\r\n    return (\r\n        <div className={classes.RadioGroup}>\r\n            <input type=\"radio\" className={classes.RadioButton__Input} id={props.id} name={props.name} ref={radioRef} />\r\n            <label htmlFor={props.id} className={classes.RadioButton__Label} onClick={props.selected}>\r\n                <span className={classes.RadioButton}></span>\r\n                <span>{props.label}</span>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioButton;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport classes from './SuccessCheck.module.scss';\r\n\r\nconst SuccessCheck = (props) => {\r\n\r\n    const animationData = require(`../../../../assets/anim/${ props.isSuccess ? 'success_check.json' : 'failure_cross.json' }`);\r\n    const defaultOptions = {\r\n        loop: false,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.SuccessCheck}>\r\n            <Lottie \r\n                options={defaultOptions}\r\n                height={window.innerWidth > 800 ? 150 : 100}\r\n                width={window.innerWidth > 800 ? 150 : 100}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessCheck;","import React, { useState, useEffect } from 'react';\r\n\r\nimport svg from '../../../../assets/images/sprite.svg';\r\nimport classes from './Question.module.scss';\r\nimport RadioButton from '../../../UI/RadioButton/RadioButton';\r\nimport Button from '../../../UI/Button/Button';\r\nimport SuccessCheck from '../SuccessCheck/SuccessCheck';\r\nimport Modal from '../../../Modal/Modal';\r\n\r\nconst Question = (props) => {\r\n    const [selectedChoice, setSelectedChoice] = useState(null);\r\n    const [showCaseModal, setShowCaseModal] = useState(false);\r\n\r\n    let timeout;\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n    }, [timeout]);\r\n\r\n    const onChoiceMarkedHandler = (index) => {\r\n        setSelectedChoice(index)\r\n    }\r\n\r\n    const answerSelected = () => {\r\n        props.onAnswerSelected(props.questionNumber, selectedChoice);\r\n        setSelectedChoice(null);\r\n    }\r\n\r\n    const onCaseModalOpenedHandler = () => {\r\n        timeout = setTimeout(() => {\r\n            setShowCaseModal(true);\r\n        }, 200);\r\n    }\r\n\r\n    const onCaseModalClosedHandler = () => {\r\n        timeout = setTimeout(() => {\r\n            setShowCaseModal(false);\r\n        }, 200);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Question}>\r\n            <span className={classes.Question__Number}>\r\n                {`Q${props.questionNumber}`}\r\n            </span>\r\n\r\n            <Modal\r\n                show={showCaseModal}\r\n                customStyle={{width: '100rem', height: '90rem'}}\r\n                closed={onCaseModalClosedHandler}\r\n                content={props.questionCase}\r\n            />\r\n\r\n            <div className={classes.Question__Text}>\r\n                {props.questionText}\r\n\r\n                { props.questionType === 'case study' ?\r\n                    <button onClick={onCaseModalOpenedHandler}>\r\n                        Senaryo\r\n\r\n                        <svg className={classes.Question__Text__CaseIcon}>\r\n                            <use xlinkHref={`${svg}#icon-redo2`}></use>\r\n                        </svg>\r\n                    </button> : null\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.Question__Choices}>\r\n                {props.questionChoices.map((choice, index) => {\r\n                    return <RadioButton \r\n                        key={`choice${index}`}\r\n                        id={`choice${index}`}\r\n                        label={choice.text}\r\n                        name={`question${props.questionNumber}`}\r\n                        selected={() => onChoiceMarkedHandler(index)}\r\n                    />\r\n                })}\r\n            </div>\r\n\r\n            <div className={classes.Question__Cta}>\r\n                {props.answered ? <SuccessCheck isSuccess={props.success} /> : null}\r\n                <Button btnType=\"BtnDanger\" clicked={answerSelected} disabled={selectedChoice === null}>\r\n                    <span className={classes.Question__Select}>\r\n                        <span>\r\n                            Select\r\n                        </span>\r\n                        <svg className={classes.Question__Select__Icon}>\r\n                            <use xlinkHref={`${svg}#icon-checkmark`}></use>\r\n                        </svg>\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;","import React from 'react';\r\n\r\nimport classes from './ProgressBar.module.scss';\r\n\r\nconst ProgressBar = (props) => {\r\n\r\n    let progress = {\r\n        width: `${props.questionNumber * (100 / props.questionAmount)}%`,\r\n        borderTopRightRadius: props.questionNumber === props.questionAmount ? '5px' : '0px',\r\n        borderBottomRightRadius: props.questionNumber === props.questionAmount ? '5px' : '0px'\r\n    };\r\n\r\n    return (\r\n        <div className={classes.ProgressBar}>\r\n            <div className={classes.ProgressBar__Background}></div>\r\n            <div className={classes.ProgressBar__Foreground} style={progress}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport classes from './QuizContent.module.scss';\r\nimport Question from './Question/Question';\r\nimport ProgressBar from '../../ProgressBar/ProgressBar';\r\n\r\nconst QuizContent = (props) => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [success, setSuccess] = useState(false);\r\n    const [isQuestionAnswered, setIsQuestionAnswered] = useState(false);\r\n\r\n    let timeout;\r\n    const questionAmount = props.questionAmount;\r\n    const questionList = props.questions;\r\n    let questionAnswerList = useRef([]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n    }, [timeout]);\r\n\r\n    const onAnswerSelectedHandler = (answeredQuestionNumber, choiceIndex) => {\r\n        let isCorrect = questionList[answeredQuestionNumber - 1].choices[choiceIndex].isCorrect;\r\n\r\n        setSuccess(isCorrect);\r\n        setIsQuestionAnswered(true);\r\n        questionAnswerList.current.push(isCorrect);\r\n\r\n        if(currentQuestion < questionAmount - 1) {\r\n            // Next question\r\n            timeout = setTimeout(() => {\r\n                setCurrentQuestion(currentQuestion => currentQuestion + 1);\r\n                setSuccess(false);\r\n                setIsQuestionAnswered(false);\r\n            }, 2000);\r\n        } else {\r\n            // Quiz is finished\r\n            timeout = setTimeout(() => {\r\n                props.onQuizEnd(questionAnswerList.current);\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ProgressBar questionAmount={questionAmount} questionNumber={currentQuestion+1} />\r\n            <section className={classes.QuizContent}>\r\n                <Question\r\n                    questionNumber={currentQuestion + 1}\r\n                    questionText={questionList[currentQuestion].text}\r\n                    questionChoices={questionList[currentQuestion].choices}\r\n                    questionType={questionList[currentQuestion].type}\r\n                    questionCase={questionList[currentQuestion].case || ''}\r\n                    onAnswerSelected={onAnswerSelectedHandler}\r\n                    success={success}\r\n                    answered={isQuestionAnswered}\r\n                />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizContent;","import React, { useState } from 'react';\r\n\r\nimport classes from './QuizContainer.module.scss';\r\nimport Button from '../UI/Button/Button';\r\nimport QuizIntro from './QuizIntro/QuizIntro';\r\nimport QuizEnd from './QuizEnd/QuizEnd';\r\nimport QuizContent from './QuizContent/QuizContent';\r\n\r\nconst QuizContainer = (props) => {\r\n    const [isAtQuizIntro, setIsAtQuizIntro] = useState(true);\r\n    const [isQuizFinished, setIsQuizFinished] = useState(false);\r\n    const [quizResultData, setQuizResultData] = useState([]);\r\n\r\n    // const content = require('../../assets/quiz_poc.json');\r\n    const quizData = {\r\n        ...props.quizData,\r\n        numberOfQuestions: props.quizData.questions.length\r\n    };\r\n\r\n    const onQuizStartedHandler = () => {\r\n        setIsAtQuizIntro(false);\r\n    }\r\n\r\n    const onQuizFinishedHandler = (quizReport) => {\r\n        setQuizResultData(quizReport);\r\n\r\n        setIsQuizFinished(true);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Quiz}>\r\n            <div className={classes.Quiz__Exit}>\r\n                <Button btnType=\"BtnDanger\" clicked={props.onQuizExited}>\r\n                    <span>\r\n                        &nbsp;\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n\r\n            {isAtQuizIntro ?\r\n                <QuizIntro\r\n                    onQuizStarted={onQuizStartedHandler}\r\n                    quizTitle={(quizData || {}).name || ''}\r\n                /> :\r\n                !isQuizFinished ? <QuizContent\r\n                    questionAmount={(quizData || {}).numberOfQuestions || 0}\r\n                    questions={(quizData || {}).questions || []}\r\n                    onQuizEnd={onQuizFinishedHandler}\r\n                /> : <QuizEnd answers={quizResultData} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuizContainer;","import React from 'react';\r\n\r\nimport classes from './Intro.module.scss';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst Intro = (props) => {\r\n    return (\r\n        <section className={classes.Intro}>\r\n            <header className={classes.Intro__Header}>\r\n                <h1>\r\n                    Temel Pediyatrik Deformite Eğitim Gereksinimleri Anketi\r\n                </h1>\r\n\r\n                <div>\r\n                    Henüz bu anketi tamamlamadınız.\r\n                </div>\r\n            </header>\r\n            \r\n            <div className={classes.Intro__Cta}>\r\n                <Button clicked={props.onQuestionnaireStarted}>\r\n                    BAŞLA!\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Intro;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport classes from './Finish.module.scss';\r\n\r\nconst Finish = () => {\r\n    const animationData = require('../../../assets/anim/success_check.json');\r\n    const defaultOptions = {\r\n        loop: false,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className={classes.Finish}>\r\n            <header>\r\n                <h2>Thank you!</h2>\r\n            </header>\r\n\r\n            <Lottie \r\n                options={defaultOptions}\r\n                height={window.innerWidth > 800 ? 150 : 100}\r\n                width={window.innerWidth > 800 ? 150 : 100}\r\n            />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Finish;","import React from 'react';\r\n\r\nimport classes from './MultipleChoiceQuestion.module.scss';\r\nimport RadioButton from '../../../UI/RadioButton/RadioButton';\r\n\r\nconst MultipleChoiceQuestion = (props) => {\r\n    const { questionData } = props;\r\n\r\n    return (\r\n        <div className={classes.MultipleChoiceQuestion}>\r\n            <div className={classes.MultipleChoiceQuestion__Text}>\r\n                {questionData.text}\r\n            </div>\r\n\r\n            <div className={classes.MultipleChoiceQuestion__Choices}>\r\n                {questionData.choices.map((choice, index) => {\r\n                    return <RadioButton\r\n                        id={'question' + questionData.questionNumber + '' + index}\r\n                        key={'question' + questionData.questionNumber + '' + index}\r\n                        name={'question' + questionData.questionNumber}\r\n                        label={choice}\r\n                        selected={() => props.answerSelected(index)}\r\n                    />;\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultipleChoiceQuestion;","import React from 'react';\r\n\r\nimport classes from './SliderQuestion.module.scss';\r\n\r\nconst SliderQuestion = props => {\r\n    return (\r\n        <div className={classes.SliderQuestion}>\r\n            <div className={classes.SliderQuestion__Text}>\r\n                {props.sliderLabel}\r\n            </div>\r\n\r\n            <div className={classes.SliderQuestion__Slider}>\r\n                <input\r\n                    className={classes.SliderQuestion__Slider__Input}\r\n                    type=\"range\"\r\n                    min={props.sliderRange[0] || 0}\r\n                    max={props.sliderRange[1] || 100}\r\n                    step={props.sliderStep || 5}\r\n                    value={props.value}\r\n                    onMouseUp={props.focusLost}\r\n                    onChange={props.sliderChanged}\r\n                />\r\n                <span className={classes.SliderQuestion__Slider__Input__Value}>{props.value}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SliderQuestion;","import React from 'react';\r\n\r\nimport classes from './SliderCombinationQuestion.module.scss';\r\nimport SliderQuestion from '../SliderQuestion/SliderQuestion';\r\n\r\nconst SliderCombinationQuestion = props => {\r\n    const data = props.questionData;\r\n\r\n    const subSliderChanged = (event, qNumber, i) => {\r\n        // console.log('SLIDER COMBINATION');\r\n        // console.log(`The question number: ${qNumber}, slider number: ${i}, slider value: ${event.target.value}`);\r\n        props.sliderCombinationValueChanged({\r\n            questionNumber: qNumber,\r\n            sliderIndex: i,\r\n            value: event.target.value\r\n        });\r\n    }\r\n\r\n    let content = data.subSliders.map((subSlider, index) => {\r\n        return <SliderQuestion\r\n            key={'question' + data.questionNumber + '' + index}\r\n            sliderLabel={subSlider.text}\r\n            sliderRange={props.sliderConfig.range}\r\n            sliderStep={props.sliderConfig.step}\r\n            value={subSlider.value}\r\n            sliderChanged={(event) => subSliderChanged(event, data.questionNumber, index)}\r\n        />;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.SliderCombinationQuestion}>\r\n            <div className={classes.SliderCombinationQuestion__Text}>\r\n                {data.text}\r\n            </div>\r\n\r\n            <div className={classes.SliderCombinationQuestion__SubSliders}>\r\n                {content}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SliderCombinationQuestion;","const updateQuestionaireState = (data) => {\r\n    let questionConfig = {\r\n        commonConfig: {\r\n            questionNumber: data.questionNumber || 0,\r\n            text: data.text || '',\r\n            type: data.type || '',\r\n            elementType: data.elementType || '',\r\n            validation: data.validation || {}\r\n        },\r\n        specificConfig: {\r\n            value: '',\r\n            choices: [],\r\n            sliderRange: [],\r\n            sliderStep: 10,\r\n            subText: []\r\n        }\r\n    };\r\n\r\n    switch(data.type || '') {\r\n        case 'text':\r\n        case 'number':\r\n            questionConfig.specificConfig['value'] = data.value || '';\r\n            break;\r\n        case 'multiple-choice':\r\n            questionConfig.specificConfig['choices'] = data.choices || [];\r\n            break;\r\n        case 'slider':\r\n            questionConfig.specificConfig['value'] = data.value || 0;\r\n            questionConfig.specificConfig['sliderRange'] = data.sliderRange || [0, 100];\r\n            questionConfig.specificConfig['sliderStep'] = data.sliderStep || 5;\r\n            break;\r\n        case 'slider-combination':\r\n            questionConfig.specificConfig['value'] = data.subSliders || [];\r\n            questionConfig.specificConfig['subSliders'] = data.subSliders || [];\r\n            questionConfig.specificConfig['sliderRange'] = data.sliderRange || [0, 100];\r\n            questionConfig.specificConfig['sliderStep'] = data.sliderStep || 5;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    \r\n    return questionConfig;\r\n}\r\n\r\nexport default updateQuestionaireState;","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './Question.module.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport MultipleChoiceQuestion from './MultipleChoiceQuestion/MultipleChoiceQuestion';\r\nimport SliderQuestion from './SliderQuestion/SliderQuestion';\r\nimport SliderCombinationQuestion from './SliderCombinationQuestion/SliderCombinationQuestion';\r\nimport updateQuestionaireState from '../../../utility/updateQuestionaireState';\r\nimport checkValidity from '../../../utility/formValidation';\r\n\r\nconst Question = (props) => {\r\n    const [questionConfig, setQuestionConfig] = useState({\r\n        commonConfig: {\r\n            questionNumber: 0,\r\n            text: '',\r\n            type: '',\r\n            elementType: '',\r\n            validation: {}\r\n        },\r\n        specificConfig: {\r\n            value: '',\r\n            choices: [],\r\n            sliderRange: [],\r\n            sliderStep: 10,\r\n            subText: []\r\n        }\r\n    });\r\n    const [isTouched, setIsTouched] = useState(false);\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setQuestionConfig({...updateQuestionaireState(props.data)});\r\n    }, [props.data]);\r\n\r\n    const onInputChanged = (event) => {\r\n        let inputValue = event.target.value;\r\n        let validationRules = ((questionConfig || {}).commonConfig ||{}).validation || {};\r\n        let validity = checkValidity(inputValue, validationRules);\r\n        let copiedQuestionState = { ...questionConfig };\r\n        let copiedQuestionSpecificConfig = { ...copiedQuestionState.specificConfig };\r\n\r\n        copiedQuestionSpecificConfig.value = inputValue;\r\n\r\n        copiedQuestionState.specificConfig = copiedQuestionSpecificConfig;\r\n\r\n        setIsValid(validity);\r\n        setIsTouched(true);\r\n        setQuestionConfig({...copiedQuestionState});\r\n    }\r\n\r\n    const onInputFocusLostHandler = () => {\r\n        props.questionAnswerFinish({\r\n            answer: ((questionConfig || {}).specificConfig ||{}).value || '',\r\n            valid: isValid\r\n        });\r\n    }\r\n\r\n    const onMultipleChoiceSelectedHandler = (index) => {\r\n        let copiedQuestionState = { ...questionConfig };\r\n        let copiedQuestionSpecificConfig = { ...copiedQuestionState.specificConfig };\r\n        let copiedChoices = [...copiedQuestionSpecificConfig.choices];\r\n        let selectedChoice = copiedChoices[index];\r\n\r\n        if (copiedQuestionSpecificConfig.value === selectedChoice) {\r\n            return;\r\n        }\r\n\r\n        let validationRules = ((questionConfig || {}).commonConfig ||{}).validation || {};\r\n        let validity = checkValidity(selectedChoice, validationRules);\r\n\r\n        copiedQuestionSpecificConfig.value = selectedChoice;\r\n\r\n        copiedQuestionState.specificConfig = copiedQuestionSpecificConfig;\r\n\r\n        setIsValid(validity);\r\n        setIsTouched(true);\r\n        setQuestionConfig({...copiedQuestionState});\r\n        \r\n        props.questionAnswerFinish({\r\n            answer: selectedChoice,\r\n            valid: validity\r\n        });\r\n    }\r\n\r\n    const onSliderCombinationValueChangedHandler = (sliderCombData) => {\r\n        let copiedQuestionState = { ...questionConfig };\r\n        let copiedQuestionSpecificConfig = { ...copiedQuestionState.specificConfig };\r\n\r\n        let newSubSliderValues = copiedQuestionSpecificConfig.value.map((subSliderValue, index) => {\r\n            if (sliderCombData.sliderIndex === index) {\r\n                subSliderValue.value = sliderCombData.value;\r\n            }\r\n\r\n            return subSliderValue;\r\n        });\r\n\r\n        copiedQuestionSpecificConfig.value = newSubSliderValues;\r\n        copiedQuestionState.specificConfig = copiedQuestionSpecificConfig;\r\n\r\n        setQuestionConfig({...copiedQuestionState});\r\n\r\n        props.questionAnswerFinish({\r\n            newSubSliderData: newSubSliderValues\r\n        });\r\n    }\r\n\r\n    let content = null;\r\n    let questionData = {};\r\n\r\n    switch(questionConfig.commonConfig.type || '') {\r\n        case 'text':\r\n        case 'number':\r\n            content = <Input\r\n                elementType={questionConfig.commonConfig.elementType}\r\n                elementConfig={{\r\n                    type: 'text',\r\n                    placeholder: questionConfig.commonConfig.text\r\n                }}\r\n                label={questionConfig.commonConfig.text}\r\n                value={questionConfig.specificConfig.value}\r\n                touched={isTouched}\r\n                isValid={isValid}\r\n                changed={(event) => onInputChanged(event)}\r\n                focusLost={onInputFocusLostHandler}\r\n            />;\r\n            break;\r\n        case 'multiple-choice':\r\n            questionData = {\r\n                questionNumber: questionConfig.commonConfig.questionNumber,\r\n                text: questionConfig.commonConfig.text,\r\n                choices: questionConfig.specificConfig.choices\r\n            };\r\n            content = <MultipleChoiceQuestion\r\n                questionData={questionData}\r\n                answerSelected={(answerIndex) => onMultipleChoiceSelectedHandler(answerIndex, questionData.questionNumber)}\r\n            />;\r\n            break;\r\n        case 'slider':\r\n            content = <SliderQuestion\r\n                sliderLabel={questionConfig.commonConfig.text}\r\n                sliderRange={questionConfig.specificConfig.sliderRange}\r\n                sliderStep={questionConfig.specificConfig.sliderStep}\r\n                value={questionConfig.specificConfig.value}\r\n                focusLost={onInputFocusLostHandler}\r\n                sliderChanged={(event) => onInputChanged(event)}\r\n            />;\r\n            break;\r\n        case 'slider-combination':\r\n            questionData = {\r\n                questionNumber: questionConfig.commonConfig.questionNumber,\r\n                text: questionConfig.commonConfig.text,\r\n                subSliders: questionConfig.specificConfig.subSliders\r\n            };\r\n\r\n            content = <SliderCombinationQuestion\r\n                questionData={questionData}\r\n                sliderConfig={{\r\n                    range: questionConfig.specificConfig.sliderRange,\r\n                    step: questionConfig.specificConfig.sliderStep\r\n                }}\r\n                sliderCombinationValueChanged={onSliderCombinationValueChangedHandler}\r\n            />;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.QuestionWrapper}>\r\n            {content}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Question;","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './Content.module.scss';\r\nimport Button from '../../UI/Button/Button';\r\nimport Question from '../Question/Question';\r\n\r\nconst Content = (props) => {\r\n    const [questionnaireQuestions, setQuestionnaireQuestions] = useState([]);\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setQuestionnaireQuestions(props.questions);\r\n    }, [props.questions]);\r\n\r\n    // TODO: fix\r\n    const onQuestionFinishedHandler = (index, answerData) => {\r\n        // console.log(`Question #${index}: ${answerData.answer} and its validity status: ${answerData.valid}`);\r\n\r\n        // console.log(questionnaireQuestions[index])\r\n\r\n        let copiedQuestionArr = [...questionnaireQuestions];\r\n        let copiedQuestionData = { ...copiedQuestionArr[index] };\r\n        let questionElementType = copiedQuestionData.type || '';\r\n\r\n        switch (questionElementType) {\r\n            case 'text':\r\n            case 'multiple-choice':\r\n            case 'slider':\r\n                copiedQuestionData.value = answerData.answer;\r\n                copiedQuestionData.valid = answerData.valid;\r\n                break;\r\n            case 'slider-combination':\r\n                copiedQuestionData.value = answerData.newSubSliderData;\r\n                break;\r\n            default:\r\n                throw new Error('There is no such type of an element!');\r\n        }\r\n\r\n        copiedQuestionArr[index] = copiedQuestionData;\r\n\r\n        setQuestionnaireQuestions(copiedQuestionArr);\r\n\r\n        let isValid = true;\r\n\r\n        copiedQuestionArr.forEach(answeredQuestion => {\r\n            isValid = isValid && answeredQuestion.valid;\r\n        });\r\n\r\n        setIsFormValid(isValid);\r\n    }\r\n\r\n    const onQuestionnaireSubmitted = () => {\r\n        let questionnaireData = {\r\n            userId: '',\r\n            questionnaireId: '',\r\n            data: questionnaireQuestions.map(question => {\r\n                return {\r\n                    questionNo: question.questionNumber,\r\n                    type: question.type,\r\n                    answer: question.value\r\n                }\r\n            })\r\n        }\r\n        props.questionnaireSubmitted(questionnaireData)\r\n    }\r\n\r\n    let pageContent = questionnaireQuestions.map((question, i) => {\r\n        return <Question\r\n            key={i}\r\n            data={question}\r\n            questionAnswerFinish={(answer) => onQuestionFinishedHandler(i, answer)}\r\n        />;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <section className={classes.ContentWrapper}>\r\n                <div className={classes.Content}>\r\n                    {pageContent}\r\n                </div>\r\n            </section>\r\n\r\n            <div className={classes.Content__Cta}>\r\n                <Button\r\n                    disabled={!isFormValid}\r\n                    clicked={onQuestionnaireSubmitted}\r\n                >Submit</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content;","import React, { useState } from 'react';\r\n\r\nimport classes from './Questionnaire.module.scss';\r\nimport Intro from './Intro/Intro';\r\nimport Finish from './Finish/Finish';\r\nimport Content from './Content/Content';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst Questionnaire = (props) => {\r\n    const [isAtQuestionnaireIntro, setIsAtQuestionnaireIntro] = useState(true);\r\n    const [questionnaireFinished, setQuestionnaireFinished]  = useState(false);\r\n\r\n    // TODO: CHANGE\r\n    const content = require('../../assets/questionnaire_poc.json');\r\n    const questionnaireQuestions = ((((content || {}).questionnaires || [])[0] || {}).questions || []).map(question => {\r\n        return {\r\n            valid: question.type === 'text' || question.type === 'multiple-choice' ? false : true,\r\n            ...question\r\n        };\r\n    });\r\n    // ~\r\n\r\n    const onQuestionnaireStartedHandler = () => {\r\n        setIsAtQuestionnaireIntro(false);\r\n    }\r\n\r\n    const onQuestionnaireSubmittedHandler = (data) => {\r\n        console.log(data)\r\n\r\n        setQuestionnaireFinished(true);\r\n    }\r\n\r\n    let pageContent = <Intro onQuestionnaireStarted={onQuestionnaireStartedHandler} />;\r\n\r\n    if (!isAtQuestionnaireIntro) {\r\n        pageContent = <Content\r\n            questions={questionnaireQuestions}\r\n            questionnaireSubmitted={onQuestionnaireSubmittedHandler} />;\r\n    }\r\n\r\n    if (questionnaireFinished) {\r\n        pageContent = <Finish />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Questionnaire}>\r\n            <div className={classes.Questionnaire__Exit}>\r\n                <Button btnType=\"BtnDanger\" clicked={props.onQuestionnaireExited}>\r\n                    <span>\r\n                        &nbsp;\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n\r\n            {pageContent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Questionnaire;","import React, { Component, Fragment } from 'react';\r\n\r\nimport classes from './Course.module.scss';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport axiosCourse from '../../axiosUtility/axios-course';\r\nimport axiosForum from '../../axiosUtility/axios-forum';\r\nimport axiosPost from '../../axiosUtility/axios-post';\r\nimport CourseNavigation from '../../components/CourseNavigation/CourseNavigation';\r\nimport CourseInfo from '../../components/CourseInfo/CourseInfo';\r\nimport CourseForum from '../../components/CourseForum/CourseForum';\r\nimport CourseMenu from '../../components/CourseMenu/CourseMenu';\r\nimport CourseSection from '../../components/CourseSection/CourseSection';\r\nimport Quiz from '../../components/Quiz/QuizContainer';\r\nimport Questionnaire from '../../components/Questionnaire/Questionnaire';\r\n\r\nclass Course extends Component {\r\n    state = {\r\n        courseNavItems: [{\r\n            name: 'Info',\r\n            icon: 'library',\r\n            active: true\r\n        },\r\n        {\r\n            name: 'Course',\r\n            icon: 'education',\r\n            active: false\r\n        },\r\n        {\r\n            name: 'Forums',\r\n            icon: 'bubbles2',\r\n            active: false\r\n        }],\r\n        isLoading: false,\r\n        courseData: {},\r\n        courseForum: {},\r\n        currentWeek: 0,\r\n        sectionIndex: 0,\r\n        currentPage: 0,\r\n        isOnMainMenu: true,\r\n        isOnQuizMode: false,\r\n        isOnCreatePostMode: false,\r\n        isOnQuestionnaireMode: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        axiosCourse.get('/' + this.props.match.params.id).then(response => {\r\n            this.setState({\r\n                isLoading: false\r\n            });\r\n            return response.data.course;\r\n        }).then(fetchedCourse => {\r\n            this.setState({\r\n                courseData: fetchedCourse\r\n            });\r\n\r\n            return axiosForum.get('/course/' + fetchedCourse._id);\r\n        }).then(forumResp => {\r\n            this.setState({\r\n                courseForum: forumResp.data.forum\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n\r\n            this.props.history.push('/courses');\r\n        });\r\n    }\r\n\r\n    onNavigationItemClickedHandler = (index) => {\r\n        let copiedCourseNavItems = [...this.state.courseNavItems];\r\n\r\n        let modifiedCourseNavItems = copiedCourseNavItems.map((item, i) => {\r\n            return {\r\n                ...item,\r\n                active: i === index\r\n            };\r\n        });\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                courseNavItems: modifiedCourseNavItems\r\n            }\r\n        });\r\n    }\r\n\r\n    onCourseActivityEnabledHandler = (type) => {\r\n        switch(type) {\r\n            case 'quiz':\r\n                this.setState({\r\n                    isOnMainMenu: false,\r\n                    isOnQuizMode: true\r\n                });\r\n                break;\r\n            case 'questionnaire':\r\n                this.setState({\r\n                    isOnMainMenu: false,\r\n                    isOnQuestionnaireMode: true\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onCourseActivityExitedHandler = () => {\r\n        this.setState({\r\n            isOnMainMenu: true,\r\n            isOnQuizMode: false,\r\n            isOnQuestionnaireMode: false\r\n        });\r\n    }\r\n\r\n    onSectionSelectedHandler = (index) => {\r\n        this.setState({\r\n            isOnMainMenu: false\r\n        });\r\n    }\r\n\r\n    onBackToMainMenuHandler = () => {\r\n        this.setState({\r\n            isOnMainMenu: true\r\n        });\r\n    }\r\n\r\n    onCreatePostModeToggledHandler = (bool) => {\r\n        this.setState({\r\n            isOnCreatePostMode: bool\r\n        });\r\n    }\r\n\r\n    onForumPostCreatedHandler = (data) => {\r\n        let formData = {\r\n            ...data,\r\n            forumId: this.state.courseForum._id\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        };\r\n\r\n        axiosPost.post('', formData, config).then(result => {\r\n            console.log(result); // TODO remove\r\n\r\n            return axiosForum.get('/course/' + this.state.courseData._id);\r\n        }).then(newForumResponse => {\r\n            this.setState({\r\n                courseForum: newForumResponse.data.forum,\r\n                isOnCreatePostMode: false\r\n            });\r\n        });\r\n    }\r\n\r\n    onForumPostEditedHandler = (data) => {\r\n        const formData = {\r\n            title: data.title,\r\n            content: data.content\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        };\r\n\r\n        axiosPost.put(`/${data.postId}`, formData, config).then(result => {\r\n            console.log(result); // TODO remove\r\n\r\n            return axiosForum.get('/course/' + this.state.courseData._id);\r\n        }).then(newForumResponse => {\r\n            this.setState({\r\n                courseForum: newForumResponse.data.forum,\r\n                isOnCreatePostMode: false\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    onForumPostDeletedHandler = (postId) => {\r\n        let config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        };\r\n\r\n        axiosPost.delete(`/${postId}`, config).then(result => {\r\n            console.log(result);\r\n\r\n            const copiedCourseForum = { ...this.state.courseForum };\r\n\r\n            let copiedCourseForumPosts = copiedCourseForum.posts.filter(post => post._id !== postId);\r\n\r\n            copiedCourseForum.posts = [...copiedCourseForumPosts];\r\n\r\n            this.setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    courseForum: copiedCourseForum\r\n                }\r\n            });\r\n        }).catch(error => {\r\n            console.log(error.response.data.message);\r\n        });        \r\n    }\r\n\r\n    onForumPostRespondedHandler = (formData) => {\r\n        let config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        };\r\n\r\n        axiosPost.put(`/respond/${formData.postId}`, { index: formData.index }, config).then(response => {\r\n            return axiosForum.get('/course/' + this.state.courseData._id);\r\n        }).then(newForumResponse => {\r\n            this.setState({\r\n                courseForum: newForumResponse.data.forum\r\n            });\r\n        }).catch(error => {\r\n            // TODO: A Better error feedback should be implemented\r\n            console.log(error.response.data.message);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let courseLandingData = (this.state.courseData || {}).landing || {};\r\n        let activeNavigation = (this.state.courseNavItems.find(item => item.active) || {}).name;\r\n        let section = ((this.state.courseData || {}).sections || [])[this.state.sectionIndex] || {};\r\n        let courseName = (this.state.courseData || {}).name;\r\n        let courseQuiz = (this.state.courseData || {}).quiz;\r\n        let courseIntro = (this.state.courseData || {}).introduction;\r\n        let pageContent = null;\r\n        \r\n        switch(activeNavigation) {\r\n            case 'Info':\r\n                pageContent = <CourseInfo landingData={courseLandingData} />;\r\n                break;\r\n            case 'Course':\r\n                pageContent = (\r\n                    <div className={classes.Course}>\r\n                        {this.state.isOnMainMenu ?\r\n                            <CourseMenu\r\n                                courseIntro={courseIntro}\r\n                                onSectionSelect={this.onSectionSelectedHandler}\r\n                                courseQuiz={courseQuiz._id}\r\n                                onCourseActivityEnabled={this.onCourseActivityEnabledHandler}\r\n                            />\r\n                        : !this.state.isOnQuizMode ?\r\n                            !this.state.isOnQuestionnaireMode ?\r\n                                <CourseSection\r\n                                    onBackToMainMenu={this.onBackToMainMenuHandler}\r\n                                    sectionData={section}\r\n                                /> :\r\n                                <Questionnaire\r\n                                    onQuestionnaireExited={this.onCourseActivityExitedHandler}\r\n                                    />\r\n                            :\r\n                            <Quiz\r\n                                quizData={courseQuiz}\r\n                                onQuizExited={this.onCourseActivityExitedHandler} />\r\n                        }\r\n                    </div>\r\n                );\r\n                break;\r\n            case 'Forums':\r\n                pageContent = <CourseForum \r\n                    createPostMode={this.state.isOnCreatePostMode}\r\n                    toggleCreatePostMode={this.onCreatePostModeToggledHandler}\r\n                    forumData={this.state.courseForum}\r\n                    forumPostCreated={this.onForumPostCreatedHandler}\r\n                    forumPostEdited={this.onForumPostEditedHandler}\r\n                    onPostDeleted={this.onForumPostDeletedHandler}\r\n                    postCommentSubmitted={this.onForumPostRespondedHandler}\r\n                />;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        let coursePageContent = (\r\n            <span className={classes.Course__Loader}>\r\n                <Loader strokeWidth={4} />\r\n            </span>\r\n        );\r\n\r\n        if (!this.state.isLoading) {\r\n            coursePageContent = (\r\n                <Fragment>\r\n                    <h1 className={classes.Course__Title}>\r\n                        {courseName}\r\n                    </h1>\r\n\r\n                    <CourseNavigation\r\n                        navItemList={this.state.courseNavItems}\r\n                        navigationItemClicked={this.onNavigationItemClickedHandler}\r\n                    />\r\n\r\n                    {pageContent}\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {coursePageContent}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Course;","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport CourseList from '../CourseList/CourseList';\r\nimport Course from '../Course/Course';\r\n\r\nclass CourseContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path={this.props.match.url + '/:id'} component={Course} />\r\n                <Route path={this.props.match.url + '/'} component={CourseList} />\r\n                <Redirect to={this.props.match.url + '/'} />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseContainer;","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nconst Logout = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.logout());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Redirect to=\"/\" />\r\n    );\r\n}\r\n\r\nexport default Logout","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { connect, useDispatch } from 'react-redux';\r\n\r\nimport Administration from './components/Admin/Administration';\r\nimport Account from './components/Account/Account';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport Home from './components/Home/Home';\r\nimport Authentication from './containers/Authentication/Authentication';\r\nimport CourseContainer from './containers/CourseContainer/CourseContainer';\r\nimport Logout from './components/Auth/Logout/Logout';\r\n\r\nimport * as actions from './store/actions/index';\r\n\r\nconst App = (props) => {\r\n\tlet dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(actions.authCheckState());\r\n\t}, [dispatch]);\r\n\r\n\tlet routes = (\r\n\t\t<Switch>\r\n\t\t\t<Route path='/logout' component={Logout} />\r\n            {props.isAuthenticated ? <Route path='/my-account' component={Account} /> : null}\r\n\t\t\t<Route path='/auth' component={Authentication} />\r\n\t\t\t<Route path='/contact' render={() => <div>CONTACT COMPONENT</div>} />\r\n\t\t\t<Route path='/about' render={() => <div>ABOUT COMPONENT</div>} />\r\n\t\t\t<Route path='/courses' component={CourseContainer} />\r\n            {props.userStatus === 'admin' ? <Route path='/administration' component={Administration} /> : null}\r\n\t\t\t<Route path='/' exact component={Home} />\r\n\t\t\t<Redirect to='/' />\r\n\t\t</Switch>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t{routes}\r\n\t\t</Layout>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisAuthenticated: state.isAuth,\r\n        userStatus: state.userStatus\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    error: null,\r\n    token: null,\r\n    isAuth: false,\r\n    userId: null,\r\n    userImage: null,\r\n    userStatus: null,\r\n    redirectPath: null,\r\n    successfullSignup: false\r\n};\r\n\r\n// Utility function for state management\r\nconst updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.LOGIN_START:\r\n            return updateObject(state, {\r\n                isLoading: true,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                username: null,\r\n                redirectPath: null,\r\n                userStatus: null,\r\n                userImage: null\r\n            });\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                token: action.token,\r\n                isAuth: true,\r\n                userId: action.userId,\r\n                username: action.username,\r\n                redirectPath: action.path,\r\n                userStatus: action.status,\r\n                userImage: action.userImage\r\n            });\r\n        case actionTypes.LOGIN_FAIL:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: action.error,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                username: null,\r\n                redirectPath: null,\r\n                userStatus: null,\r\n                userImage: null\r\n            });\r\n        case actionTypes.LOGOUT:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                username: null,\r\n                redirectPath: null,\r\n                userStatus: null,\r\n                userImage: null\r\n            });\r\n        case actionTypes.SIGNUP_START:\r\n            return updateObject(state, {\r\n                isLoading: true,\r\n                error: null,\r\n                redirectPath: null\r\n            });\r\n        case actionTypes.SIGNUP_SUCCESS:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                redirectPath: action.path,\r\n                successfullSignup: true\r\n            });\r\n        case actionTypes.SIGNUP_FAIL:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: action.error,\r\n                redirectPath: null,\r\n                successfullSignup: false\r\n            });\r\n        case actionTypes.SIGNUP_REDIRECT:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                redirectPath: null,\r\n                successfullSignup: false\r\n            });\r\n        case actionTypes.PASSWORD_RESET_REQUEST_START:\r\n            return updateObject(state, {\r\n                isLoading: true,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: null\r\n            });\r\n        case actionTypes.PASSWORD_RESET_REQUEST_SUCCESS:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: action.path\r\n            });\r\n        case actionTypes.PASSWORD_RESET_REQUEST_FAIL:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: action.error,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: action.path\r\n            });\r\n        case actionTypes.PASSWORD_RESET_START:\r\n            return updateObject(state, {\r\n                isLoading: true,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: null\r\n            });\r\n        case actionTypes.PASSWORD_RESET_SUCCESS:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: action.path\r\n            });\r\n        case actionTypes.PASSWORD_RESET_FAIL:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: action.error,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: action.path\r\n            });\r\n        case actionTypes.AVATAR_CHANGE:\r\n            return updateObject(state, {\r\n                userImage: action.newUrl\r\n            });\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport authReducer from './store/reducers/auth';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(authReducer, composeEnhancer(applyMiddleware(thunk)));\r\n\r\n/*\r\n<Provider store={store}>\r\n    <HashRouter basename=\"elearning-app\">\r\n        <App />\r\n    </HashRouter>\r\n</Provider>\r\n\r\n<Provider store={store}>\r\n        <BrowserRouter basename=\"/\">\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n*/\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <HashRouter basename=\"elearning-app\">\r\n            <App />\r\n        </HashRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackDialogueContainer\":\"FeedbackDialogue_FeedbackDialogueContainer__1K6tC\",\"FeedbackDialogue\":\"FeedbackDialogue_FeedbackDialogue__JWSh0\",\"FeedbackDialogue__Button\":\"FeedbackDialogue_FeedbackDialogue__Button__1f8bu\",\"FeedbackDialogue__Button__Success\":\"FeedbackDialogue_FeedbackDialogue__Button__Success__2YLoP\",\"FeedbackDialogue__Button__Error\":\"FeedbackDialogue_FeedbackDialogue__Button__Error__2-eAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateSection\":\"CreateSubSection_CreateSection__2prTM\",\"CreateSection__Header\":\"CreateSubSection_CreateSection__Header__25LTx\",\"CreateSection__Body\":\"CreateSubSection_CreateSection__Body__umyhd\",\"CreateSection__Body__FormField\":\"CreateSubSection_CreateSection__Body__FormField__1-YXX\",\"CreateSection__Body__Menu\":\"CreateSubSection_CreateSection__Body__Menu__2DErp\",\"CreateSection__Cta\":\"CreateSubSection_CreateSection__Cta__3veIv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Counter_Counter__JuLUT\",\"Counter__Label\":\"Counter_Counter__Label__3dcvm\",\"Counter__Body\":\"Counter_Counter__Body__2oAOR\",\"Counter__Amount\":\"Counter_Counter__Amount__1ogHE\",\"Counter__Button\":\"Counter_Counter__Button__133mU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseCard\":\"CourseCard_CourseCard__3W63U\",\"CourseCard__ImgSection\":\"CourseCard_CourseCard__ImgSection__1_hY_\",\"CourseCard__Name\":\"CourseCard_CourseCard__Name__1fqGN\",\"CourseCard__Body\":\"CourseCard_CourseCard__Body__sVP1R\",\"CourseCard__Body__Icon\":\"CourseCard_CourseCard__Body__Icon__1eeJN\",\"CourseCard__Cta\":\"CourseCard_CourseCard__Cta__37Z8A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Account__Header\":\"Account_Account__Header__2t4mM\",\"Account__Content\":\"Account_Account__Content__3SWS5\",\"Account__Content__ImageContainer\":\"Account_Account__Content__ImageContainer__1Q5j4\",\"Account__Content__FormContainer\":\"Account_Account__Content__FormContainer__3nXjP\",\"Account__Content__ImageContainer__Image\":\"Account_Account__Content__ImageContainer__Image__15Hkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RequestPasswordReset\":\"RequestPasswordReset_RequestPasswordReset__3fkcr\",\"RequestPasswordReset__Header\":\"RequestPasswordReset_RequestPasswordReset__Header__IXEyI\",\"RequestPasswordReset__Cta\":\"RequestPasswordReset_RequestPasswordReset__Cta__zvBM2\",\"RequestPasswordReset__Link\":\"RequestPasswordReset_RequestPasswordReset__Link__DXAKj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseNavigationItem\":\"CourseNavigationItem_CourseNavigationItem__3Tefo\",\"CourseNavigationItem__Icon\":\"CourseNavigationItem_CourseNavigationItem__Icon__2C9n7\",\"CourseNavigationItem__Text\":\"CourseNavigationItem_CourseNavigationItem__Text__sZB7d\",\"CourseNavigationItem__Active\":\"CourseNavigationItem_CourseNavigationItem__Active__2cVJW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__WQp--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseSubSection\":\"CourseSubSection_CourseSubSection__3GLOs\",\"CourseSubSection__Content\":\"CourseSubSection_CourseSubSection__Content__mNljk\",\"CourseSubSection__Content__Header\":\"CourseSubSection_CourseSubSection__Content__Header__2OEhj\",\"CourseSubSection__Content__Cta\":\"CourseSubSection_CourseSubSection__Content__Cta__qDpSN\",\"CourseSubSection__ButtonIcon\":\"CourseSubSection_CourseSubSection__ButtonIcon__3cRpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminAccordionMenuItem\":\"AdminAccordionMenuItem_AdminAccordionMenuItem__6mrOe\",\"AdminAccordionMenuItem__Icon\":\"AdminAccordionMenuItem_AdminAccordionMenuItem__Icon__6zIql\",\"AdminAccordionMenuItem__Link\":\"AdminAccordionMenuItem_AdminAccordionMenuItem__Link__3mY7W\",\"AdminAccordionMenuItem__ActiveLink\":\"AdminAccordionMenuItem_AdminAccordionMenuItem__ActiveLink__314HQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SectionItem__Name\":\"SectionItem_SectionItem__Name__19KlM\",\"SectionItem__Add\":\"SectionItem_SectionItem__Add__11cel\",\"SectionItem__List\":\"SectionItem_SectionItem__List__16K0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Accordion\":\"Accordion_Accordion__2mIh4\",\"Accordion__label\":\"Accordion_Accordion__label__2qYRj\",\"Accordion__label__border\":\"Accordion_Accordion__label__border__12guk\",\"Accordion__inner\":\"Accordion_Accordion__inner__2keUS\",\"Accordion__content\":\"Accordion_Accordion__content__2Xbve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateCourse\":\"CreateCourse_CreateCourse__31u03\",\"CreateCourse__Header\":\"CreateCourse_CreateCourse__Header__1oLGO\",\"CreateCourse__Body\":\"CreateCourse_CreateCourse__Body__3OSnT\",\"CreateCourse__Cta\":\"CreateCourse_CreateCourse__Cta__18pv4\"};"],"sourceRoot":""}