{"version":3,"sources":["assets/images/sprite.svg","containers/CourseList/CourseListElement/CourseListElement.module.scss","components/CourseForum/PostList/PostDetail/PostDetail.module.scss","components/CourseSection/CourseSection.module.scss","components/Auth/Login/Login.module.scss","components/UI/Input/Input.module.scss","components/Auth/Signup/Signup.module.scss","components/UI/Button/Button.module.scss","components/Quiz/QuizContent/Question/Question.module.scss","components/Auth/RequestPasswordReset/RequestPasswordReset.module.scss","components/CourseNavigation/CourseNavigationItem/CourseNavigationItem.module.scss","components/CourseForum/PostList/Post/Post.module.scss","components/CourseInfo/CourseInfo.module.scss","components/CourseForum/CreatePost/CreatePost.module.scss","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/CreatePostComment/CreatePostComment.module.scss","components/Modal/Modal.module.scss","components/CourseSection/CourseSubSection/CourseSubSection.module.scss","components/Quiz/QuizEnd/QuizEnd.module.scss","components/Quiz/QuizEnd/QuestionResult/QuestionResult.module.scss","components/Auth/PasswordReset/PasswordReset.module.scss","containers/CourseList/CourseList.module.scss","components/UI/RadioButton/RadioButton.module.scss","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.scss","components/ErrorDialogue/ErrorDialogue.module.scss","components/Auth/SignupSuccess/SignupSuccess.module.scss","components/Loader/Loader.module.scss","containers/Course/Course.module.scss","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/PostComment.module.scss","components/CourseMenu/CourseMenu.module.scss","components/Quiz/QuizIntro/QuizIntro.module.scss","components/ProgressBar/ProgressBar.module.scss","components/Navigation/NavigationItems/NavigationItems.module.scss","components/CourseForum/CourseForum.module.scss","components/CourseForum/PostList/PostList.module.scss","components/Paginator/Paginator.module.scss","components/UI/SelectInput/SelectInput.module.scss","components/Paginator/PrevButton/PrevButton.module.scss","components/Paginator/NextButton/NextButton.module.scss","components/Quiz/QuizContainer.module.scss","components/Navigation/Toolbar/Toolbar.module.scss","containers/Authentication/Authentication.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/CourseNavigation/CourseNavigation.module.scss","components/CourseForum/PostList/PostDetail/PostCommentList/PostCommentList.module.scss","components/UI/SelectInput/Options/Options.module.scss","components/UI/SelectInput/Options/Option/Option.module.scss","components/Paginator/PaginationRange/PaginationRange.module.scss","components/Quiz/QuizContent/QuizContent.module.scss","components/Quiz/QuizContent/SuccessCheck/SuccessCheck.module.scss","assets/images/spine.jpg","assets/anim sync /^/.*$","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","axiosUtility/axios-auth.js","store/actions/auth.js","store/actions/actionTypes.js","components/UI/Backdrop/Backdrop.js","components/ErrorDialogue/ErrorDialogue.js","components/UI/Input/Input.js","utility/formValidation.js","components/Auth/Login/Login.js","components/Auth/Signup/Signup.js","components/Auth/SignupSuccess/SignupSuccess.js","components/UI/Button/Button.js","components/Auth/RequestPasswordReset/RequestPasswordReset.js","components/Auth/PasswordReset/PasswordReset.js","containers/Authentication/Authentication.js","components/Loader/Loader.js","axiosUtility/axios-course.js","containers/CourseList/CourseListElement/CourseListElement.js","containers/CourseList/CourseList.js","axiosUtility/axios-forum.js","axiosUtility/axios-post.js","components/CourseNavigation/CourseNavigationItem/CourseNavigationItem.js","components/CourseNavigation/CourseNavigation.js","components/CourseInfo/CourseInfo.js","components/CourseForum/CreatePost/CreatePost.js","components/CourseForum/PostList/Post/Post.js","components/CourseForum/PostList/PostList.js","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/PostComment.js","components/CourseForum/PostList/PostDetail/PostCommentList/PostCommentList.js","components/Modal/Modal.js","components/CourseForum/PostList/PostDetail/PostCommentList/PostComment/CreatePostComment/CreatePostComment.js","components/CourseForum/PostList/PostDetail/PostDetail.js","components/UI/SelectInput/Options/Option/Option.js","components/UI/SelectInput/Options/Options.js","components/UI/SelectInput/SelectInput.js","components/Paginator/PaginationRange/PaginationRange.js","components/Paginator/PrevButton/PrevButton.js","components/Paginator/NextButton/NextButton.js","components/Paginator/Paginator.js","components/CourseForum/CourseForum.js","components/CourseMenu/CourseMenu.js","components/CourseSection/CourseSubSection/CourseSubSection.js","components/CourseSection/CourseSection.js","components/Quiz/QuizIntro/QuizIntro.js","components/Quiz/QuizEnd/QuestionResult/QuestionResult.js","components/Quiz/QuizEnd/QuizEnd.js","components/UI/RadioButton/RadioButton.js","components/Quiz/QuizContent/SuccessCheck/SuccessCheck.js","components/Quiz/QuizContent/Question/Question.js","components/ProgressBar/ProgressBar.js","components/Quiz/QuizContent/QuizContent.js","components/Quiz/QuizContainer.js","containers/Course/Course.js","containers/CourseContainer/CourseContainer.js","components/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/auth.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","NavigationItem","props","className","classes","Link","activeClassName","ActiveLink","exact","to","children","NavigationItems","navList","isAuth","Navigation","Toolbar","state","this","status","userStatus","Component","connect","isAuthenticated","style","marginTop","instance","axios","create","baseURL","authTimeout","expirationTime","dispatch","setTimeout","logout","loginSuccess","token","userId","email","type","path","localStorage","removeItem","Backdrop","ReactDOM","createPortal","show","onClick","clicked","document","getElementById","ErrorDialogue","ErrorDialogueContainer","errorMessage","ErrorDialogueCallToAction","closed","Input","inputElement","inputClasses","InputElement","validationError","isValid","touched","push","Invalid","value","elementType","join","elementConfig","onChange","changed","TextArea","SelectElement","options","option","key","displayValue","labelClassList","InputElement__Label","labelColor","InputElement__Label__White","ValidationError","label","checkValidity","rules","required","trim","maxLength","length","minLength","isEmail","test","isNumeric","isEnglishOnly","Login","useState","placeholder","validation","valid","password","formControls","setFormControls","formIsValid","setFormIsValid","overlayClassList","Login__Overlay","isSignupMode","Login__Overlay__Active","Login__Form","Login__Form__Header","Login__Form__Fields","formControl","event","copiedFormControls","copiedFormControl","target","formValidation","formValid","forEach","formCtrl","inputChangedHandler","Login__Form__Cta","forgotPasswordClicked","disabled","preventDefault","loginForm","loginFormSubmit","Signup","firstName","lastName","classList","Signup__Active","onSignupOpened","resetForm","closeSignupPanel","openSignupPanel","Signup__Close","Signup__Form","Signup__Form__Header","Signup__Form__Fields","Signup__Form__Cta","signupForm","signupFormSubmit","SignupSuccess","useDispatch","useEffect","SignupSuccess__Header","SignupSuccess__Content","Button","btnType","ButtonPrimary","ButtonDanger","ButtonSecondary","btnSize","ButtonSmall","RequestPasswordReset","setEmail","requestSent","setRequestSent","pageContent","loading","reqSuccessfull","RequestPasswordReset__Header","RequestPasswordReset__Cta","RequestPasswordReset__Link","onSubmit","emailFormSubmit","RequestPasswordReset__Body","copiedEmailFormControl","PasswordReset","passwordRepeat","resetFormControls","setResetFormControls","setFormValid","location","pathname","split","slice","formInputs","inputName","ResetedPasswordHeader","PasswordReset__Header","passwordResetForm","passwordVerify","resetFormSubmit","PasswordReset__Form","Authentication","onCloseErrorDialogueHandler","setState","showError","onSignupClosedHandler","toggle","stopPropagation","signupMode","onForgotPasswordClickedHandler","history","match","url","onLoginFormSubmittedHandler","formData","login","onSignupFormSubmittedHandler","signup","onEmailFormSubmitted","requestPasswordReset","onPasswordResetFormSubmitHandler","resetPassword","prevProps","prevState","redirectPath","signupSuccess","error","content","render","height","isLoading","successfullSignup","userData","axiosAuth","post","then","response","Date","getTime","data","expiresIn","setItem","catch","loginFail","message","signupFail","result","passwordResetRequestFail","actions","put","resetPasswordFail","Loader","Spinner","Circular","viewBox","Stroke","cx","cy","r","fill","strokeWidth","CourseListElement","image","require","backgroundImage","index","courseData","CourseListElement__Side","CourseListElement__Side__Front","CourseListElement__Picture","CourseListElement__Content","CourseListElement__Heading","name","CourseListElement__Description","CourseListElement__Description__FacultyList","landing","faculty","_id","CourseListElement__Description__FacultyList__Item","CourseListElement__Side__Back","CourseListElement__Cta","CourseListElement__Cta__Link","selectCourseListElement","CourseListElement__Cta__Link__Icon","xlinkHref","svg","CourseListElement__Cta__Link__Text","CourseList","courseList","setCourseList","setIsLoading","axiosCourse","get","CourseList__Loader","CourseList__Header","CourseList__Content","course","i","CourseNavigationItem","active","CourseNavigationItem__Active","CourseNavigationItem__Icon","iconName","CourseNavigationItem__Text","CourseNavigation","navItemList","item","icon","navigationItemClicked","CourseInfo","CourseInfo__Image","src","landingData","alt","CourseInfo__Body","CourseInfo__Info","info","CourseInfo__Faculty","CreatePost","title","isFormValid","setIsFormValid","prePopulateFormFields","useCallback","prePopulatedFormFields","copiedTitle","editFormFields","isTitleValid","copiedContent","isContentValid","isEditMode","formFields","CreatePost__Header","CreatePost__Body","CreatePost__Inputs","CreatePost__Cta","editPost","createPost","createPostCancel","Post","postData","postSelected","Post__Title","Post__Author","author","Post__Replies","responses","Post__Views","views","Post__Activity","time","now","updateTime","difference","parseInt","timeString","getPostCreateTimeDifference","createdAt","PostList","postContent","postList","onPostSelected","PostList__Header","PostComment","commentData","PostComment__Header","updatedAt","PostComment__Content","PostCommentList","commentList","sort","c1","c2","comment","Modal","ModalContainer","modalClasses","setModalClasses","customStyle","ModalContainer__Closed","dangerouslySetInnerHTML","__html","CreatePostComment","setPostContent","onCreatePostModalClosedHandler","cancelPostComment","postCommentEnabled","width","CreatePostComment__Close","CreatePostComment__Header","CreatePostComment__Form","formSubmitted","copiedPostContent","CreatePostComment__Form__Cta","timeout","isPostComment","setIsPostComment","setPostData","clearTimeout","togglePostComment","bool","prototype","hasOwnProperty","call","PostDetailContainer","postId","postCommentSubmit","PostDetail","PostDetail__Header","PostDetail__Header__Title","PostDetail__Header__TimeContainer","PostDetail__Header__TimeContainer__Time","PostDetail__Header__TimeContainer__Tooltip","date","getDate","getMonth","getFullYear","getHours","getMinutes","formatPostCreatedDate","PostDetail__Body","PostDetail__Cta","postDeleted","postEdited","PostComments","PostComments__NoCom","PostDetailContainer__Cta","onBackButtonPressed","Option","onOptionSelected","Options","optionSelectedHandler","selectedOption","SelectOptions","ref","optionsRef","SelectInput","showOptions","setShowOptions","selected","setSelected","useRef","buttonRef","addEventListener","handleClickOutside","removeEventListener","current","contains","SelectInputWrapper","itemPerPageList","valueSelected","PaginationRange","itemPerPage","currentPage","maxItem","PrevButton","ArrowIcon","NextButton","Paginator","setItemPerPage","setCurrentPage","Math","floor","maxItemCount","pageCount","setPageCount","pageNumber","pagination","perPage","PaginatorButtons","hasPrevPage","hasNextPage","CourseForum","startIndex","endIndex","paginationState","setPaginationState","showPostDetail","setShowPostDetail","selectedPost","setSelectedPost","isPostEditMode","setIsPostEditMode","postToEdit","setPostToEdit","forumPostList","forumData","posts","find","onPostDeleted","toggleCreatePostMode","postCommentSubmitted","createPostMode","forumPostCreated","forumPostEdited","CourseForum__Cta","paginationData","CourseMenu","CourseMenu__Intro","courseIntro","CourseMenu__Misc","courseQuiz","onQuizModeActivated","CourseMenu__Cta","onSectionSelect","CourseSubSection","subSectionData","CourseSubSection__Header","subSectionPageIndex","CourseSubSection__Cta","onBackClicked","CourseSubSection__ButtonIcon","showNext","onNextClicked","CourseSection","isAtIntro","setIsAtIntro","subSectionIndex","setSubSectionIndex","setSubSectionPageIndex","sectionData","totalSectionCount","sections","currentSectionLength","goToPrevSubSection","prevSubSectionLength","Section","BackMenu__Button","onBackToMainMenu","BackMenu__Icon","Section__Container","Section__Title","Section__Content","Section__List","section","Section__ListItem","Section__ListButton","Section__ListIcon","QuizIntro","QuizIntro__Header","quizTitle","QuizIntro__Cta","onQuizStarted","QuestionResult","isCorrect","classColor","QuestionResult__Icon__Correct","QuestionResult__Icon__Incorrect","QuestionResult__QuestionNumber","questionNumber","QuestionResult__Icon","QuizEnd","visualResult","answers","answer","QuizEnd__Header","QuizEnd__Content","QuizEnd__Content__Text","QuizEnd__Content__Visual","RadioButton","radioRef","checked","RadioGroup","RadioButton__Input","htmlFor","RadioButton__Label","SuccessCheck","defaultOptions","loop","autoplay","animationData","isSuccess","rendererSettings","preserveAspectRatio","window","innerWidth","Question","selectedChoice","setSelectedChoice","showCaseModal","setShowCaseModal","Question__Number","questionCase","Question__Text","questionText","questionType","Question__Text__CaseIcon","Question__Choices","questionChoices","choice","text","onChoiceMarkedHandler","Question__Cta","answered","success","onAnswerSelected","Question__Select","Question__Select__Icon","ProgressBar","progress","questionAmount","borderTopRightRadius","borderBottomRightRadius","ProgressBar__Background","ProgressBar__Foreground","QuizContent","currentQuestion","setCurrentQuestion","setSuccess","isQuestionAnswered","setIsQuestionAnswered","questionList","questions","questionAnswerList","choices","case","answeredQuestionNumber","choiceIndex","onQuizEnd","QuizContainer","isAtQuizIntro","setIsAtQuizIntro","isQuizFinished","setIsQuizFinished","quizResultData","setQuizResultData","quizData","numberOfQuestions","Quiz","Quiz__Exit","onQuizExited","quizReport","Course","courseNavItems","courseForum","currentWeek","sectionIndex","isOnMainMenu","isOnQuizMode","isOnCreatePostMode","onNavigationItemClickedHandler","modifiedCourseNavItems","onQuizModeActivatedHandler","onQuizExitedHandler","onSectionSelectedHandler","onBackToMainMenuHandler","onCreatePostModeToggledHandler","onForumPostCreatedHandler","forumId","config","headers","Authorization","getItem","axiosPost","console","log","axiosForum","newForumResponse","forum","onForumPostEditedHandler","onForumPostDeletedHandler","delete","copiedCourseForum","copiedCourseForumPosts","filter","onForumPostRespondedHandler","params","fetchedCourse","forumResp","courseLandingData","activeNavigation","weeks","courseName","quiz","introduction","coursePageContent","Course__Loader","Course__Title","CourseContainer","component","Logout","a","expirationDate","user","routes","Boolean","hostname","initialState","userEmail","updateObject","oldObject","updatedProperties","reducer","action","username","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","authReducer","applyMiddleware","thunk","app","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.511e2af1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sprite.976e37e5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseListElement\":\"CourseListElement_CourseListElement__cnvqB\",\"CourseListElement__Content\":\"CourseListElement_CourseListElement__Content__1an2w\",\"CourseListElement__Side\":\"CourseListElement_CourseListElement__Side__2EY0g\",\"CourseListElement__Side__Front\":\"CourseListElement_CourseListElement__Side__Front__3WS02\",\"CourseListElement__Side__Back\":\"CourseListElement_CourseListElement__Side__Back__3hmYb\",\"CourseListElement__Side__Back__1\":\"CourseListElement_CourseListElement__Side__Back__1__3rGFv\",\"CourseListElement__Side__Back__2\":\"CourseListElement_CourseListElement__Side__Back__2__InwLi\",\"CourseListElement__Side__Back__3\":\"CourseListElement_CourseListElement__Side__Back__3__1iOKN\",\"CourseListElement__Picture\":\"CourseListElement_CourseListElement__Picture__2bOD6\",\"CourseListElement__Heading\":\"CourseListElement_CourseListElement__Heading__2QZap\",\"CourseListElement__Heading__1\":\"CourseListElement_CourseListElement__Heading__1__2ltIG\",\"CourseListElement__Heading__2\":\"CourseListElement_CourseListElement__Heading__2__3n1dg\",\"CourseListElement__Heading__3\":\"CourseListElement_CourseListElement__Heading__3__29JsF\",\"CourseListElement__Description\":\"CourseListElement_CourseListElement__Description__2t5Lh\",\"CourseListElement__Description__FacultyList\":\"CourseListElement_CourseListElement__Description__FacultyList__2MlGJ\",\"CourseListElement__Description__FacultyList__Item\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__2vq6A\",\"CourseListElement__Description__FacultyList__Item__1\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__1__1FNtj\",\"CourseListElement__Description__FacultyList__Item__2\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__2__32_xL\",\"CourseListElement__Description__FacultyList__Item__3\":\"CourseListElement_CourseListElement__Description__FacultyList__Item__3__1BJLf\",\"CourseListElement__Cta\":\"CourseListElement_CourseListElement__Cta__2bA9l\",\"CourseListElement__Cta__Link\":\"CourseListElement_CourseListElement__Cta__Link__2dN2V\",\"CourseListElement__Cta__Link__Icon\":\"CourseListElement_CourseListElement__Cta__Link__Icon__1EFqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostDetailContainer\":\"PostDetail_PostDetailContainer__3QhFJ\",\"PostDetailContainer__Cta\":\"PostDetail_PostDetailContainer__Cta__2f_3z\",\"PostDetail\":\"PostDetail_PostDetail__1Nu1K\",\"PostDetail__Header\":\"PostDetail_PostDetail__Header__Ml6UA\",\"PostDetail__Header__Title\":\"PostDetail_PostDetail__Header__Title__19TDz\",\"PostDetail__Header__TimeContainer\":\"PostDetail_PostDetail__Header__TimeContainer__3fx_7\",\"PostDetail__Header__TimeContainer__Time\":\"PostDetail_PostDetail__Header__TimeContainer__Time__1e5Zn\",\"PostDetail__Header__TimeContainer__Tooltip\":\"PostDetail_PostDetail__Header__TimeContainer__Tooltip__VFGDW\",\"PostDetail__Body\":\"PostDetail_PostDetail__Body__3sYxv\",\"PostDetail__Cta\":\"PostDetail_PostDetail__Cta__3TyUG\",\"PostComments\":\"PostDetail_PostComments__3nfQp\",\"PostComments__Overflow\":\"PostDetail_PostComments__Overflow__3AU-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"CourseSection_Section__Ombex\",\"Section__Container\":\"CourseSection_Section__Container__3kJ7L\",\"Section__Title\":\"CourseSection_Section__Title__Rvn6k\",\"Section__List\":\"CourseSection_Section__List__3TuXr\",\"Section__ListItem\":\"CourseSection_Section__ListItem__13all\",\"Section__ListButton\":\"CourseSection_Section__ListButton__3yxjA\",\"Section__ListIcon\":\"CourseSection_Section__ListIcon__22zxj\",\"BackMenu__Button\":\"CourseSection_BackMenu__Button__3rQqm\",\"BackMenu__Icon\":\"CourseSection_BackMenu__Icon__2X1Gm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__8hhXz\",\"Login__Overlay\":\"Login_Login__Overlay__19ljM\",\"Login__Overlay__Active\":\"Login_Login__Overlay__Active__2bu8L\",\"Login__Form__Header\":\"Login_Login__Form__Header__27Ya-\",\"Login__Form__Cta\":\"Login_Login__Form__Cta__2kYBq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__33_3H\",\"ValidationError\":\"Input_ValidationError__2pc14\",\"InputElement\":\"Input_InputElement__3fJpg\",\"InputElement__Label\":\"Input_InputElement__Label__MBVIA\",\"InputElement__Label__White\":\"Input_InputElement__Label__White__-pI0N\",\"Invalid\":\"Input_Invalid___ukaQ\",\"SelectElement\":\"Input_SelectElement__2yDds\",\"TextArea\":\"Input_TextArea__AKigj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signup\":\"Signup_Signup__2iv-d\",\"Signup__Close\":\"Signup_Signup__Close__2NAjI\",\"Signup__Active\":\"Signup_Signup__Active__1YWzu\",\"Signup__Form__Header\":\"Signup_Signup__Form__Header__3cclz\",\"Signup__Form__Cta\":\"Signup_Signup__Form__Cta__2s-An\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__qSaZ5\",\"ButtonDanger\":\"Button_ButtonDanger__2lf_c\",\"ButtonSecondary\":\"Button_ButtonSecondary__3kREg\",\"ButtonSmall\":\"Button_ButtonSmall__ixOdS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Question\":\"Question_Question__M_BEt\",\"Question__Number\":\"Question_Question__Number__3CjuU\",\"Question__Text\":\"Question_Question__Text__15Zif\",\"Question__Text__CaseIcon\":\"Question_Question__Text__CaseIcon__1CtNV\",\"Question__Choices\":\"Question_Question__Choices__EBpeL\",\"Question__Cta\":\"Question_Question__Cta__2C_n1\",\"Question__Select\":\"Question_Question__Select__sGY3u\",\"Question__Select__Icon\":\"Question_Question__Select__Icon__WpIF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RequestPasswordReset\":\"RequestPasswordReset_RequestPasswordReset__2GoWD\",\"RequestPasswordReset__Header\":\"RequestPasswordReset_RequestPasswordReset__Header__1FYr6\",\"RequestPasswordReset__Cta\":\"RequestPasswordReset_RequestPasswordReset__Cta__2B-Ta\",\"RequestPasswordReset__Link\":\"RequestPasswordReset_RequestPasswordReset__Link__3wgvP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseNavigationItem\":\"CourseNavigationItem_CourseNavigationItem__ZNQKJ\",\"CourseNavigationItem__Icon\":\"CourseNavigationItem_CourseNavigationItem__Icon__2OA5I\",\"CourseNavigationItem__Text\":\"CourseNavigationItem_CourseNavigationItem__Text__3p5p4\",\"CourseNavigationItem__Active\":\"CourseNavigationItem_CourseNavigationItem__Active__3mcAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__1CAq4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseInfo\":\"CourseInfo_CourseInfo__2ZW62\",\"CourseInfo__Image\":\"CourseInfo_CourseInfo__Image__1_0vi\",\"CourseInfo__Body\":\"CourseInfo_CourseInfo__Body__3MouM\",\"CourseInfo__Faculty\":\"CourseInfo_CourseInfo__Faculty__3E-7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreatePost\":\"CreatePost_CreatePost__39sD3\",\"CreatePost__Header\":\"CreatePost_CreatePost__Header__2hCZW\",\"CreatePost__Body\":\"CreatePost_CreatePost__Body__EeGBx\",\"CreatePost__Cta\":\"CreatePost_CreatePost__Cta__3wQVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreatePostComment\":\"CreatePostComment_CreatePostComment__3UeLY\",\"CreatePostComment__Close\":\"CreatePostComment_CreatePostComment__Close__1l-MA\",\"CreatePostComment__Header\":\"CreatePostComment_CreatePostComment__Header__1-Ax1\",\"CreatePostComment__Form\":\"CreatePostComment_CreatePostComment__Form__H8eHw\",\"CreatePostComment__Form__Cta\":\"CreatePostComment_CreatePostComment__Form__Cta__M7Bgw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContainer\":\"Modal_ModalContainer__mFr40\",\"scaleUp\":\"Modal_scaleUp__1RpLs\",\"ModalContainer__Closed\":\"Modal_ModalContainer__Closed__3KrAY\",\"scaleDown\":\"Modal_scaleDown__1Fk0U\",\"Modal\":\"Modal_Modal__1Wmue\",\"ModalContent\":\"Modal_ModalContent__1oenz\",\"ModalContent__Header\":\"Modal_ModalContent__Header__3dVce\",\"ModalContent__Text\":\"Modal_ModalContent__Text__3ZtvH\",\"ModalContent__Text__Icon\":\"Modal_ModalContent__Text__Icon__2P8n0\",\"ModalClose\":\"Modal_ModalClose__37IBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseSubSection\":\"CourseSubSection_CourseSubSection__1afpK\",\"CourseSubSection__Header\":\"CourseSubSection_CourseSubSection__Header__1UY0F\",\"CourseSubSection__Cta\":\"CourseSubSection_CourseSubSection__Cta__2VzXv\",\"CourseSubSection__ButtonIcon\":\"CourseSubSection_CourseSubSection__ButtonIcon__1OjcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizEnd\":\"QuizEnd_QuizEnd__pi91Q\",\"QuizEnd__Header\":\"QuizEnd_QuizEnd__Header__1vRuf\",\"QuizEnd__Content\":\"QuizEnd_QuizEnd__Content__2Ahnt\",\"QuizEnd__Content__Text\":\"QuizEnd_QuizEnd__Content__Text__nlYc5\",\"QuizEnd__Content__Visual\":\"QuizEnd_QuizEnd__Content__Visual__2aRAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuestionResult\":\"QuestionResult_QuestionResult__JDBV-\",\"QuestionResult__QuestionNumber\":\"QuestionResult_QuestionResult__QuestionNumber__9o85h\",\"QuestionResult__Icon\":\"QuestionResult_QuestionResult__Icon__2tBlv\",\"QuestionResult__Icon__Correct\":\"QuestionResult_QuestionResult__Icon__Correct__36fE7\",\"QuestionResult__Icon__Incorrect\":\"QuestionResult_QuestionResult__Icon__Incorrect__2i2es\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PasswordReset\":\"PasswordReset_PasswordReset__1hlT0\",\"PasswordReset__Header\":\"PasswordReset_PasswordReset__Header__2WYsr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseList\":\"CourseList_CourseList__111-s\",\"CourseList__Header\":\"CourseList_CourseList__Header__3Bzrp\",\"CourseList__Content\":\"CourseList_CourseList__Content__2GnPI\",\"CourseList__Loader\":\"CourseList_CourseList__Loader__1pKHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RadioGroup\":\"RadioButton_RadioGroup__2prVZ\",\"RadioButton\":\"RadioButton_RadioButton__2QDj7\",\"RadioButton__Input\":\"RadioButton_RadioButton__Input__31MCn\",\"RadioButton__Label\":\"RadioButton_RadioButton__Label__2u2Iu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1F-d8\",\"Link\":\"NavigationItem_Link__3HKbF\",\"ActiveLink\":\"NavigationItem_ActiveLink__gNuSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorDialogueContainer\":\"ErrorDialogue_ErrorDialogueContainer__3xOxv\",\"ErrorDialogue\":\"ErrorDialogue_ErrorDialogue__1nJWb\",\"ErrorDialogueCallToAction\":\"ErrorDialogue_ErrorDialogueCallToAction__2oOWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignupSuccess\":\"SignupSuccess_SignupSuccess__1bvOh\",\"SignupSuccess__Header\":\"SignupSuccess_SignupSuccess__Header__F1j0q\",\"SignupSuccess__Content\":\"SignupSuccess_SignupSuccess__Content__3r0Cb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loader_Spinner__23QMH\",\"Circular\":\"Loader_Circular__2frVK\",\"rotate\":\"Loader_rotate__GT7SS\",\"Stroke\":\"Loader_Stroke__2vI4k\",\"dash\":\"Loader_dash__1cGPD\",\"color\":\"Loader_color__FUPqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Course\":\"Course_Course__37ycC\",\"Course__Title\":\"Course_Course__Title__mJ34G\",\"Course__Loader\":\"Course_Course__Loader__1Cvci\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostComment\":\"PostComment_PostComment__3H0iq\",\"PostComment__Header\":\"PostComment_PostComment__Header__3iOoD\",\"PostComment__Content\":\"PostComment_PostComment__Content__Me0a0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseMenu__Intro\":\"CourseMenu_CourseMenu__Intro__3pZRF\",\"CourseMenu__Misc\":\"CourseMenu_CourseMenu__Misc__41BnS\",\"CourseMenu__Cta\":\"CourseMenu_CourseMenu__Cta__pako9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizIntro\":\"QuizIntro_QuizIntro__3Ksnq\",\"QuizIntro__Header\":\"QuizIntro_QuizIntro__Header__66QuW\",\"QuizIntro__Cta\":\"QuizIntro_QuizIntro__Cta__2UrQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProgressBar\":\"ProgressBar_ProgressBar__2sxAn\",\"ProgressBar__Background\":\"ProgressBar_ProgressBar__Background__ld5Fv\",\"ProgressBar__Foreground\":\"ProgressBar_ProgressBar__Foreground__3CbIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"NavigationItems_Navigation__3KlKf\",\"NavigationItems\":\"NavigationItems_NavigationItems__1tMWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseForum\":\"CourseForum_CourseForum__16vHl\",\"CourseForum__Cta\":\"CourseForum_CourseForum__Cta__GOomk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostList\":\"PostList_PostList__1Jsfc\",\"PostList__Header\":\"PostList_PostList__Header__2V7Vt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paginator\":\"Paginator_Paginator__21bjJ\",\"ItemPerPage\":\"Paginator_ItemPerPage__2JkCE\",\"PaginatorButtons\":\"Paginator_PaginatorButtons__2pXcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectInputWrapper\":\"SelectInput_SelectInputWrapper__3X4YQ\",\"SelectInput\":\"SelectInput_SelectInput__20z7y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PrevButton\":\"PrevButton_PrevButton__2HMrF\",\"ArrowIcon\":\"PrevButton_ArrowIcon__1sQoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NextButton\":\"NextButton_NextButton__2w2CS\",\"ArrowIcon\":\"NextButton_ArrowIcon__R1a9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"QuizContainer_Quiz__3Ie5O\",\"Quiz__Exit\":\"QuizContainer_Quiz__Exit__HLhqX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__B__Vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Authentication\":\"Authentication_Authentication__HgisT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3KQT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseNavigation\":\"CourseNavigation_CourseNavigation__2KSc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostCommentList\":\"PostCommentList_PostCommentList__7-hhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectOptions\":\"Options_SelectOptions__iz722\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Option\":\"Option_Option__2N2st\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaginationRange\":\"PaginationRange_PaginationRange__n06iZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizContent\":\"QuizContent_QuizContent__1Pp0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuccessCheck\":\"SuccessCheck_SuccessCheck__2rhJu\"};","module.exports = __webpack_public_path__ + \"static/media/spine.303de4cf.jpg\";","var map = {\n\t\"./failure_cross\": 121,\n\t\"./failure_cross.json\": 121,\n\t\"./success_check\": 122,\n\t\"./success_check.json\": 122\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 216;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.scss';\r\n\r\nconst NavigationItem = (props) => {\r\n    return (\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink\r\n                className={classes.Link}\r\n                activeClassName={classes.ActiveLink}\r\n                exact={props.exact}\r\n                to={props.to}>{props.children}</NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default NavigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.scss';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = (props) => {\r\n    let navList = (\r\n        <>\r\n            <NavigationItem exact to=\"/\">Home</NavigationItem>\r\n            <NavigationItem exact to=\"/courses\">Courses</NavigationItem>\r\n            <NavigationItem exact to=\"/about\">About us</NavigationItem>\r\n            <NavigationItem exact to=\"/contact\">Contact</NavigationItem>\r\n            \r\n            { props.isAuth ?\r\n                <NavigationItem exact to=\"/logout\">Logout</NavigationItem> :\r\n                <NavigationItem exact to=\"/auth\">Sign in</NavigationItem>\r\n            }\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <nav className={classes.Navigation}>\r\n            <ul className={classes.NavigationItems}>\r\n                {navList}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavigationItems;","import React, { Component } from 'react';\r\n\r\nimport classes from './Toolbar.module.scss';\r\n// import Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\n\r\nclass Toolbar extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className={classes.Toolbar}>\r\n                <NavigationItems isAuth={this.props.isAuth} status={this.props.userStatus} />\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toolbar;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\n\r\nconst Layout = (props) => {\r\n    const testStyle = {\r\n        marginTop: '5rem'\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Toolbar isAuth={props.isAuthenticated} />\r\n\r\n            <div style={testStyle}>\r\n                {props.children}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Layout);","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://glacial-garden-54072.herokuapp.com/api/auth'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axiosAuth from '../../axiosUtility/axios-auth';\r\n\r\nexport const signupStart = () => {\r\n    return {\r\n        type: actionTypes.SIGNUP_START\r\n    };\r\n};\r\n\r\nexport const signupSuccess = () => {\r\n    return {\r\n        type: actionTypes.SIGNUP_SUCCESS,\r\n        path: '/auth/signup-success'\r\n    };\r\n};\r\n\r\nexport const signupFail = (error) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const signupRedirect = () => {\r\n    return {\r\n        type: actionTypes.SIGNUP_REDIRECT\r\n    };\r\n};\r\n\r\nexport const signup = (userData) => {\r\n    return dispatch => {\r\n        dispatch(signupStart());\r\n\r\n        axiosAuth.post('/signup', userData).then(response => {\r\n            dispatch(signupSuccess());\r\n        }).catch(error => {\r\n            dispatch(signupFail(error.response.data.message));\r\n        });\r\n    };\r\n};\r\n\r\nexport const authTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if(token === null){\r\n            dispatch(logout());\r\n        }\r\n        else \r\n        {\r\n            const expirationDate = new Date(localStorage.getItem('expirationTime'));\r\n            if(expirationDate > new Date()){\r\n                const userId = localStorage.getItem('userId');\r\n\r\n                const response = await axiosAuth.get(`/${userId}`);\r\n                const status = response.data.user.status;\r\n                const email = response.data.user.email;\r\n\r\n                dispatch(loginSuccess(token, userId, email, status));\r\n                dispatch(authTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            } else {\r\n                dispatch(logout());\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const loginStart = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_START\r\n    };\r\n}\r\n\r\nexport const loginSuccess = (token, userId, email, status) => {\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        token: token,\r\n        userId: userId,\r\n        email: email,\r\n        path: '/',\r\n        status: status\r\n    };\r\n};\r\n\r\nexport const loginFail = (error) => {\r\n    return {\r\n        type: actionTypes.LOGIN_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const login = (userData) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n\r\n        axiosAuth.post('/login', userData).then(response => {\r\n            const expirationTime = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n\r\n            localStorage.setItem(\"userId\", response.data.userId);\r\n            localStorage.setItem(\"token\", response.data.token);\r\n            localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n            dispatch(loginSuccess(response.data.token, response.data.userId, response.data.email, response.data.status));\r\n            dispatch(authTimeout(+response.data.expiresIn));\r\n        }).catch(error => {\r\n            dispatch(loginFail(error.response.data.message));\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    return {\r\n        type: actionTypes.LOGOUT\r\n    }\r\n}\r\n\r\nexport const passwordResetRequestStart = () => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_REQUEST_START\r\n    };\r\n};\r\n\r\nexport const passwordResetRequestSuccess = () => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_REQUEST_SUCCESS,\r\n        path: '/'\r\n    };\r\n};\r\n\r\nexport const passwordResetRequestFail = (error) => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_REQUEST_FAIL,\r\n        error: error,\r\n        path: '/auth/reset-password'\r\n    };\r\n};\r\n\r\nexport const passwordResetRequest = (email) => {\r\n    return dispatch => {\r\n        dispatch(passwordResetRequestStart());\r\n\r\n        axiosAuth.post('/password-reset-request', { email }).then(result => {\r\n            dispatch(passwordResetRequestSuccess());\r\n        }).catch(error => {\r\n            dispatch(passwordResetRequestFail(error.response.data.message));\r\n        });\r\n    };\r\n};\r\n\r\n\r\n// TODO\r\nexport const resetPasswordStart = () => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_START\r\n    };\r\n};\r\n\r\nexport const resetPasswordSuccess = () => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_SUCCESS,\r\n        path: '/'\r\n    };\r\n}\r\n\r\nexport const resetPasswordFail = (error) => {\r\n    return {\r\n        type: actionTypes.PASSWORD_RESET_FAIL,\r\n        error: error,\r\n        path: '/auth/reset-password'\r\n    };\r\n}\r\n\r\nexport const resetPassword = (formData) => {\r\n    return dispatch => {\r\n        dispatch(resetPasswordStart());\r\n\r\n        const data = {\r\n            password: formData.password,\r\n            token: formData.token\r\n        };\r\n\r\n        axiosAuth.put('/password-reset', data).then(response => {\r\n            dispatch(resetPasswordSuccess());\r\n        }).catch(error => {\r\n            dispatch(resetPasswordFail(error.response.data.message));\r\n        });\r\n    }\r\n}","export const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const SIGNUP_REDIRECT = 'SIGNUP_REDIRECT';\r\n\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const PASSWORD_RESET_REQUEST_START = 'PASSWORD_RESET_REQUEST_START';\r\nexport const PASSWORD_RESET_REQUEST_SUCCESS = 'PASSWORD_RESET_REQUEST_SUCCESS';\r\nexport const PASSWORD_RESET_REQUEST_FAIL = 'PASSWORD_RESET_REQUEST_FAIL';\r\n\r\nexport const PASSWORD_RESET_START = 'PASSWORD_RESET_START';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\n\r\nexport const LOGOUT = 'LOGOUT';","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from './Backdrop.module.scss';\r\n\r\nconst Backdrop = (props) => \r\n    ReactDOM.createPortal(\r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}/> : null,\r\n        document.getElementById('backdrop-root')\r\n    );\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from './ErrorDialogue.module.scss';\r\nimport Backdrop from '../UI/Backdrop/Backdrop';\r\n\r\nconst ErrorDialogue = (props) => {\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            props.show ? (\r\n                <div className={classes.ErrorDialogueContainer}>\r\n                    <Backdrop show={props.show} />\r\n                    <div className={classes.ErrorDialogue}>\r\n                        <p>{props.errorMessage || \"Something went wrong\"}</p>\r\n                        <div className={classes.ErrorDialogueCallToAction}>\r\n                            <button onClick={props.closed}>Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>) : null,\r\n            document.getElementById('error-root')\r\n        )\r\n    );\r\n}  \r\n\r\nexport default ErrorDialogue;","import React from 'react';\r\n\r\nimport classes from './Input.module.scss';\r\n\r\nconst Input = (props) => {\r\n    let inputElement = null;\r\n    let inputClasses = [classes.InputElement];\r\n    let validationError = '';\r\n\r\n    if (!props.isValid && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n        if(props.value !== ''){\r\n            validationError = 'Please enter a valid value';\r\n        }\r\n        else {\r\n            validationError = 'This field is required';\r\n        }\r\n    }\r\n\r\n    switch(props.elementType) {\r\n        case 'input':\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}\r\n            />;\r\n            break;\r\n        case 'textarea':\r\n            inputClasses.push(classes.TextArea)\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}\r\n            />;\r\n            break;\r\n        case 'select':\r\n            inputElement =  <select \r\n                className={classes.SelectElement} \r\n                value={props.value} \r\n                onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    ))}\r\n            </select>\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    let labelClassList = [classes.InputElement__Label];\r\n\r\n    if (props.labelColor === 'white') {\r\n        labelClassList = [classes.InputElement__Label, classes.InputElement__Label__White];\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.Input}>\r\n            <p className={classes.ValidationError}>{validationError}</p>\r\n            {inputElement}\r\n            <label className={labelClassList.join(' ')}>{props.label}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isEnglishOnly) {\r\n        const pattern = /^[a-zA-Z]+$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nexport default checkValidity;","import React, { useState } from 'react';\r\n\r\nimport classes from './Login.module.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport formValidation from '../../../utility/formValidation';\r\n\r\nconst Login = (props) => {\r\n    const [formControls, setFormControls] = useState({\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'E-mail'\r\n            },\r\n            label: \"E-mail\",\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            label: \"Password\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        }\r\n    });\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    let overlayClassList = [classes.Login__Overlay];\r\n\r\n    if (props.isSignupMode) {\r\n        overlayClassList = [classes.Login__Overlay, classes.Login__Overlay__Active];\r\n    }\r\n\r\n    const inputChangedHandler = (event, formControl) => {\r\n        const copiedFormControls = { ...formControls };\r\n\r\n        const copiedFormControl = { ...copiedFormControls[formControl] };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        copiedFormControls[formControl] = copiedFormControl;\r\n\r\n        // Set the validiity of the form\r\n        let formValid = true;\r\n        Object.keys(copiedFormControls).forEach(formCtrl => {\r\n            formValid = formValid && copiedFormControls[formCtrl].valid;\r\n        });\r\n\r\n        setFormIsValid(formValid);\r\n        setFormControls(copiedFormControls);\r\n    }\r\n\r\n    const onLoginFormSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const loginForm = {\r\n            email: formControls.email.value,\r\n            password: formControls.password.value\r\n        }\r\n\r\n        if(formIsValid) {\r\n            props.loginFormSubmit(loginForm);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Login}>\r\n            <span className={overlayClassList.join(' ')}></span>\r\n\r\n            <div className={classes.Login__Form}>\r\n                <h2 className={classes.Login__Form__Header}>\r\n                    Account Login\r\n                </h2>\r\n\r\n                <div className={classes.Login__Form__Fields}>\r\n                    {Object.keys(formControls).map(formControl => {\r\n                        return <Input\r\n                            key={formControl}\r\n                            elementType={formControls[formControl].elementType}\r\n                            elementConfig={formControls[formControl].elementConfig}\r\n                            label={formControls[formControl].label}\r\n                            value={formControls[formControl].value}\r\n                            touched={formControls[formControl].touched}\r\n                            isValid={formControls[formControl].valid}\r\n                            changed={(event) => inputChangedHandler(event, formControl)}\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n                <div className={classes.Login__Form__Cta}>\r\n                    <span onClick={props.forgotPasswordClicked}>\r\n                        Forgot your password?\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={classes.Login__Form__Cta}>\r\n                    <button disabled={!formIsValid} onClick={onLoginFormSubmitHandler}>Login</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\n\r\nimport classes from './Signup.module.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport formValidation from '../../../utility/formValidation';\r\n\r\nconst Signup = (props) => {\r\n    const [formControls, setFormControls] = useState({\r\n        firstName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'First Name'\r\n            },\r\n            label: \"First Name\",\r\n            validation: {\r\n                required: true,\r\n                isEnglishOnly: true,\r\n                minLength: 3\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        lastName: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Last Name'\r\n            },\r\n            label: \"Last Name\",\r\n            validation: {\r\n                required: true,\r\n                isEnglishOnly: true,\r\n                minLength: 3\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'E-mail'\r\n            },\r\n            label: \"E-mail\",\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            label: \"Password\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        }\r\n    });\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    let classList = [classes.Signup];\r\n\r\n    if (props.isSignupMode) {\r\n        classList = [classes.Signup, classes.Signup__Active];\r\n    }\r\n\r\n    const inputChangedHandler = (event, formControl) => {\r\n        const copiedFormControls = { ...formControls };\r\n\r\n        const copiedFormControl = { ...copiedFormControls[formControl] };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        copiedFormControls[formControl] = copiedFormControl;\r\n\r\n        // Set the validiity of the form\r\n        let formValid = true;\r\n        Object.keys(copiedFormControls).forEach(formCtrl => {\r\n            formValid = formValid && copiedFormControls[formCtrl].valid;\r\n        });\r\n\r\n        setFormIsValid(formValid);\r\n        setFormControls(copiedFormControls);\r\n    }\r\n\r\n    const onSignupFormSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const signupForm = {\r\n            firstName: formControls.firstName.value,\r\n            lastName: formControls.lastName.value,\r\n            email: formControls.email.value,\r\n            password: formControls.password.value\r\n        }\r\n\r\n        if(formIsValid) {\r\n            props.signupFormSubmit(signupForm);\r\n        }\r\n    }\r\n\r\n    const resetForm = () => {\r\n        const copiedFormControls = { ...formControls };\r\n        let copiedFormControl;\r\n\r\n        Object.keys(copiedFormControls).forEach(formControl => {\r\n            copiedFormControl = { ...copiedFormControls[formControl] };\r\n\r\n            copiedFormControl.valid = false;\r\n            copiedFormControl.touched = false;\r\n            copiedFormControl.value = '';\r\n\r\n            copiedFormControls[formControl] = copiedFormControl;\r\n        });\r\n\r\n        setFormControls(copiedFormControls);\r\n        setFormIsValid(false);\r\n    }\r\n\r\n    const onSignupOpened = (event) => {\r\n        resetForm();\r\n\r\n        props.closeSignupPanel(event, false);\r\n    }\r\n\r\n    return (\r\n        <div className={classList.join(' ')} onClick={(event) => props.openSignupPanel(event, true)}>\r\n            <span className={classes.Signup__Close} onClick={(event) => onSignupOpened(event)}></span>\r\n            \r\n            <div className={classes.Signup__Form}>\r\n                <h2 className={classes.Signup__Form__Header}>\r\n                    Create Account\r\n                </h2>\r\n\r\n                <div className={classes.Signup__Form__Fields}>\r\n                    {Object.keys(formControls).map(formControl => {\r\n                        return <Input\r\n                            key={formControl}\r\n                            elementType={formControls[formControl].elementType}\r\n                            elementConfig={formControls[formControl].elementConfig}\r\n                            label={formControls[formControl].label}\r\n                            value={formControls[formControl].value}\r\n                            touched={formControls[formControl].touched}\r\n                            isValid={formControls[formControl].valid}\r\n                            changed={(event) => inputChangedHandler(event, formControl)}\r\n                            labelColor='white'\r\n                        />\r\n                    })}\r\n                </div>\r\n\r\n                <div className={classes.Signup__Form__Cta}>\r\n                    <button disabled={!formIsValid} onClick={onSignupFormSubmitHandler}>Register</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { signupRedirect } from '../../../store/actions/index';\r\nimport classes from './SignupSuccess.module.scss';\r\n\r\nconst SignupSuccess = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(signupRedirect());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={classes.SignupSuccess}>\r\n            <h2 className={classes.SignupSuccess__Header}>\r\n                Signup Success!\r\n            </h2>\r\n\r\n            <div className={classes.SignupSuccess__Content}>\r\n                Press <Link to=\"/auth\">here</Link> to login!\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupSuccess;","import React from 'react';\r\n\r\nimport classes from './Button.module.scss';\r\n\r\nconst Button = (props) => {\r\n    let classList = [classes.Button];\r\n\r\n    switch(props.btnType) {\r\n        case 'BtnPrimary':\r\n            classList = [classes.Button, classes.ButtonPrimary];\r\n            break;\r\n        case 'BtnDanger':\r\n            classList = [classes.Button, classes.ButtonDanger];\r\n            break;\r\n        case 'BtnSecondary':\r\n            classList = [classes.Button, classes.ButtonSecondary];\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if (props.btnSize && props.btnSize === 'BtnSmall') {\r\n        classList.push(classes.ButtonSmall);\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className={classList.join(' ')}\r\n            onClick={props.clicked}\r\n            disabled={props.disabled}>{props.children}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from './RequestPasswordReset.module.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\nimport formValidation from '../../../utility/formValidation';\r\n\r\nconst RequestPasswordReset = (props) => {\r\n    const [email, setEmail] = useState({\r\n        elementType: 'input',\r\n        elementConfig: {\r\n            type: 'text',\r\n            placeholder: 'E-mail'\r\n        },\r\n        label: \"E-mail\",\r\n        validation: {\r\n            required: true,\r\n            isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        value: ''\r\n    });\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const inputChangedHandler = (event) => {\r\n        const copiedEmailFormControl = { ...email };\r\n\r\n        copiedEmailFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formValidation(event.target.value, copiedEmailFormControl.validation);\r\n        copiedEmailFormControl.valid = isValid;\r\n        copiedEmailFormControl.touched = true;\r\n\r\n        setEmail(copiedEmailFormControl);\r\n    }\r\n\r\n    const resetFormSubmitted = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.emailFormSubmit(email.value);\r\n        setRequestSent(true);\r\n    }\r\n\r\n    let pageContent = null;\r\n    if(props.loading) {\r\n        pageContent = 'LOADING...';\r\n    } else {\r\n        if (props.reqSuccessfull && requestSent) {\r\n            pageContent = (\r\n                <>\r\n                    <h2 className={classes.RequestPasswordReset__Header}>\r\n                        We sent you an e-mail!\r\n                    </h2>\r\n                    <p>Check your e-mail and follow the instructions.</p>\r\n                    <div className={classes.RequestPasswordReset__Cta}>\r\n                        <Link to=\"/\" className={classes.RequestPasswordReset__Link}>Home</Link>\r\n                    </div>\r\n                </>\r\n            );\r\n        } else {\r\n            pageContent = (\r\n                <>\r\n                    <h2 className={classes.RequestPasswordReset__Header}>\r\n                        Reset Password\r\n                    </h2>\r\n\r\n                    <form onSubmit={resetFormSubmitted} className={classes.RequestPasswordReset__Body}>\r\n                        <Input\r\n                            elementType={email.elementType}\r\n                            elementConfig={email.elementConfig}\r\n                            label={email.label}\r\n                            value={email.value}\r\n                            touched={email.touched}\r\n                            isValid={email.valid}\r\n                            changed={inputChangedHandler}\r\n                        />\r\n\r\n                        <Button disabled={!email.valid}>Continue</Button>\r\n                    </form>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.RequestPasswordReset}>\r\n            {pageContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestPasswordReset;","import React, { useState } from 'react';\r\n\r\nimport classes from './PasswordReset.module.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\nimport formValidation from '../../../utility/formValidation';\r\n\r\nconst PasswordReset = (props) => {\r\n    const [resetFormControls, setResetFormControls] = useState({\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            label: \"Password\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        passwordRepeat: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Verify Password'\r\n            },\r\n            label: \"Verify Password\",\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        }\r\n    });\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n    let token = props.location.pathname.split('/').slice(-1).join('');\r\n\r\n    const inputChangedHandler = (event, inputName) => {\r\n        const copiedFormControls = { ...resetFormControls };\r\n\r\n        const copiedFormControl = { ...copiedFormControls[inputName] };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Also check validity & mark it as touched\r\n        let isValid = formValidation(event.target.value, copiedFormControl.validation);\r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        copiedFormControls[inputName] = copiedFormControl;\r\n\r\n        // Set the validiity of the form\r\n        let formIsValid = true;\r\n        Object.keys(copiedFormControls).forEach(formControl => {\r\n            formIsValid = formIsValid && copiedFormControls[formControl].valid;\r\n        });\r\n        formIsValid = formIsValid && copiedFormControls.password.value === copiedFormControls.passwordRepeat.value;\r\n\r\n        setFormValid(formIsValid);\r\n        setResetFormControls(copiedFormControls);\r\n    }\r\n\r\n    const passwordResetFormSubmitted = (event) => {\r\n        event.preventDefault();\r\n\r\n        const passwordResetForm = {\r\n            password: resetFormControls.password.value,\r\n            passwordVerify: resetFormControls.passwordRepeat.value,\r\n            token: token\r\n        };\r\n        \r\n        props.resetFormSubmit(passwordResetForm);\r\n    }\r\n\r\n    let formInputs = Object.keys(resetFormControls).map(formControl => {\r\n        return <Input \r\n            key={formControl}\r\n            elementType={resetFormControls[formControl].elementType}\r\n            elementConfig={resetFormControls[formControl].elementConfig}\r\n            label={resetFormControls[formControl].label}\r\n            value={resetFormControls[formControl].value}\r\n            touched={resetFormControls[formControl].touched}\r\n            isValid={resetFormControls[formControl].valid}\r\n            changed={(event) => inputChangedHandler(event, formControl)}\r\n        />;\r\n    });\r\n\r\n    let pageContent = null;\r\n    if(props.loading) {\r\n        pageContent = 'LOADING...';\r\n    } else if(props.path === '/') {\r\n        pageContent = <p className={classes.ResetedPasswordHeader}>Successfully changed your password</p>;\r\n    } else {\r\n        pageContent = (\r\n            <>\r\n                <h2 className={classes.PasswordReset__Header}>\r\n                    Enter your new password\r\n                </h2>\r\n                \r\n                <form onSubmit={passwordResetFormSubmitted} className={classes.PasswordReset__Form}>\r\n                    {formInputs}\r\n                    <Button disabled={!formValid}>Reset</Button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.PasswordReset}>\r\n            {pageContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordReset;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../store/actions/index';\r\n\r\nimport classes from './Authentication.module.scss';\r\nimport ErrorDialogue from '../../components/ErrorDialogue/ErrorDialogue';\r\nimport Login from '../../components/Auth/Login/Login';\r\nimport Signup from '../../components/Auth/Signup/Signup';\r\nimport SignupSuccess from '../../components/Auth/SignupSuccess/SignupSuccess';\r\nimport RequestPasswordReset from '../../components/Auth/RequestPasswordReset/RequestPasswordReset';\r\nimport PasswordRest from '../../components/Auth/PasswordReset/PasswordReset';\r\n\r\nclass Authentication extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showError: false,\r\n            signupMode: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.redirectPath !== this.props.redirectPath && prevProps.signupSuccess !== this.props.signupSuccess &&\r\n            this.props.redirectPath === '/auth/signup-success') {\r\n            this.setState({\r\n                signupMode: false\r\n            });\r\n\r\n            // SIGNUP SUCCESSFULL\r\n            this.props.history.push(this.props.redirectPath);\r\n        }\r\n\r\n        // Check if there is an error\r\n        if(prevProps.error !== this.props.error && this.props.error !== null) {\r\n            this.setState({\r\n                showError: true\r\n            });\r\n        }\r\n    }\r\n\r\n    onCloseErrorDialogueHandler = () => {\r\n        this.setState({\r\n            showError: false\r\n        });\r\n    }\r\n\r\n    onSignupClosedHandler = (event, toggle) => {\r\n        event.stopPropagation();\r\n\r\n        this.setState({\r\n            signupMode: toggle\r\n        });\r\n    }\r\n\r\n    onForgotPasswordClickedHandler = () => {\r\n        this.props.history.push(this.props.match.url + '/password-reset');\r\n    }\r\n\r\n    onLoginFormSubmittedHandler = (formData) => {\r\n        this.props.login(formData);\r\n    }\r\n\r\n    onSignupFormSubmittedHandler = (formData) => {\r\n        this.props.signup(formData);\r\n    }\r\n\r\n    onEmailFormSubmitted = (email) => {\r\n        this.props.requestPasswordReset(email);\r\n    }\r\n\r\n    onPasswordResetFormSubmitHandler = (formData) => {\r\n        this.props.resetPassword(formData);\r\n    }\r\n\r\n    render() {\r\n        let content = null;\r\n\r\n        if (this.props.isAuthenticated) {\r\n            // Login successfull\r\n            content = <Redirect to='/' />;\r\n        } else {\r\n            content = (\r\n                <Switch>\r\n                    <Route path={this.props.match.url + '/signup-success'} exact render={() => <SignupSuccess />} />\r\n\r\n                    <Route path={this.props.match.url + '/password-reset'} exact render={() =>\r\n                        <RequestPasswordReset\r\n                            emailFormSubmit={this.onEmailFormSubmitted}\r\n                            loading={this.props.loading}\r\n                            reqSuccessfull={!this.state.showError && !this.props.error} />} />\r\n    \r\n                    <Route path={this.props.match.url + '/password-reset/:token'} exact render={() =>\r\n                        <PasswordRest\r\n                            {...this.props}\r\n                            resetFormSubmit={this.onPasswordResetFormSubmitHandler}\r\n                            loading={this.props.loading}\r\n                            reqSuccessfull={!this.state.showError && !this.props.error}\r\n                            path={this.props.redirectPath} />} />\r\n                    \r\n                    <Route path={this.props.match.url} exact render={() => {\r\n                        return <div className={classes.Authentication} style={this.state.signupMode ? { height: \"60rem\" } : {}}>\r\n                            <Login\r\n                                isSignupMode={this.state.signupMode}\r\n                                forgotPasswordClicked={this.onForgotPasswordClickedHandler}\r\n                                loginFormSubmit={this.onLoginFormSubmittedHandler}\r\n                            />\r\n    \r\n                            <Signup\r\n                                isSignupMode={this.state.signupMode}\r\n                                openSignupPanel={this.onSignupClosedHandler}\r\n                                closeSignupPanel={this.onSignupClosedHandler}\r\n                                signupFormSubmit={this.onSignupFormSubmittedHandler}\r\n                            />\r\n                        </div>;\r\n                    }} />\r\n                </Switch>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ErrorDialogue\r\n                    show={this.state.showError}\r\n                    errorMessage={this.props.error}\r\n                    closed={this.onCloseErrorDialogueHandler}\r\n                />\r\n\r\n                {content}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.isLoading,\r\n        error: state.error,\r\n        token: state.token,\r\n        isAuthenticated: state.isAuth,\r\n        redirectPath: state.redirectPath,\r\n        signupSuccess: state.successfullSignup\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: (formData) => dispatch(actions.login(formData)),\r\n        signup: (formData) => dispatch(actions.signup(formData)),\r\n        requestPasswordReset: (email) => dispatch(actions.passwordResetRequest(email)),\r\n        resetPassword: (formData) => dispatch(actions.resetPassword(formData))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);","import React from 'react';\r\n\r\nimport classes from './Loader.module.scss';\r\n\r\nconst Loader = (props) => {\r\n    return (\r\n        <div className={classes.Spinner}>\r\n            <svg className={classes.Circular} viewBox=\"25 25 50 50\">\r\n                <circle className={classes.Stroke} cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth={props.strokeWidth} />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://glacial-garden-54072.herokuapp.com/api/course'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport classes from './CourseListElement.module.scss';\r\nimport svg from '../../../assets/images/sprite.svg';\r\n\r\nconst CourseListElement = (props) => {\r\n    let colors_light = ['rgba(255, 87, 129, 0.15)', 'rgba(255, 185, 0, 0.15)', 'rgba(41, 152, 255, 0.15)'];\r\n    let colors_dark = ['rgba(186, 38, 93, 0.3)', 'rgba(206, 98, 40, 0.3)', 'rgba(86, 67, 250, 0.3)'];\r\n\r\n    let image = require('../../../assets/images/spine.jpg');\r\n    let style = {\r\n        backgroundImage: `linear-gradient(to bottom, ${colors_light[props.index % 3]}, ${colors_dark[props.index % 3]}), url(${image})`\r\n    }\r\n\r\n    let courseData = props.data;\r\n\r\n    return (\r\n        <div className={classes.CourseListElement}>\r\n            <div className={[classes.CourseListElement__Side, classes.CourseListElement__Side__Front].join(' ')}>\r\n                <div className={classes.CourseListElement__Picture} style={style}>\r\n                    &nbsp;\r\n                </div>\r\n                <div className={classes.CourseListElement__Content}>\r\n                    <h4 className={[classes.CourseListElement__Heading, classes[`CourseListElement__Heading__${props.index % 3 + 1}`]].join(' ')}>\r\n                        {courseData.name}\r\n                    </h4>\r\n                    <div className={classes.CourseListElement__Description}>\r\n                        <h2>Faculty</h2>\r\n                        <ul className={classes.CourseListElement__Description__FacultyList}>\r\n                            {courseData.landing.faculty.map(faculty => {\r\n                                return <li key={faculty._id} className={[classes.CourseListElement__Description__FacultyList__Item, classes[`CourseListElement__Description__FacultyList__Item__${props.index % 3 + 1}`]].join(' ')}>\r\n                                    {`Prof. Dr. ${faculty.firstName + ' ' + faculty.lastName}`}\r\n                                </li>;\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={[classes.CourseListElement__Side, classes.CourseListElement__Side__Back, classes[`CourseListElement__Side__Back__${props.index % 3 + 1}`]].join(' ')}>\r\n                <div className={classes.CourseListElement__Cta}>\r\n                    <button className={classes.CourseListElement__Cta__Link} onClick={props.selectCourseListElement}>\r\n                        <svg className={classes.CourseListElement__Cta__Link__Icon}>\r\n                            <use xlinkHref={`${svg}#icon-info`}></use>\r\n                        </svg>\r\n                        <span className={classes.CourseListElement__Cta__Link__Text} onClick={props.clicked}>\r\n                            More Info\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseListElement;","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './CourseList.module.scss';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport axiosCourse from '../../axiosUtility/axios-course';\r\nimport CourseListElement from './CourseListElement/CourseListElement';\r\n\r\nconst CourseList = (props) => {\r\n    const [courseList, setCourseList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axiosCourse.get('').then(response => {\r\n            setCourseList(response.data.courseList);\r\n            setIsLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    const onCourseClickedHandler = (id) => {\r\n        props.history.push(props.match.url + '/' + id)\r\n    }\r\n\r\n    let pageContent = (\r\n        <span className={classes.CourseList__Loader}>\r\n            <Loader strokeWidth={4} />\r\n        </span>\r\n    );\r\n\r\n    if (!isLoading) {\r\n        pageContent = (\r\n            <>\r\n                <header className={classes.CourseList__Header}>\r\n                    <h1>OUR COURSES</h1>\r\n                </header>\r\n            \r\n                <div className={classes.CourseList__Content}>\r\n                    { courseList.map((course, i) => {\r\n                        return <CourseListElement\r\n                            key={course._id}\r\n                            data={course}\r\n                            index={i}\r\n                            selectCourseListElement={() => onCourseClickedHandler(course._id)}\r\n                        />;\r\n                    }) }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <section className={classes.CourseList}>\r\n            {pageContent}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CourseList;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://glacial-garden-54072.herokuapp.com/api/forum'\r\n});\r\n\r\nexport default instance;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://glacial-garden-54072.herokuapp.com/api/post'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport svg from '../../../assets/images/sprite.svg';\r\nimport classes from './CourseNavigationItem.module.scss';\r\n\r\nconst CourseNavigationItem = (props) => {\r\n    let classList = [classes.CourseNavigationItem];\r\n\r\n    if (props.active) {\r\n        classList = [classes.CourseNavigationItem, classes.CourseNavigationItem__Active];\r\n    } else {\r\n        classList = [classes.CourseNavigationItem];\r\n    }\r\n\r\n    return (\r\n        <div className={classList.join(' ')} onClick={props.clicked}>\r\n            <svg className={classes.CourseNavigationItem__Icon}>\r\n                <use xlinkHref={`${svg}#icon-${props.iconName}`}></use>\r\n            </svg>\r\n\r\n            <span className={classes.CourseNavigationItem__Text}>\r\n                {props.children}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseNavigationItem;","import React from 'react';\r\n\r\nimport classes from './CourseNavigation.module.scss';\r\nimport CourseNavigationItem from './CourseNavigationItem/CourseNavigationItem';\r\n\r\nconst CourseNavigation = (props) => {\r\n    let navigationItems = props.navItemList;\r\n\r\n    let content = navigationItems.map((item, i) => {\r\n        return (<CourseNavigationItem\r\n                key={i}\r\n                iconName={item.icon}\r\n                active={item.active}\r\n                clicked={() => props.navigationItemClicked(i)}\r\n            >\r\n            {item.name}\r\n        </CourseNavigationItem>);\r\n    });\r\n\r\n    return (\r\n        <div className={classes.CourseNavigation}>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseNavigation;","import React from 'react';\r\n\r\nimport classes from './CourseInfo.module.scss';\r\n\r\nconst CourseInfo = (props) => {\r\n    return (\r\n        <div className={classes.CourseInfo}>\r\n            <div className={classes.CourseInfo__Image}>\r\n                <img src={props.landingData.image} alt=\"Landing Page Img\" />\r\n            </div>\r\n\r\n            <div className={classes.CourseInfo__Body}>\r\n                <div className={classes.CourseInfo__Info}>\r\n                    <h2>\r\n                        Course Info\r\n                    </h2>\r\n                    {props.landingData.info}\r\n                </div>\r\n\r\n                <div className={classes.CourseInfo__Faculty}>\r\n                    <h2>\r\n                        Faculty\r\n                    </h2>\r\n\r\n                    <ul>\r\n                        {(props.landingData.faculty || []).map((faculty, i) => {\r\n                            return <li key={i}>{`Prof. Dr. ${faculty.firstName} ${faculty.lastName}`}</li>;\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseInfo;","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport classes from './CreatePost.module.scss';\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\nimport checkValidity from '../../../utility/formValidation';\r\n\r\nconst CreatePost = (props) => {\r\n    const [formControls, setFormControls] = useState({\r\n        title: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Title'\r\n            },\r\n            label: \"Title\",\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        },\r\n        content: {\r\n            elementType: 'textarea',\r\n            elementConfig: {\r\n                type: 'textarea',\r\n                placeholder: 'Post Content'\r\n            },\r\n            label: \"Post Content\",\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            value: ''\r\n        }\r\n    });\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    const prePopulateFormFields = useCallback(() => {\r\n        let prePopulatedFormFields = {};\r\n\r\n        // Prepopulate the title\r\n        const copiedTitle = { ...formControls.title };\r\n\r\n        copiedTitle.value = props.editFormFields['title'];\r\n        let isTitleValid = checkValidity(props.editFormFields['title'], copiedTitle.validation);\r\n        copiedTitle.valid = isTitleValid;\r\n        copiedTitle.touched = true;\r\n\r\n        prePopulatedFormFields['title'] = {...copiedTitle};\r\n\r\n        // Prepopulate the content\r\n        const copiedContent = { ...formControls.content };\r\n\r\n        copiedContent.value = props.editFormFields['content'];\r\n        let isContentValid = checkValidity(props.editFormFields['content'], copiedContent.validation);\r\n        copiedContent.valid = isContentValid;\r\n        copiedContent.touched = true;\r\n\r\n        prePopulatedFormFields['content'] = {...copiedContent};\r\n\r\n        let formIsValid = true;\r\n        Object.keys(prePopulatedFormFields).forEach(formControl => {\r\n            formIsValid = formIsValid && prePopulatedFormFields[formControl].valid;\r\n        });\r\n\r\n        setIsFormValid(formIsValid);\r\n        setFormControls(prePopulatedFormFields);\r\n    }, [props.editFormFields, formControls.title, formControls.content]);\r\n\r\n    useEffect(() => {\r\n        if (props.isEditMode) {\r\n            prePopulateFormFields();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.isEditMode]);\r\n\r\n    const inputChangedHandler = (event, inputName) => {\r\n        event.preventDefault();\r\n\r\n        const copiedFormControls = { ...formControls };\r\n\r\n        const copiedFormControl = { ...copiedFormControls[inputName] };\r\n\r\n        copiedFormControl.value = event.target.value;\r\n\r\n        // Check validity & mark it as touched\r\n        let isValid = checkValidity(event.target.value, copiedFormControl.validation);\r\n        copiedFormControl.valid = isValid;\r\n        copiedFormControl.touched = true;\r\n\r\n        copiedFormControls[inputName] = copiedFormControl;\r\n\r\n        let formIsValid = true;\r\n        Object.keys(copiedFormControls).forEach(formControl => {\r\n            formIsValid = formIsValid && copiedFormControls[formControl].valid;\r\n        });\r\n\r\n        setIsFormValid(formIsValid);\r\n        setFormControls(copiedFormControls);\r\n    }\r\n\r\n    const createPostHandler = () => {\r\n        let formData = {\r\n            title: formControls.title.value,\r\n            content: formControls.content.value\r\n        };\r\n\r\n        props.createPost(formData);\r\n    }\r\n\r\n    const updatePostHandler = () => {\r\n        let formData = {\r\n            title: formControls.title.value,\r\n            content: formControls.content.value\r\n        };\r\n\r\n        props.editPost(formData);\r\n    }\r\n\r\n    let formFields = Object.keys(formControls).map((formControl, i) => {\r\n        return <Input\r\n            key={i}\r\n            elementType={formControls[formControl].elementType}\r\n            elementConfig={formControls[formControl].elementConfig}\r\n            label={formControls[formControl].label}\r\n            value={formControls[formControl].value}\r\n            touched={formControls[formControl].touched}\r\n            isValid={formControls[formControl].valid}\r\n            changed={(event) => inputChangedHandler(event, formControl)}\r\n        />\r\n    });\r\n\r\n    return (\r\n        <section className={classes.CreatePost}>\r\n            <header className={classes.CreatePost__Header}>\r\n                <h2>\r\n                    {!props.isEditMode ? 'Create a Post' : 'Edit the Post'}\r\n                </h2>\r\n            </header>\r\n\r\n            <div className={classes.CreatePost__Body}>\r\n                <div className={classes.CreatePost__Inputs}>\r\n                    {formFields}\r\n                </div>\r\n\r\n                <div className={classes.CreatePost__Cta}>\r\n                    {!props.isEditMode ? <Button\r\n                        btnType=\"BtnPrimary\"\r\n                        disabled={!isFormValid}\r\n                        clicked={createPostHandler}>Create</Button> :\r\n                        <Button\r\n                        btnType=\"BtnPrimary\"\r\n                        disabled={!isFormValid}\r\n                        clicked={updatePostHandler}>Update</Button>}\r\n                    <Button\r\n                        btnType=\"BtnDanger\"\r\n                        clicked={props.createPostCancel}>Cancel</Button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","import React from 'react';\r\n\r\nimport classes from './Post.module.scss';\r\n\r\nconst Post = (props) => {\r\n    const postData = props.postData;\r\n\r\n    const getPostCreateTimeDifference = (time) => {\r\n        let now = (new Date()).getTime();\r\n        let updateTime = (new Date(time)).getTime();\r\n        let difference = parseInt((now - updateTime) / 3600000 * 60);\r\n        let timeString = '';\r\n        \r\n        if(difference >= 60 && difference < 1440) {\r\n            timeString += parseInt(difference / 60) + 'h';\r\n        } else if(difference >= 1440) {\r\n            timeString += parseInt(difference / 1440) + 'd';\r\n        } else if(difference <= 0) {\r\n            timeString = '<1m';\r\n        } else {\r\n            timeString = difference + 'm';\r\n        }\r\n\r\n        return timeString;\r\n    }\r\n\r\n    return (\r\n        <tr className={classes.Post} onClick={props.postSelected}>\r\n            <td className={classes.Post__Title}>\r\n                {postData.title}\r\n            </td>\r\n\r\n            <td className={classes.Post__Author}>\r\n                {postData.author.status !== 'admin' ? postData.author.firstName + ' ' + postData.author.lastName : postData.author.firstName}\r\n            </td>\r\n\r\n            <td className={classes.Post__Replies}>\r\n                {postData.responses.length}\r\n            </td>\r\n\r\n            <td className={classes.Post__Views}>\r\n                {postData.views}\r\n            </td>\r\n\r\n            <td className={classes.Post__Activity}>\r\n                {getPostCreateTimeDifference(postData.createdAt)}\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\n\r\nimport Post from './Post/Post';\r\nimport classes from './PostList.module.scss';\r\n\r\nconst PostList = (props) => {\r\n    const postList = props.postList;\r\n\r\n    let postContent = postList.map((post) => {\r\n        return <Post\r\n            key={post._id}\r\n            postData={post}\r\n            postSelected={() => props.onPostSelected(post._id)}\r\n        />\r\n    });\r\n\r\n    return (\r\n        <table className={classes.PostList}>\r\n            <thead>\r\n                <tr className={classes.PostList__Header}>\r\n                    <th>Topic</th>\r\n                    <th>Author</th>\r\n                    <th>Replies</th>\r\n                    <th>Views</th>\r\n                    <th>Activity</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {postContent}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React from 'react';\r\n\r\nimport classes from './PostComment.module.scss';\r\n\r\nconst PostComment = (props) => {\r\n    const commentData = props.commentData;\r\n\r\n    const getPostCreateTimeDifference = (time) => {\r\n        let now = (new Date()).getTime();\r\n        let updateTime = (new Date(time)).getTime();\r\n        let difference = parseInt((now - updateTime) / 3600000 * 60);\r\n        let timeString = '';\r\n        \r\n        if(difference >= 60 && difference < 1440) {\r\n            timeString += parseInt(difference / 60) + 'h';\r\n        } else if(difference >= 1440) {\r\n            timeString += parseInt(difference / 1440) + 'd';\r\n        } else if(difference <= 0) {\r\n            timeString = '<1m';\r\n        } else {\r\n            timeString = difference + 'm';\r\n        }\r\n\r\n        return timeString;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.PostComment}>\r\n            <div className={classes.PostComment__Header}>\r\n                <span>{commentData.author.firstName + ' ' + commentData.author.lastName}</span>\r\n                <span>{getPostCreateTimeDifference(commentData.updatedAt)}</span>\r\n            </div>\r\n\r\n            <div className={classes.PostComment__Content}>\r\n                {commentData.index}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComment;","import React from 'react';\r\n\r\nimport classes from './PostCommentList.module.scss';\r\nimport PostComment from './PostComment/PostComment';\r\n\r\nconst PostCommentList = ({ commentList }) => {\r\n    return (\r\n        <div className={classes.PostCommentList}>\r\n            {commentList.sort((c1, c2) => (new Date(c2.updatedAt)).getTime() - (new Date(c1.updatedAt).getTime())).map((comment, i) => {\r\n                return <PostComment\r\n                    key={i}\r\n                    commentData={comment}\r\n                />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCommentList;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from './Modal.module.scss';\r\nimport Backdrop from '../UI/Backdrop/Backdrop';\r\n\r\nconst Modal = (props) => {\r\n    const [modalClasses, setModalClasses] = useState([classes.ModalContainer]); // KEEP IT OR LEAVE IT\r\n\r\n    useEffect(() => {\r\n        setModalClasses([classes.ModalContainer]); // KEEP IT OR LEAVE IT\r\n    }, [props.show]);\r\n\r\n    const closeModalHandler = () => {\r\n        props.closed();\r\n\r\n        setModalClasses([classes.ModalContainer, classes.ModalContainer__Closed]); // KEEP IT OR LEAVE IT\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            props.show ? (\r\n                <div className={modalClasses.join(' ')} style={props.customStyle}>\r\n                    <Backdrop show={props.show} clicked={closeModalHandler} />\r\n                    <div className={classes.Modal}>\r\n                        {props.content ?\r\n                        <div dangerouslySetInnerHTML={{__html: props.content}}></div> :\r\n                        props.children}\r\n                    </div>\r\n                </div>) : null,\r\n            document.getElementById('modal-root')\r\n        )\r\n    );\r\n}  \r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\n\r\nimport classes from './CreatePostComment.module.scss';\r\nimport Modal from '../../../../../../Modal/Modal';\r\nimport Input from '../../../../../../UI/Input/Input';\r\nimport Button from '../../../../../../UI/Button/Button';\r\nimport checkValidity from '../../../../../../../utility/formValidation';\r\n\r\nconst CreatePostComment = (props) => {\r\n    const [postContent, setPostContent] = useState({\r\n        elementType: 'textarea',\r\n        elementConfig: {\r\n            type: 'textarea',\r\n            placeholder: 'Comment'\r\n        },\r\n        label: \"Comment\",\r\n        validation: {\r\n            required: true\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        value: ''\r\n    });\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    const onCreatePostModalClosedHandler = () => {\r\n        props.cancelPostComment(false);\r\n    }\r\n\r\n    const inputChangedHandler = (event) => {\r\n        const copiedPostContent = { ...postContent };\r\n\r\n        copiedPostContent.value = event.target.value;\r\n        copiedPostContent.valid = checkValidity(copiedPostContent.value, postContent.validation);\r\n        copiedPostContent.touched = true;\r\n\r\n        setIsFormValid(copiedPostContent.valid);\r\n        setPostContent(copiedPostContent);\r\n    }\r\n\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {\r\n            index: postContent.value\r\n        };\r\n\r\n        if (isFormValid) {\r\n            props.formSubmitted(formData);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal \r\n                show={props.postCommentEnabled}\r\n                customStyle={{width: '60rem', height: '37rem'}}\r\n                closed={onCreatePostModalClosedHandler}>\r\n                <section className={classes.CreatePostComment}>\r\n                    <span className={classes.CreatePostComment__Close} onClick={onCreatePostModalClosedHandler}>\r\n                        &nbsp;\r\n                    </span>\r\n\r\n                    <header className={classes.CreatePostComment__Header}>\r\n                        <h2>Post a comment</h2>\r\n                    </header>\r\n\r\n                    <form className={classes.CreatePostComment__Form} onSubmit={formSubmitHandler}>\r\n                        <Input \r\n                            elementType={postContent.elementType}\r\n                            elementConfig={postContent.elementConfig}\r\n                            label={postContent.label}\r\n                            value={postContent.value}\r\n                            touched={postContent.touched}\r\n                            isValid={postContent.valid}\r\n                            changed={(event) => inputChangedHandler(event)}\r\n                        />\r\n\r\n                        <div className={classes.CreatePostComment__Form__Cta}>\r\n                            <Button\r\n                                disabled={!isFormValid}\r\n                            >Post</Button>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePostComment;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './PostDetail.module.scss';\r\nimport Button from '../../../UI/Button/Button';\r\nimport PostCommentList from './PostCommentList/PostCommentList';\r\nimport CreatePostComment from '../PostDetail/PostCommentList/PostComment/CreatePostComment/CreatePostComment';\r\n\r\nconst PostDetail = (props) => {\r\n    const [isPostComment, setIsPostComment] = useState(false);\r\n    const [postData, setPostData] = useState({});\r\n\r\n    useEffect(() => {\r\n        setPostData(props.postData);\r\n    }, [props.postData]);\r\n\r\n    let timeout;\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n    }, [timeout]);\r\n\r\n    const getPostCreateTimeDifference = (time) => {\r\n        let now = (new Date()).getTime();\r\n        let updateTime = (new Date(time)).getTime();\r\n        let difference = parseInt((now - updateTime) / 3600000 * 60);\r\n        let timeString = '';\r\n        \r\n        if(difference >= 60 && difference < 1440) {\r\n            timeString += parseInt(difference / 60) + 'h';\r\n        } else if(difference >= 1440) {\r\n            timeString += parseInt(difference / 1440) + 'd';\r\n        } else if(difference <= 0) {\r\n            timeString = '<1m';\r\n        } else {\r\n            timeString = difference + 'm';\r\n        }\r\n\r\n        return timeString;\r\n    }\r\n\r\n    const formatPostCreatedDate = (time) => {\r\n        let date = new Date(time);\r\n        \r\n        return `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()} | ${date.getHours()}:${date.getMinutes()}`;\r\n    }\r\n\r\n    const togglePostComment = (bool) => {\r\n        timeout = setTimeout(() => {\r\n            setIsPostComment(bool);\r\n        }, 200);\r\n    }\r\n\r\n    const formSubmittedHandler = (data) => {\r\n        const formData = {\r\n            postId: props.postData._id,\r\n            ...data\r\n        };\r\n\r\n        props.postCommentSubmit(formData);\r\n        togglePostComment(false);\r\n    }\r\n\r\n    let pageContent = null;\r\n    if (Object.prototype.hasOwnProperty.call(postData, '_id')) {\r\n        pageContent = (\r\n            <section className={classes.PostDetailContainer}>\r\n                {isPostComment ? <CreatePostComment\r\n                    postCommentEnabled={isPostComment}\r\n                    cancelPostComment={togglePostComment}\r\n                    formSubmitted={formSubmittedHandler}\r\n                /> : null}\r\n\r\n                <div className={classes.PostDetail}>\r\n                    <div className={classes.PostDetail__Header}>\r\n                        <div className={classes.PostDetail__Header__Title}>\r\n                            <h2>\r\n                                {props.postData.title}\r\n                            </h2>\r\n                            <span>\r\n                                {props.postData.author.status !== 'admin' ? props.postData.author.firstName + ' ' + props.postData.author.lastName : props.postData.author.firstName}\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className={classes.PostDetail__Header__TimeContainer}>\r\n                            <span className={classes.PostDetail__Header__TimeContainer__Time}>\r\n                                {getPostCreateTimeDifference(props.postData.createdAt)}\r\n                            </span>\r\n\r\n                            <span className={classes.PostDetail__Header__TimeContainer__Tooltip}>\r\n                                {formatPostCreatedDate(props.postData.createdAt)}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.PostDetail__Body}>\r\n                        {props.postData.content}\r\n                    </div>\r\n\r\n                    <div className={classes.PostDetail__Cta}>\r\n                        { props.userId === props.postData.author._id ? <>\r\n                            <Button\r\n                                btnType='BtnDanger'\r\n                                btnSize='BtnSmall'\r\n                                clicked={() => props.postDeleted(props.postData._id)}>Delete</Button>\r\n                            <Button\r\n                                btnType='BtnSecondary'\r\n                                btnSize='BtnSmall'\r\n                                clicked={() => props.postEdited(props.postData._id)}>Edit</Button>\r\n                        </> : null }\r\n                        \r\n                        <Button\r\n                            btnType='BtnPrimary'\r\n                            btnSize='BtnSmall'\r\n                            clicked={() => togglePostComment(true)}>Reply</Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.PostComments}>\r\n                    <h1>Comments</h1>\r\n\r\n                    {props.postData.responses.length > 0 ?\r\n                        <PostCommentList commentList={props.postData.responses} /> :\r\n                        <span className={classes.PostComments__NoCom}>No comments posted yet!</span>}\r\n                </div>\r\n\r\n                <div className={classes.PostDetailContainer__Cta}>\r\n                    <Button\r\n                        btnType='BtnDanger'\r\n                        btnSize='BtnSmall'\r\n                        clicked={props.onBackButtonPressed}>Back</Button>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {pageContent}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(PostDetail);","import React from 'react';\r\n\r\nimport classes from './Option.module.scss';\r\n\r\nconst Option = (props) => {\r\n\r\n    const optionSelected = () => {\r\n        props.onOptionSelected(props.value)\r\n    }\r\n\r\n    return (\r\n        <li className={classes.Option} onClick={optionSelected}>\r\n            {props.value}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Option;","import React from 'react';\r\n\r\nimport classes from './Options.module.scss';\r\nimport Option from './Option/Option';\r\n\r\nconst Options = (props) => {\r\n    const optionSelectedHandler = (value) => {\r\n        props.selectedOption(value);\r\n    }\r\n\r\n    let options = null;\r\n    if(props.show) {\r\n        options = (\r\n            <ul className={classes.SelectOptions} ref={props.optionsRef}>\r\n                {props.options.map(option => {\r\n                    return <Option key={option} value={option} onOptionSelected={optionSelectedHandler}></Option>\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        options\r\n    )\r\n}\r\n\r\nexport default Options;","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport classes from './SelectInput.module.scss';\r\nimport Options from './Options/Options';\r\n\r\nconst SelectInput = (props) => {\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [selected, setSelected] = useState(3);\r\n\r\n    let optionsRef = useRef(null);\r\n    let buttonRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [showOptions]);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if((optionsRef.current && buttonRef.current.contains(event.target))) {\r\n            return;\r\n        }\r\n\r\n        if(!(optionsRef.current && optionsRef.current.contains(event.target))) {\r\n            if(showOptions) {\r\n                setShowOptions(showOptions => !showOptions);\r\n            }\r\n        }\r\n    }\r\n    \r\n    const onSelectInputClickedHandler = () => {\r\n        setShowOptions(showOptions => !showOptions);\r\n    }\r\n\r\n    const onSelectOptionHandler = (value) => {\r\n        setSelected(value);\r\n        setShowOptions(showOptions => !showOptions);\r\n        props.valueSelected(value);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className={classes.SelectInputWrapper}>\r\n                <Options show={showOptions} options={props.itemPerPageList} selectedOption={onSelectOptionHandler} optionsRef={optionsRef} />\r\n                <label>Items per page:</label>\r\n                <div className={classes.SelectInput} onClick={onSelectInputClickedHandler} ref={buttonRef}>{selected}</div>\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default SelectInput;","import React from 'react';\r\n\r\nimport classes from './PaginationRange.module.scss';\r\n\r\nconst PaginationRange = (props) => {\r\n\r\n    return (\r\n        <div className={classes.PaginationRange}>\r\n            {props.itemPerPage * props.currentPage + 1} - {(props.itemPerPage * (props.currentPage + 1)) > props.maxItem ? props.maxItem : props.itemPerPage * (props.currentPage + 1)} of {props.maxItem}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaginationRange;","import React from 'react';\r\n\r\nimport svg from '../../../assets/images/sprite.svg';\r\nimport classes from './PrevButton.module.scss';\r\n\r\nconst PrevButton = (props) => {\r\n    return (\r\n        <button className={classes.PrevButton} disabled={props.disabled} onClick={props.clicked}>\r\n            <svg className={classes.ArrowIcon}>\r\n                <use xlinkHref={`${svg}#icon-cheveron-left`}></use>\r\n            </svg>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default PrevButton;","import React from 'react';\r\n\r\nimport svg from '../../../assets/images/sprite.svg';\r\nimport classes from './NextButton.module.scss';\r\n\r\nconst PrevButton = (props) => {\r\n    return (\r\n        <button className={classes.NextButton} disabled={props.disabled} onClick={props.clicked}>\r\n            <svg className={classes.ArrowIcon}>\r\n                <use xlinkHref={`${svg}#icon-cheveron-right`}></use>\r\n            </svg>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default PrevButton;","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './Paginator.module.scss';\r\nimport SelectInput from '../UI/SelectInput/SelectInput';\r\nimport PaginationRange from './PaginationRange/PaginationRange';\r\nimport PrevButton from './PrevButton/PrevButton';\r\nimport NextButton from './NextButton/NextButton';\r\n\r\nconst Paginator = (props) => {\r\n    const [itemPerPage, setItemPerPage] = useState(props.itemPerPage[0]);\r\n    const [currentPage, setCurrentPage] = useState(props.currentPage);\r\n    const [pageCount, setPageCount] = useState(Math.floor((props.maxItemCount / props.itemPerPage[0])) + ((props.maxItemCount % props.itemPerPage[0] === 0) ? 0 : 1));\r\n    \r\n    useEffect(() => {\r\n        setCurrentPage(props.currentPage);\r\n    }, [props.currentPage]);\r\n    \r\n    useEffect(() => {\r\n        setPageCount(Math.floor((props.maxItemCount / props.itemPerPage[0])) + ((props.maxItemCount % props.itemPerPage[0] === 0) ? 0 : 1));\r\n    }, [props.maxItemCount, props.itemPerPage]);\r\n\r\n    const onValueSelectedHandler = (value) => {\r\n        setItemPerPage(value);\r\n        setCurrentPage(0);\r\n\r\n        // value => item per page\r\n        let pageNumber = Math.floor((props.maxItemCount / value) + ((props.maxItemCount % value === 0) ? 0 : 1));\r\n        setPageCount(pageNumber);\r\n\r\n        props.pagination({ perPage: value, currentPage: 0, pageCount: pageNumber });\r\n    }\r\n\r\n    const onPrevPageHandler = () => {\r\n        setCurrentPage(currentPage => currentPage - 1 < 0 ? 0 : currentPage - 1);\r\n\r\n        props.pagination({ perPage: itemPerPage, currentPage: currentPage - 1 < 0 ? 0 : currentPage - 1, pageCount: pageCount });\r\n    }\r\n\r\n    const onNextPageHandler = () => {\r\n        setCurrentPage(currentPage => currentPage + 1 > pageCount - 1 ? pageCount - 1 : currentPage + 1);\r\n\r\n        props.pagination({ perPage: itemPerPage, currentPage: currentPage + 1 > pageCount - 1 ? pageCount - 1 : currentPage + 1, pageCount: pageCount });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Paginator}>\r\n            <SelectInput itemPerPageList={props.itemPerPage} valueSelected={onValueSelectedHandler} />\r\n            \r\n            <PaginationRange \r\n                itemPerPage={itemPerPage}\r\n                currentPage={currentPage}\r\n                pageCount={pageCount}\r\n                maxItem={props.maxItemCount} />\r\n\r\n            <div className={classes.PaginatorButtons}>\r\n                <PrevButton clicked={onPrevPageHandler} disabled={!props.hasPrevPage} />\r\n                \r\n                <NextButton clicked={onNextPageHandler} disabled={!props.hasNextPage} />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './CourseForum.module.scss';\r\nimport CreatePost from './CreatePost/CreatePost';\r\nimport PostList from './PostList/PostList';\r\nimport PostDetail from './PostList/PostDetail/PostDetail';\r\nimport Button from '../UI/Button/Button';\r\nimport Paginator from '../Paginator/Paginator';\r\n\r\nconst CourseForum = (props) => {\r\n    // const [courseForumData, setCourseForumData] = useState({});\r\n    const [paginationState, setPaginationState] = useState({\r\n        perPage: 3,\r\n        pageCount: 2,\r\n        currentPage: 0,\r\n        hasNextPage: true,\r\n        hasPrevPage: false,\r\n        startIndex: 0,\r\n        endIndex: 0\r\n    });\r\n    const [showPostDetail, setShowPostDetail] = useState(false);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n    const [isPostEditMode, setIsPostEditMode] = useState(false);\r\n    const [postToEdit, setPostToEdit] = useState(null);\r\n\r\n    // const forumData = require('../../assets/course_forum_poc.json');\r\n    // const forumPostList = (forumData || {}).postList || [];\r\n    const forumPostList = props.forumData.posts || [];\r\n\r\n    // console.log(props.forumData)\r\n\r\n    useEffect(() => {\r\n        if (selectedPost !== null)\r\n            setSelectedPost(props.forumData.posts.find(post => post._id === selectedPost._id))\r\n    }, [props.forumData.posts, selectedPost]);\r\n\r\n    useEffect(() => {\r\n        // Initial state\r\n        setPaginationState({\r\n            perPage: 3,\r\n            pageCount: Math.floor((forumPostList.length / 3)) + ((forumPostList.length % 3 === 0) ? 0 : 1),\r\n            currentPage: 0,\r\n            hasNextPage: 3 * 1 < forumPostList.length,\r\n            hasPrevPage: false,\r\n            startIndex: 0,\r\n            endIndex: 3\r\n        });\r\n    }, [forumPostList.length]);\r\n    \r\n    const onPaginationChangeHandler = (paginationData) => {\r\n        // console.log(paginationData); // TODO REMOVE\r\n        \r\n        let currentPage = paginationData.currentPage;\r\n        let hasNextPage = paginationData.perPage * (paginationData.currentPage + 1) < forumPostList.length;\r\n        let hasPrevPage = paginationData.currentPage > 0;\r\n        let startIndex = paginationData.currentPage * paginationData.perPage;\r\n        let endIndex = startIndex + paginationData.perPage >= forumPostList.length ? forumPostList.length : startIndex + paginationData.perPage;\r\n\r\n        setPaginationState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                currentPage,\r\n                hasPrevPage,\r\n                hasNextPage,\r\n                startIndex,\r\n                endIndex\r\n            }\r\n        })\r\n    }\r\n\r\n    const onPostSelectedHandler = (postId) => {\r\n        let selectedPost = forumPostList.find(post => post._id === postId);\r\n\r\n        setSelectedPost(selectedPost);\r\n        setShowPostDetail(true);\r\n    }\r\n\r\n    const onBackButtonPressedHandler = () => {\r\n        setSelectedPost(null);\r\n        setShowPostDetail(false);\r\n    }\r\n\r\n    const onCreatePostPressedHandler = () => {\r\n        setPostToEdit(null);\r\n        setIsPostEditMode(false);\r\n        props.toggleCreatePostMode(true);\r\n    }\r\n\r\n    const onCreatePostCancelledHandler = () => {\r\n        props.toggleCreatePostMode(false);\r\n    }\r\n\r\n    const onCreatePostHandler = (data) => {\r\n        props.forumPostCreated(data);\r\n    }\r\n\r\n    const onEditPostHandler = (data) => {\r\n        props.forumPostEdited({ ...data, postId: postToEdit._id });\r\n    }\r\n\r\n    const onPostDeleted = (postId) => {\r\n        props.onPostDeleted(postId);\r\n\r\n        setSelectedPost(null);\r\n        setShowPostDetail(false);\r\n    }\r\n\r\n    const onPostEdit = (postId) => {\r\n        let editPost = forumPostList.find(post => post._id === postId);\r\n\r\n        // TODO: I may have to change this\r\n        if (typeof editPost !== 'undefined') {\r\n            setSelectedPost(null);\r\n            setShowPostDetail(false);\r\n            setPostToEdit(editPost);\r\n            setIsPostEditMode(true);\r\n            props.toggleCreatePostMode(true);\r\n        }\r\n    }\r\n\r\n    let pageContent = !showPostDetail ? (<>\r\n        {!props.createPostMode ? <>\r\n            <PostList\r\n                postList={forumPostList.slice(paginationState.startIndex, paginationState.endIndex)}\r\n                onPostSelected={onPostSelectedHandler}\r\n            />\r\n\r\n            <div className={classes.CourseForum__Cta}>\r\n                <Button clicked={onCreatePostPressedHandler}>Create a Post</Button>\r\n\r\n                <Paginator \r\n                    itemPerPage={[3, 5, 10]}\r\n                    maxItemCount={forumPostList.length}\r\n                    pagination={onPaginationChangeHandler}\r\n                    currentPage={paginationState.currentPage}\r\n                    hasNextPage={paginationState.hasNextPage}\r\n                    hasPrevPage={paginationState.hasPrevPage}\r\n                />\r\n            </div>\r\n        </> : <CreatePost \r\n            createPost={onCreatePostHandler}\r\n            createPostCancel={onCreatePostCancelledHandler}\r\n            isEditMode={isPostEditMode}\r\n            editFormFields={postToEdit}\r\n            editPost={onEditPostHandler}\r\n        />}\r\n        </>) : \r\n        <PostDetail\r\n            postData={selectedPost}\r\n            onBackButtonPressed={onBackButtonPressedHandler}\r\n            postDeleted={onPostDeleted}\r\n            postEdited={onPostEdit}\r\n            postCommentSubmit={props.postCommentSubmitted}\r\n        />;\r\n\r\n    return (\r\n        <section className={classes.CourseForum}>\r\n            {pageContent}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CourseForum;","import React, { Fragment } from 'react';\r\n\r\nimport classes from './CourseMenu.module.scss';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst CourseMenu = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.CourseMenu__Intro} dangerouslySetInnerHTML={{__html: props.courseIntro}}></div>\r\n\r\n            <div className={classes.CourseMenu__Misc}>\r\n                {typeof props.courseQuiz !== 'undefined' ?\r\n                    <Button clicked={props.onQuizModeActivated}>Quiz</Button> : null}\r\n            </div>\r\n\r\n            <div className={classes.CourseMenu__Cta}>\r\n                <Button clicked={() => props.onSectionSelect(0)}>1. Hafta</Button>\r\n                <Button disabled={true}>2. Hafta</Button>\r\n                <Button disabled={true}>3. Hafta</Button>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseMenu;","import React from 'react';\r\n\r\nimport svg from '../../../assets/images/sprite.svg';\r\nimport classes from './CourseSubSection.module.scss';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst CourseSubSection = (props) => {\r\n    let subSectionData = props.subSectionData;\r\n    // console.log(((subSectionData || {}).content || [])[props.subSectionPageIndex] || 'END');\r\n\r\n    return (\r\n        <section className={classes.CourseSubSection}>\r\n            <header className={classes.CourseSubSection__Header}>\r\n                <h1>{subSectionData.title}</h1>\r\n            </header>\r\n\r\n            <div dangerouslySetInnerHTML={{__html: ((subSectionData || {}).content || [])[props.subSectionPageIndex].index}}></div>\r\n\r\n            <div className={classes.CourseSubSection__Cta}>\r\n                <Button clicked={props.onBackClicked}>\r\n                    <svg className={classes.CourseSubSection__ButtonIcon}>\r\n                        <use xlinkHref={`${svg}#icon-arrow-thick-left`}></use>\r\n                    </svg>\r\n                </Button>\r\n                \r\n                {props.showNext ? <Button clicked={props.onNextClicked}>\r\n                    <svg className={classes.CourseSubSection__ButtonIcon}>\r\n                        <use xlinkHref={`${svg}#icon-arrow-thick-right`}></use>\r\n                    </svg>\r\n                </Button> : null}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CourseSubSection;","import React, { useState } from 'react';\r\n\r\nimport svg from '../../assets/images/sprite.svg';\r\nimport classes from './CourseSection.module.scss';\r\nimport CourseSubSection from './CourseSubSection/CourseSubSection';\r\n\r\nconst CourseSection = (props) => {\r\n    const [isAtIntro, setIsAtIntro] = useState(true);\r\n    const [subSectionIndex, setSubSectionIndex] = useState(0);\r\n    const [subSectionPageIndex, setSubSectionPageIndex] = useState(0); // Signifies where we are in the subsection\r\n\r\n    let sectionData = props.sectionData;\r\n    let totalSectionCount = (sectionData.sections || []).length;\r\n    let currentSectionLength = (((sectionData.sections || [])[subSectionIndex] || {}).content || []).length;\r\n\r\n    const resetToSectionMenu = () => {\r\n        setIsAtIntro(true);\r\n        setSubSectionIndex(0);\r\n        setSubSectionPageIndex(0);\r\n    }\r\n\r\n    const goToNextSubSection = () => {\r\n        if (subSectionIndex + 1 >= totalSectionCount) {\r\n            return;\r\n        } else {\r\n            setSubSectionIndex(subSectionIndex + 1);\r\n            setSubSectionPageIndex(0);\r\n        }\r\n    }\r\n\r\n    const goToPrevSubSection = () => {\r\n        if (subSectionIndex - 1 < 0) {\r\n            resetToSectionMenu();\r\n        } else {\r\n            let prevSubSectionLength = (((sectionData.sections || [])[subSectionIndex - 1] || {}).content || []).length;\r\n\r\n            setSubSectionIndex(subSectionIndex - 1);\r\n            setSubSectionPageIndex(prevSubSectionLength - 1);\r\n        }\r\n    }\r\n\r\n    const onSubSectionSelectedHandler = (key) => {\r\n        setIsAtIntro(false);\r\n        setSubSectionIndex(key);\r\n        setSubSectionPageIndex(0);\r\n    }\r\n\r\n    // Method to handle when back button in the sub-section is clicked\r\n    const onBackClickedHandler = () => {\r\n        if(subSectionPageIndex <= 0) {\r\n            goToPrevSubSection();\r\n        } else {\r\n            setSubSectionPageIndex(subSectionPageIndex - 1);\r\n        }\r\n    }\r\n\r\n    // Method to handle when next button in the sub-section is clicked\r\n    const onNextClickedHandler = () => {\r\n        if(subSectionPageIndex + 1 >= currentSectionLength) {\r\n            // GO TO NEXT SUB SECTION\r\n            goToNextSubSection();\r\n        } else {\r\n            // GO TO NEXT PAGE IN THE SAME SUB SECTION\r\n            setSubSectionPageIndex(subSectionPageIndex + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Section}>\r\n            <button className={classes.BackMenu__Button} onClick={props.onBackToMainMenu}>\r\n                <svg className={classes.BackMenu__Icon}>\r\n                    <use xlinkHref={`${svg}#icon-list`}></use>\r\n                </svg>\r\n            </button>\r\n            \r\n            <div className={classes.Section__Container}>\r\n                <header className={classes.Section__Title}>\r\n                    <h1>{sectionData.name}</h1>\r\n                </header>\r\n\r\n                {isAtIntro ? <section className={classes.Section__Content}>\r\n                    <h3>Konu Dağılımı</h3>\r\n                    \r\n                    <ul className={classes.Section__List}>\r\n                        {sectionData.sections.map((section, i) => {\r\n                            return <li key={i} className={classes.Section__ListItem}>\r\n                                <span>\r\n                                    {section.title}\r\n                                </span>\r\n                                \r\n                                <button className={classes.Section__ListButton} onClick={() => onSubSectionSelectedHandler(i)}>\r\n                                    <svg className={classes.Section__ListIcon}>\r\n                                        <use xlinkHref={`${svg}#icon-play`}></use>\r\n                                    </svg>\r\n                                </button>\r\n                            </li>;\r\n                        })}\r\n                    </ul>\r\n                </section> : <CourseSubSection \r\n                    subSectionData={sectionData.sections[subSectionIndex] || {}}\r\n                    subSectionPageIndex={subSectionPageIndex}\r\n                    onBackClicked={onBackClickedHandler}\r\n                    onNextClicked={onNextClickedHandler}\r\n                    showNext={!(subSectionIndex + 1 >= totalSectionCount && subSectionPageIndex + 1 >= currentSectionLength)}\r\n                />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseSection;","import React from 'react';\r\n\r\nimport classes from './QuizIntro.module.scss';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst QuizIntro = (props) => {\r\n    return (\r\n        <section className={classes.QuizIntro}>\r\n            <header className={classes.QuizIntro__Header}>\r\n                <h1>\r\n                    {props.quizTitle}\r\n                </h1>\r\n\r\n                <div>\r\n                    Henüz bu quizi tamamlamadınız.\r\n                </div>\r\n            </header>\r\n            \r\n            <div className={classes.QuizIntro__Cta}>\r\n                <Button clicked={props.onQuizStarted}>\r\n                    BAŞLA!\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default QuizIntro;","import React from 'react';\r\n\r\nimport svg from '../../../../assets/images/sprite.svg';\r\nimport classes from './QuestionResult.module.scss';\r\n\r\nconst QuestionResult = (props) => {\r\n    let iconName = props.isCorrect ? 'checkmark-outline' : 'close-outline';\r\n    let classColor = props.isCorrect ? classes.QuestionResult__Icon__Correct : classes.QuestionResult__Icon__Incorrect;\r\n\r\n    return (\r\n        <div className={classes.QuestionResult}>\r\n            <span className={classes.QuestionResult__QuestionNumber}>\r\n                {props.questionNumber}\r\n            </span>\r\n            <svg className={[classes.QuestionResult__Icon, classColor].join(' ')}>\r\n                <use xlinkHref={`${svg}#icon-${iconName}`}></use>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionResult;","import React from 'react';\r\n\r\nimport classes from './QuizEnd.module.scss';\r\nimport QuestionResult from './QuestionResult/QuestionResult';\r\n\r\nconst QuizEnd = (props) => {\r\n    const answers = props.answers || [];\r\n\r\n    let visualResult = answers.map((answer, i) => {\r\n        return (\r\n            <QuestionResult\r\n                key={i}\r\n                isCorrect={answer}\r\n                questionNumber={i + 1}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <section className={classes.QuizEnd}>\r\n            <header className={classes.QuizEnd__Header}>\r\n                <h1>\r\n                    Quiz Sonucu\r\n                </h1>\r\n            </header>\r\n\r\n            <div className={classes.QuizEnd__Content}>\r\n                <div className={classes.QuizEnd__Content__Text}>\r\n                    Quizi tamamladınız.\r\n                </div>\r\n\r\n                <div className={classes.QuizEnd__Content__Visual}>\r\n                    {visualResult}\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default QuizEnd;","import React, { useRef, useEffect } from 'react';\r\n\r\nimport classes from './RadioButton.module.scss';\r\n\r\nconst RadioButton = (props) => {\r\n    let radioRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        radioRef.current.checked = false;\r\n    }, [props.label]);\r\n\r\n    return (\r\n        <div className={classes.RadioGroup}>\r\n            <input type=\"radio\" className={classes.RadioButton__Input} id={props.id} name={props.name} ref={radioRef} />\r\n            <label htmlFor={props.id} className={classes.RadioButton__Label} onClick={props.selected}>\r\n                <span className={classes.RadioButton}></span>\r\n                <span>{props.label}</span>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioButton;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport classes from './SuccessCheck.module.scss';\r\n\r\nconst SuccessCheck = (props) => {\r\n\r\n    const animationData = require(`../../../../assets/anim/${ props.isSuccess ? 'success_check.json' : 'failure_cross.json' }`);\r\n    const defaultOptions = {\r\n        loop: false,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.SuccessCheck}>\r\n            <Lottie \r\n                options={defaultOptions}\r\n                height={window.innerWidth > 800 ? 150 : 100}\r\n                width={window.innerWidth > 800 ? 150 : 100}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessCheck;","import React, { useState, useEffect } from 'react';\r\n\r\nimport svg from '../../../../assets/images/sprite.svg';\r\nimport classes from './Question.module.scss';\r\nimport RadioButton from '../../../UI/RadioButton/RadioButton';\r\nimport Button from '../../../UI/Button/Button';\r\nimport SuccessCheck from '../SuccessCheck/SuccessCheck';\r\nimport Modal from '../../../Modal/Modal';\r\n\r\nconst Question = (props) => {\r\n    const [selectedChoice, setSelectedChoice] = useState(null);\r\n    const [showCaseModal, setShowCaseModal] = useState(false);\r\n\r\n    let timeout;\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n    }, [timeout]);\r\n\r\n    const onChoiceMarkedHandler = (index) => {\r\n        setSelectedChoice(index)\r\n    }\r\n\r\n    const answerSelected = () => {\r\n        props.onAnswerSelected(props.questionNumber, selectedChoice);\r\n        setSelectedChoice(null);\r\n    }\r\n\r\n    const onCaseModalOpenedHandler = () => {\r\n        timeout = setTimeout(() => {\r\n            setShowCaseModal(true);\r\n        }, 200);\r\n    }\r\n\r\n    const onCaseModalClosedHandler = () => {\r\n        timeout = setTimeout(() => {\r\n            setShowCaseModal(false);\r\n        }, 200);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Question}>\r\n            <span className={classes.Question__Number}>\r\n                {`Q${props.questionNumber}`}\r\n            </span>\r\n\r\n            <Modal\r\n                show={showCaseModal}\r\n                customStyle={{width: '100rem', height: '90rem'}}\r\n                closed={onCaseModalClosedHandler}\r\n                content={props.questionCase}\r\n            />\r\n\r\n            <div className={classes.Question__Text}>\r\n                {props.questionText}\r\n\r\n                { props.questionType === 'case study' ?\r\n                    <button onClick={onCaseModalOpenedHandler}>\r\n                        Senaryo\r\n\r\n                        <svg className={classes.Question__Text__CaseIcon}>\r\n                            <use xlinkHref={`${svg}#icon-redo2`}></use>\r\n                        </svg>\r\n                    </button> : null\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.Question__Choices}>\r\n                {props.questionChoices.map((choice, index) => {\r\n                    return <RadioButton \r\n                        key={`choice${index}`}\r\n                        id={`choice${index}`}\r\n                        label={choice.text}\r\n                        name={`question${props.questionNumber}`}\r\n                        selected={() => onChoiceMarkedHandler(index)}\r\n                    />\r\n                })}\r\n            </div>\r\n\r\n            <div className={classes.Question__Cta}>\r\n                {props.answered ? <SuccessCheck isSuccess={props.success} /> : null}\r\n                <Button btnType=\"BtnDanger\" clicked={answerSelected} disabled={selectedChoice === null}>\r\n                    <span className={classes.Question__Select}>\r\n                        <span>\r\n                            Select\r\n                        </span>\r\n                        <svg className={classes.Question__Select__Icon}>\r\n                            <use xlinkHref={`${svg}#icon-checkmark`}></use>\r\n                        </svg>\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;","import React from 'react';\r\n\r\nimport classes from './ProgressBar.module.scss';\r\n\r\nconst ProgressBar = (props) => {\r\n\r\n    let progress = {\r\n        width: `${props.questionNumber * (100 / props.questionAmount)}%`,\r\n        borderTopRightRadius: props.questionNumber === props.questionAmount ? '5px' : '0px',\r\n        borderBottomRightRadius: props.questionNumber === props.questionAmount ? '5px' : '0px'\r\n    };\r\n\r\n    return (\r\n        <div className={classes.ProgressBar}>\r\n            <div className={classes.ProgressBar__Background}></div>\r\n            <div className={classes.ProgressBar__Foreground} style={progress}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport classes from './QuizContent.module.scss';\r\nimport Question from './Question/Question';\r\nimport ProgressBar from '../../ProgressBar/ProgressBar';\r\n\r\nconst QuizContent = (props) => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [success, setSuccess] = useState(false);\r\n    const [isQuestionAnswered, setIsQuestionAnswered] = useState(false);\r\n\r\n    let timeout;\r\n    const questionAmount = props.questionAmount;\r\n    const questionList = props.questions;\r\n    let questionAnswerList = useRef([]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n    }, [timeout]);\r\n\r\n    const onAnswerSelectedHandler = (answeredQuestionNumber, choiceIndex) => {\r\n        let isCorrect = questionList[answeredQuestionNumber - 1].choices[choiceIndex].isCorrect;\r\n\r\n        setSuccess(isCorrect);\r\n        setIsQuestionAnswered(true);\r\n        questionAnswerList.current.push(isCorrect);\r\n\r\n        if(currentQuestion < questionAmount - 1) {\r\n            // Next question\r\n            timeout = setTimeout(() => {\r\n                setCurrentQuestion(currentQuestion => currentQuestion + 1);\r\n                setSuccess(false);\r\n                setIsQuestionAnswered(false);\r\n            }, 2000);\r\n        } else {\r\n            // Quiz is finished\r\n            timeout = setTimeout(() => {\r\n                props.onQuizEnd(questionAnswerList.current);\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ProgressBar questionAmount={questionAmount} questionNumber={currentQuestion+1} />\r\n            <section className={classes.QuizContent}>\r\n                <Question\r\n                    questionNumber={currentQuestion + 1}\r\n                    questionText={questionList[currentQuestion].text}\r\n                    questionChoices={questionList[currentQuestion].choices}\r\n                    questionType={questionList[currentQuestion].type}\r\n                    questionCase={questionList[currentQuestion].case || ''}\r\n                    onAnswerSelected={onAnswerSelectedHandler}\r\n                    success={success}\r\n                    answered={isQuestionAnswered}\r\n                />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizContent;","import React, { useState } from 'react';\r\n\r\nimport classes from './QuizContainer.module.scss';\r\nimport Button from '../UI/Button/Button';\r\nimport QuizIntro from './QuizIntro/QuizIntro';\r\nimport QuizEnd from './QuizEnd/QuizEnd';\r\nimport QuizContent from './QuizContent/QuizContent';\r\n\r\nconst QuizContainer = (props) => {\r\n    const [isAtQuizIntro, setIsAtQuizIntro] = useState(true);\r\n    const [isQuizFinished, setIsQuizFinished] = useState(false);\r\n    const [quizResultData, setQuizResultData] = useState([]);\r\n\r\n    // const content = require('../../assets/quiz_poc.json');\r\n    const quizData = {\r\n        ...props.quizData,\r\n        numberOfQuestions: props.quizData.questions.length\r\n    };\r\n\r\n    const onQuizStartedHandler = () => {\r\n        setIsAtQuizIntro(false);\r\n    }\r\n\r\n    const onQuizFinishedHandler = (quizReport) => {\r\n        setQuizResultData(quizReport);\r\n\r\n        setIsQuizFinished(true);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Quiz}>\r\n            <div className={classes.Quiz__Exit}>\r\n                <Button btnType=\"BtnDanger\" clicked={props.onQuizExited}>\r\n                    <span>\r\n                        &nbsp;\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n\r\n            {isAtQuizIntro ?\r\n                <QuizIntro\r\n                    onQuizStarted={onQuizStartedHandler}\r\n                    quizTitle={(quizData || {}).name || ''}\r\n                /> :\r\n                !isQuizFinished ? <QuizContent\r\n                    questionAmount={(quizData || {}).numberOfQuestions || 0}\r\n                    questions={(quizData || {}).questions || []}\r\n                    onQuizEnd={onQuizFinishedHandler}\r\n                /> : <QuizEnd answers={quizResultData} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuizContainer;","import React, { Component, Fragment } from 'react';\r\n\r\nimport classes from './Course.module.scss';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport axiosCourse from '../../axiosUtility/axios-course';\r\nimport axiosForum from '../../axiosUtility/axios-forum';\r\nimport axiosPost from '../../axiosUtility/axios-post';\r\nimport CourseNavigation from '../../components/CourseNavigation/CourseNavigation';\r\nimport CourseInfo from '../../components/CourseInfo/CourseInfo';\r\nimport CourseForum from '../../components/CourseForum/CourseForum';\r\nimport CourseMenu from '../../components/CourseMenu/CourseMenu';\r\nimport CourseSection from '../../components/CourseSection/CourseSection';\r\nimport Quiz from '../../components/Quiz/QuizContainer';\r\n\r\nclass Course extends Component {\r\n    state = {\r\n        courseNavItems: [{\r\n            name: 'Info',\r\n            icon: 'library',\r\n            active: true\r\n        },\r\n        {\r\n            name: 'Course',\r\n            icon: 'education',\r\n            active: false\r\n        },\r\n        {\r\n            name: 'Forums',\r\n            icon: 'bubbles2',\r\n            active: false\r\n        }],\r\n        isLoading: false,\r\n        courseData: {},\r\n        courseForum: {},\r\n        currentWeek: 0,\r\n        sectionIndex: 0,\r\n        currentPage: 0,\r\n        isOnMainMenu: true,\r\n        isOnQuizMode: false,\r\n        isOnCreatePostMode: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        axiosCourse.get('/' + this.props.match.params.id).then(response => {\r\n            this.setState({\r\n                isLoading: false\r\n            });\r\n            return response.data.course;\r\n        }).then(fetchedCourse => {\r\n            this.setState({\r\n                courseData: fetchedCourse\r\n            });\r\n\r\n            return axiosForum.get('/course/' + fetchedCourse._id);\r\n        }).then(forumResp => {\r\n            // console.log(forumResp.data.forum)\r\n\r\n            this.setState({\r\n                courseForum: forumResp.data.forum\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n\r\n            this.props.history.push('/courses');\r\n        });\r\n\r\n        // TODO: REMOVE\r\n        // const content = require('../../assets/course_poc.json');\r\n\r\n        // this.setState({\r\n        //     courseData: content\r\n        // });\r\n    }\r\n\r\n    onNavigationItemClickedHandler = (index) => {\r\n        let copiedCourseNavItems = [...this.state.courseNavItems];\r\n\r\n        let modifiedCourseNavItems = copiedCourseNavItems.map((item, i) => {\r\n            return {\r\n                ...item,\r\n                active: i === index\r\n            };\r\n        });\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                courseNavItems: modifiedCourseNavItems\r\n            }\r\n        });\r\n    }\r\n\r\n    onQuizModeActivatedHandler = () => {\r\n        this.setState({\r\n            isOnMainMenu: false,\r\n            isOnQuizMode: true\r\n        });\r\n    }\r\n\r\n    onQuizExitedHandler = () => {\r\n        this.setState({\r\n            isOnMainMenu: true,\r\n            isOnQuizMode: false\r\n        });\r\n    }\r\n\r\n    onSectionSelectedHandler = (index) => {\r\n        this.setState({\r\n            isOnMainMenu: false\r\n        });\r\n    }\r\n\r\n    onBackToMainMenuHandler = () => {\r\n        this.setState({\r\n            isOnMainMenu: true\r\n        });\r\n    }\r\n\r\n    onCreatePostModeToggledHandler = (bool) => {\r\n        this.setState({\r\n            isOnCreatePostMode: bool\r\n        });\r\n    }\r\n\r\n    onForumPostCreatedHandler = (data) => {\r\n        let formData = {\r\n            ...data,\r\n            forumId: this.state.courseForum._id\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        };\r\n\r\n        axiosPost.post('', formData, config).then(result => {\r\n            console.log(result); // TODO remove\r\n\r\n            return axiosForum.get('/course/' + this.state.courseData._id);\r\n        }).then(newForumResponse => {\r\n            this.setState({\r\n                courseForum: newForumResponse.data.forum,\r\n                isOnCreatePostMode: false\r\n            });\r\n        });\r\n    }\r\n\r\n    onForumPostEditedHandler = (data) => {\r\n        const formData = {\r\n            title: data.title,\r\n            content: data.content\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        };\r\n\r\n        axiosPost.put(`/${data.postId}`, formData, config).then(result => {\r\n            console.log(result); // TODO remove\r\n\r\n            return axiosForum.get('/course/' + this.state.courseData._id);\r\n        }).then(newForumResponse => {\r\n            this.setState({\r\n                courseForum: newForumResponse.data.forum,\r\n                isOnCreatePostMode: false\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    onForumPostDeletedHandler = (postId) => {\r\n        let config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        };\r\n\r\n        axiosPost.delete(`/${postId}`, config).then(result => {\r\n            console.log(result);\r\n\r\n            const copiedCourseForum = { ...this.state.courseForum };\r\n\r\n            let copiedCourseForumPosts = copiedCourseForum.posts.filter(post => post._id !== postId);\r\n\r\n            copiedCourseForum.posts = [...copiedCourseForumPosts];\r\n\r\n            this.setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    courseForum: copiedCourseForum\r\n                }\r\n            });\r\n        }).catch(error => {\r\n            console.log(error.response.data.message);\r\n        });        \r\n    }\r\n\r\n    onForumPostRespondedHandler = (formData) => {\r\n        let config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        };\r\n\r\n        axiosPost.put(`/respond/${formData.postId}`, { index: formData.index }, config).then(response => {\r\n            return axiosForum.get('/course/' + this.state.courseData._id);\r\n        }).then(newForumResponse => {\r\n            this.setState({\r\n                courseForum: newForumResponse.data.forum\r\n            });\r\n        }).catch(error => {\r\n            // TODO: A Better error feedback should be implemented\r\n            console.log(error.response.data.message);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let courseLandingData = (this.state.courseData || {}).landing || {};\r\n        let activeNavigation = (this.state.courseNavItems.find(item => item.active) || {}).name;\r\n        let section = ((this.state.courseData || {}).weeks || [])[this.state.sectionIndex] || {};\r\n        let courseName = (this.state.courseData || {}).name;\r\n        let courseQuiz = (this.state.courseData || {}).quiz;\r\n        let courseIntro = (this.state.courseData || {}).introduction;\r\n        let pageContent = null;\r\n        \r\n        switch(activeNavigation) {\r\n            case 'Info':\r\n                pageContent = <CourseInfo landingData={courseLandingData} />;\r\n                break;\r\n            case 'Course':\r\n                pageContent = (\r\n                    <div className={classes.Course}>\r\n                        {this.state.isOnMainMenu ?\r\n                            <CourseMenu\r\n                                courseIntro={courseIntro}\r\n                                onSectionSelect={this.onSectionSelectedHandler}\r\n                                courseQuiz={courseQuiz._id}\r\n                                onQuizModeActivated={this.onQuizModeActivatedHandler}\r\n                            />\r\n                        : !this.state.isOnQuizMode ?\r\n                            <CourseSection\r\n                                onBackToMainMenu={this.onBackToMainMenuHandler}\r\n                                sectionData={section}\r\n                            /> :\r\n                            <Quiz\r\n                                quizData={courseQuiz}\r\n                                onQuizExited={this.onQuizExitedHandler} />\r\n                        }\r\n                    </div>\r\n                );\r\n                break;\r\n            case 'Forums':\r\n                pageContent = <CourseForum \r\n                    createPostMode={this.state.isOnCreatePostMode}\r\n                    toggleCreatePostMode={this.onCreatePostModeToggledHandler}\r\n                    forumData={this.state.courseForum}\r\n                    forumPostCreated={this.onForumPostCreatedHandler}\r\n                    forumPostEdited={this.onForumPostEditedHandler}\r\n                    onPostDeleted={this.onForumPostDeletedHandler}\r\n                    postCommentSubmitted={this.onForumPostRespondedHandler}\r\n                />;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        let coursePageContent = (\r\n            <span className={classes.Course__Loader}>\r\n                <Loader strokeWidth={4} />\r\n            </span>\r\n        );\r\n\r\n        if (!this.state.isLoading) {\r\n            coursePageContent = (\r\n                <Fragment>\r\n                    <h1 className={classes.Course__Title}>\r\n                        {courseName}\r\n                    </h1>\r\n\r\n                    <CourseNavigation\r\n                        navItemList={this.state.courseNavItems}\r\n                        navigationItemClicked={this.onNavigationItemClickedHandler}\r\n                    />\r\n\r\n                    {pageContent}\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {coursePageContent}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Course;","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport CourseList from '../CourseList/CourseList';\r\nimport Course from '../Course/Course';\r\n\r\nclass CourseContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path={this.props.match.url + '/:id'} component={Course} />\r\n                <Route path={this.props.match.url + '/'} component={CourseList} />\r\n                <Redirect to={this.props.match.url + '/'} />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseContainer;","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nconst Logout = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.logout());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Redirect to=\"/\" />\r\n    );\r\n}\r\n\r\nexport default Logout","import React, { useEffect } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { connect, useDispatch } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport Authentication from './containers/Authentication/Authentication';\nimport CourseContainer from './containers/CourseContainer/CourseContainer';\nimport Logout from './components/Auth/Logout/Logout';\n\nimport * as actions from './store/actions/index';\n\nconst App = (props) => {\n\tlet dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(actions.authCheckState());\n\t}, [dispatch]);\n\n\tlet routes = (\n\t\t<Switch>\n\t\t\t<Route path='/logout' component={Logout} />\n\t\t\t<Route path='/auth' component={Authentication} />\n\t\t\t<Route path='/contact' render={() => <div>CONTACT COMPONENT</div>} />\n\t\t\t<Route path='/about' render={() => <div>ABOUT COMPONENT</div>} />\n\t\t\t<Route path='/courses' component={CourseContainer} />\n\t\t\t<Route path='/' exact render={() => <div>HOME COMPONENT</div>} />\n\t\t\t<Redirect to='/' />\n\t\t</Switch>\n\t)\n\n\treturn (\n\t\t<Layout>\n\t\t\t{routes}\n\t\t</Layout>\n\t);\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tisAuthenticated: state.isAuth\n\t};\n};\n\nexport default connect(mapStateToProps, null)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    error: null,\r\n    token: null,\r\n    isAuth: false,\r\n    userId: null,\r\n    userEmail: null,\r\n    userStatus: null,\r\n    redirectPath: null,\r\n    successfullSignup: false\r\n};\r\n\r\n// Utility function for state management\r\nconst updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.LOGIN_START:\r\n            return updateObject(state, {\r\n                isLoading: true,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                username: null,\r\n                redirectPath: null,\r\n                userStatus: null\r\n            });\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                token: action.token,\r\n                isAuth: true,\r\n                userId: action.userId,\r\n                username: action.username,\r\n                redirectPath: action.path,\r\n                userStatus: action.status\r\n            });\r\n        case actionTypes.LOGIN_FAIL:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: action.error,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                username: null,\r\n                redirectPath: null,\r\n                userStatus: null\r\n            });\r\n        case actionTypes.LOGOUT:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                username: null,\r\n                redirectPath: null,\r\n                userStatus: null\r\n            });\r\n        case actionTypes.SIGNUP_START:\r\n            return updateObject(state, {\r\n                isLoading: true,\r\n                error: null,\r\n                redirectPath: null\r\n            });\r\n        case actionTypes.SIGNUP_SUCCESS:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                redirectPath: action.path,\r\n                successfullSignup: true\r\n            });\r\n        case actionTypes.SIGNUP_FAIL:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: action.error,\r\n                redirectPath: null,\r\n                successfullSignup: false\r\n            });\r\n        case actionTypes.SIGNUP_REDIRECT:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                redirectPath: null,\r\n                successfullSignup: false\r\n            });\r\n        case actionTypes.PASSWORD_RESET_REQUEST_START:\r\n            return updateObject(state, {\r\n                isLoading: true,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: null\r\n            });\r\n        case actionTypes.PASSWORD_RESET_REQUEST_SUCCESS:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: action.path\r\n            });\r\n        case actionTypes.PASSWORD_RESET_REQUEST_FAIL:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: action.error,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: action.path\r\n            });\r\n        case actionTypes.PASSWORD_RESET_START:\r\n            return updateObject(state, {\r\n                isLoading: true,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: null\r\n            });\r\n        case actionTypes.PASSWORD_RESET_SUCCESS:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: null,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: action.path\r\n            });\r\n        case actionTypes.PASSWORD_RESET_FAIL:\r\n            return updateObject(state, {\r\n                isLoading: false,\r\n                error: action.error,\r\n                token: null,\r\n                isAuth: false,\r\n                userId: null,\r\n                redirectPath: action.path\r\n            });\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(authReducer, composeEnhancer(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <HashRouter basename=\"elearning-app\">\n            <App />\n        </HashRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}